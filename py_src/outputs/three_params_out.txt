18:35 bilby INFO    : Running for label 'three_params', output will be saved to '../data/nested_sampling/'
18:35 bilby INFO    : Analysis priors:
18:35 bilby INFO    : omega_gw=LogUniform(minimum=1e-09, maximum=1e-05, name='omega_gw', latex_label='omega_gw', unit=None, boundary=None)
18:35 bilby INFO    : phi0_gw=Uniform(minimum=0.0, maximum=3.141592653589793, name='phi0_gw', latex_label='phi0_gw', unit=None, boundary=None)
18:35 bilby INFO    : psi_gw=Uniform(minimum=0.0, maximum=3.141592653589793, name='psi_gw', latex_label='psi_gw', unit=None, boundary=None)
18:35 bilby INFO    : iota_gw=1.0
18:35 bilby INFO    : delta_gw=1.0
18:35 bilby INFO    : alpha_gw=1.0
18:35 bilby INFO    : h=0.01
18:35 bilby INFO    : f00=327.8470205611185
18:35 bilby INFO    : f01=205.53069910059
18:35 bilby INFO    : f02=303.0909794113198
18:35 bilby INFO    : f03=326.600561967271
18:35 bilby INFO    : f04=348.5592316999902
18:35 bilby INFO    : f05=112.94972319066429
18:35 bilby INFO    : f06=346.5319964932129
18:35 bilby INFO    : f07=215.6088104676294
18:35 bilby INFO    : f08=190.2678373613727
18:35 bilby INFO    : f09=193.7156834116254
18:35 bilby INFO    : f010=238.004053174088
18:35 bilby INFO    : f011=172.642909924795
18:35 bilby INFO    : f012=125.2002451675204
18:35 bilby INFO    : f013=277.9377069492822
18:35 bilby INFO    : f014=317.3789419337929
18:35 bilby INFO    : f015=316.12398422451724
18:35 bilby INFO    : f016=216.3733370950632
18:35 bilby INFO    : f017=218.811840394717
18:35 bilby INFO    : f018=170.93736991146392
18:35 bilby INFO    : f019=266.8691669720664
18:35 bilby INFO    : f020=245.4261196602377
18:35 bilby INFO    : f021=607.6775384652
18:35 bilby INFO    : f022=367.7671211299739
18:35 bilby INFO    : f023=244.391377738396
18:35 bilby INFO    : f024=186.4940783438289
18:35 bilby INFO    : f025=465.135238339217
18:35 bilby INFO    : f026=339.3156871298895
18:35 bilby INFO    : f027=200.658805294298
18:35 bilby INFO    : f028=216.171230573016
18:35 bilby INFO    : f029=130.78951613875947
18:35 bilby INFO    : f030=263.9807142255208
18:35 bilby INFO    : f031=641.928222127829
18:35 bilby INFO    : f032=192.8565208431179
18:35 bilby INFO    : f033=315.443563681749
18:35 bilby INFO    : f034=163.0479129097612
18:35 bilby INFO    : f035=191.4509120380344
18:35 bilby INFO    : f036=345.2781364654948
18:35 bilby INFO    : f037=168.0966779772235
18:35 bilby INFO    : f038=420.189443214863
18:35 bilby INFO    : f039=62.29588783082522
18:35 bilby INFO    : f040=320.5922923290326
18:35 bilby INFO    : f041=335.8162133708968
18:35 bilby INFO    : f042=279.5965821510426
18:35 bilby INFO    : f043=275.7078326240928
18:35 bilby INFO    : f044=192.5919636477142
18:35 bilby INFO    : f045=290.25460815391
18:35 bilby INFO    : f046=207.96816335831227
18:35 bilby INFO    : fdot0=-1.227834e-15
18:35 bilby INFO    : fdot1=-4.297e-16
18:35 bilby INFO    : fdot2=-6.4737e-16
18:35 bilby INFO    : fdot3=-1.022991e-15
18:35 bilby INFO    : fdot4=-4.1895e-16
18:35 bilby INFO    : fdot5=-6.2782e-17
18:35 bilby INFO    : fdot6=-1.46389e-15
18:35 bilby INFO    : fdot7=-1.6868e-16
18:35 bilby INFO    : fdot8=-6.2003e-16
18:35 bilby INFO    : fdot9=-6.96131e-16
18:35 bilby INFO    : fdot10=-3.9329e-16
18:35 bilby INFO    : fdot11=-3.474e-16
18:35 bilby INFO    : fdot12=-3.80975e-16
18:35 bilby INFO    : fdot13=-7.33846e-16
18:35 bilby INFO    : fdot14=-9.69443e-16
18:35 bilby INFO    : fdot15=-2.81542e-16
18:35 bilby INFO    : fdot16=-8.64392e-16
18:35 bilby INFO    : fdot17=-4.08387e-16
18:35 bilby INFO    : fdot18=-7.04774e-16
18:35 bilby INFO    : fdot19=-2.151992e-15
18:35 bilby INFO    : fdot20=-5.38155e-16
18:35 bilby INFO    : fdot21=-4.853e-15
18:35 bilby INFO    : fdot22=-1.11907e-15
18:35 bilby INFO    : fdot23=-5.2065e-16
18:35 bilby INFO    : fdot24=-6.20476e-16
18:35 bilby INFO    : fdot25=-4.0719e-15
18:35 bilby INFO    : fdot26=-1.614814e-15
18:35 bilby INFO    : fdot27=-3.89748e-16
18:35 bilby INFO    : fdot28=-7.90875e-16
18:35 bilby INFO    : fdot29=-4.39475e-16
18:35 bilby INFO    : fdot30=-6.65848e-16
18:35 bilby INFO    : fdot31=-4.330987e-14
18:35 bilby INFO    : fdot32=-6.44814e-16
18:35 bilby INFO    : fdot33=-3.148e-16
18:35 bilby INFO    : fdot34=-7.9062e-16
18:35 bilby INFO    : fdot35=-1.76854e-16
18:35 bilby INFO    : fdot36=-9.5291e-16
18:35 bilby INFO    : fdot37=-3.1496e-16
18:35 bilby INFO    : fdot38=-9.25931e-16
18:35 bilby INFO    : fdot39=-1.156186e-16
18:35 bilby INFO    : fdot40=-1.51379e-15
18:35 bilby INFO    : fdot41=-1.7183e-16
18:35 bilby INFO    : fdot42=-9.392e-16
18:35 bilby INFO    : fdot43=-1.52788e-15
18:35 bilby INFO    : fdot44=-5.1439e-16
18:35 bilby INFO    : fdot45=-2.0477e-16
18:35 bilby INFO    : fdot46=-4.178455630932531e-16
18:35 bilby INFO    : distance0=181816860005.41092
18:35 bilby INFO    : distance1=32362224272.807774
18:35 bilby INFO    : distance2=160300000000.0
18:35 bilby INFO    : distance3=95000000000.0
18:35 bilby INFO    : distance4=71428052144.98288
18:35 bilby INFO    : distance5=121950332930.45859
18:35 bilby INFO    : distance6=115000000000.0
18:35 bilby INFO    : distance7=372200000000.0
18:35 bilby INFO    : distance8=70000000000.0
18:35 bilby INFO    : distance9=122000000000.0
18:35 bilby INFO    : distance10=90300000000.0
18:35 bilby INFO    : distance11=126900000000.0
18:35 bilby INFO    : distance12=68400000000.0
18:35 bilby INFO    : distance13=188677873590.52078
18:35 bilby INFO    : distance14=70000000000.0
18:35 bilby INFO    : distance15=151514050004.5091
18:35 bilby INFO    : distance16=74000000000.0
18:35 bilby INFO    : distance17=131060646137.58327
18:35 bilby INFO    : distance18=147057754416.14117
18:35 bilby INFO    : distance19=166665455004.96002
18:35 bilby INFO    : distance20=39500000000.0
18:35 bilby INFO    : distance21=714900000000.0
18:35 bilby INFO    : distance22=208331818756.20007
18:35 bilby INFO    : distance23=208331818756.20007
18:35 bilby INFO    : distance24=120000000000.0
18:35 bilby INFO    : distance25=700000000000.0
18:35 bilby INFO    : distance26=114000000000.0
18:35 bilby INFO    : distance27=149600000000.0
18:35 bilby INFO    : distance28=136500000000.0
18:35 bilby INFO    : distance29=111110303336.64005
18:35 bilby INFO    : distance30=120100000000.0
18:35 bilby INFO    : distance31=350000000000.0
18:35 bilby INFO    : distance32=121800000000.0
18:35 bilby INFO    : distance33=694000000000.0
18:35 bilby INFO    : distance34=630400000000.0
18:35 bilby INFO    : distance35=243900665860.9172
18:35 bilby INFO    : distance36=139900000000.0
18:35 bilby INFO    : distance37=174000000000.0
18:35 bilby INFO    : distance38=138887879170.80002
18:35 bilby INFO    : distance39=71428052144.98288
18:35 bilby INFO    : distance40=60000000000.0
18:35 bilby INFO    : distance41=180000000000.0
18:35 bilby INFO    : distance42=97086672818.42332
18:35 bilby INFO    : distance43=158700000000.0
18:35 bilby INFO    : distance44=86300000000.0
18:35 bilby INFO    : distance45=166665455004.96002
18:35 bilby INFO    : distance46=101099999999.99998
18:35 bilby INFO    : gamma0=1e-13
18:35 bilby INFO    : gamma1=1e-13
18:35 bilby INFO    : gamma2=1e-13
18:35 bilby INFO    : gamma3=1e-13
18:35 bilby INFO    : gamma4=1e-13
18:35 bilby INFO    : gamma5=1e-13
18:35 bilby INFO    : gamma6=1e-13
18:35 bilby INFO    : gamma7=1e-13
18:35 bilby INFO    : gamma8=1e-13
18:35 bilby INFO    : gamma9=1e-13
18:35 bilby INFO    : gamma10=1e-13
18:35 bilby INFO    : gamma11=1e-13
18:35 bilby INFO    : gamma12=1e-13
18:35 bilby INFO    : gamma13=1e-13
18:35 bilby INFO    : gamma14=1e-13
18:35 bilby INFO    : gamma15=1e-13
18:35 bilby INFO    : gamma16=1e-13
18:35 bilby INFO    : gamma17=1e-13
18:35 bilby INFO    : gamma18=1e-13
18:35 bilby INFO    : gamma19=1e-13
18:35 bilby INFO    : gamma20=1e-13
18:35 bilby INFO    : gamma21=1e-13
18:35 bilby INFO    : gamma22=1e-13
18:35 bilby INFO    : gamma23=1e-13
18:35 bilby INFO    : gamma24=1e-13
18:35 bilby INFO    : gamma25=1e-13
18:35 bilby INFO    : gamma26=1e-13
18:35 bilby INFO    : gamma27=1e-13
18:35 bilby INFO    : gamma28=1e-13
18:35 bilby INFO    : gamma29=1e-13
18:35 bilby INFO    : gamma30=1e-13
18:35 bilby INFO    : gamma31=1e-13
18:35 bilby INFO    : gamma32=1e-13
18:35 bilby INFO    : gamma33=1e-13
18:35 bilby INFO    : gamma34=1e-13
18:35 bilby INFO    : gamma35=1e-13
18:35 bilby INFO    : gamma36=1e-13
18:35 bilby INFO    : gamma37=1e-13
18:35 bilby INFO    : gamma38=1e-13
18:35 bilby INFO    : gamma39=1e-13
18:35 bilby INFO    : gamma40=1e-13
18:35 bilby INFO    : gamma41=1e-13
18:35 bilby INFO    : gamma42=1e-13
18:35 bilby INFO    : gamma43=1e-13
18:35 bilby INFO    : gamma44=1e-13
18:35 bilby INFO    : gamma45=1e-13
18:35 bilby INFO    : gamma46=1e-13
18:35 bilby INFO    : sigma_p=0.001
18:35 bilby INFO    : sigma_m=1e-10
18:35 bilby INFO    : Analysis likelihood class: <class 'bilby_wrapper.BilbyLikelihood'>
18:35 bilby INFO    : Analysis likelihood noise evidence: nan
18:35 bilby INFO    : Single likelihood evaluation took 6.370e-03 s
18:35 bilby INFO    : Using sampler Dynesty with kwargs {'nlive': 500, 'bound': 'live', 'sample': 'rwalk', 'periodic': None, 'reflective': None, 'update_interval': 600, 'first_update': None, 'npdim': None, 'rstate': None, 'queue_size': 32, 'pool': None, 'use_pool': None, 'live_points': None, 'logl_args': None, 'logl_kwargs': None, 'ptform_args': None, 'ptform_kwargs': None, 'gradient': None, 'grad_args': None, 'grad_kwargs': None, 'compute_jac': False, 'enlarge': None, 'bootstrap': None, 'walks': 100, 'facc': 0.2, 'slices': None, 'fmove': 0.9, 'max_move': 100, 'update_func': None, 'ncdim': None, 'blob': False, 'save_history': False, 'history_filename': None, 'maxiter': None, 'maxcall': None, 'dlogz': 0.0001, 'logl_max': inf, 'n_effective': None, 'add_live': True, 'print_progress': True, 'print_func': <bound method Dynesty._print_func of <bilby.core.sampler.dynesty.Dynesty object at 0x15020025ee50>>, 'save_bounds': False, 'checkpoint_file': None, 'checkpoint_every': 60, 'resume': False}
18:35 bilby INFO    : Checkpoint every check_point_delta_t = 600s
18:35 bilby INFO    : Using dynesty version 2.1.0
18:35 bilby INFO    : Using the bilby-implemented rwalk sample method with ACT estimated walks. An average of 4 steps will be accepted up to chain length 5000.
18:35 bilby INFO    : Setting up multiproccesing pool with 32 processes
Ideal likelihood =  -34644.892917838486
Ideal likelihood =  -34644.892917838486
RUN THE SAMPLER
18:35 bilby INFO    : Generating initial points from the prior
1it [00:00, ?it/s]1it [00:07, ?it/s, bound:0 nc:  1 ncall:5.0e+02 eff:0.2% logz=-261185.77+/-0.12 dlogz:inf>0.0001]32it [00:07, 125.45it/s, bound:0 nc:  1 ncall:5.3e+02 eff:6.0% logz=-146473.96+/-0.12 dlogz:128742.511>0.0001]60it [00:07, 118.89it/s, bound:0 nc:  1 ncall:5.6e+02 eff:10.6% logz=-83570.46+/-0.12 dlogz:57196.750>0.0001] 85it [00:08, 110.72it/s, bound:0 nc:  3 ncall:6.0e+02 eff:14.2% logz=-62396.15+/-0.12 dlogz:35653.136>0.0001]110it [00:08, 107.28it/s, bound:0 nc:  1 ncall:6.3e+02 eff:17.5% logz=-45923.80+/-0.12 dlogz:19831.981>0.0001]131it [00:08, 99.65it/s, bound:0 nc:  2 ncall:6.6e+02 eff:19.8% logz=-36313.45+/-0.12 dlogz:9395.795>0.0001]  149it [00:08, 90.87it/s, bound:0 nc:  1 ncall:6.9e+02 eff:21.5% logz=-33247.49+/-0.12 dlogz:6535.400>0.0001]174it [00:09, 94.07it/s, bound:0 nc:  3 ncall:7.3e+02 eff:24.0% logz=-30209.68+/-0.12 dlogz:3447.418>0.0001]195it [00:09, 91.30it/s, bound:0 nc:  1 ncall:7.6e+02 eff:25.8% logz=-28751.21+/-0.12 dlogz:2645.233>0.0001]217it [00:09, 90.36it/s, bound:0 nc:  3 ncall:7.9e+02 eff:27.5% logz=-28003.07+/-0.12 dlogz:1884.801>0.0001]236it [00:09, 86.14it/s, bound:0 nc:  1 ncall:8.2e+02 eff:28.7% logz=-27748.36+/-0.12 dlogz:1631.280>0.0001]257it [00:10, 86.34it/s, bound:0 nc:  2 ncall:8.5e+02 eff:30.1% logz=-27510.52+/-0.12 dlogz:1371.841>0.0001]278it [00:10, 85.97it/s, bound:0 nc:  8 ncall:8.9e+02 eff:31.2% logz=-27358.72+/-0.12 dlogz:1224.432>0.0001]291it [00:10, 76.21it/s, bound:0 nc:  1 ncall:9.2e+02 eff:31.7% logz=-27310.48+/-0.12 dlogz:1169.422>0.0001]307it [00:10, 72.76it/s, bound:0 nc:  4 ncall:9.5e+02 eff:32.3% logz=-27258.67+/-0.12 dlogz:1116.352>0.0001]323it [00:11, 70.61it/s, bound:0 nc:  5 ncall:9.8e+02 eff:32.9% logz=-27204.89+/-0.11 dlogz:1060.905>0.0001]341it [00:11, 71.27it/s, bound:0 nc:  3 ncall:1.0e+03 eff:33.7% logz=-27169.60+/-0.12 dlogz:1026.394>0.0001]357it [00:11, 69.42it/s, bound:0 nc:  2 ncall:1.0e+03 eff:34.2% logz=-27155.42+/-0.11 dlogz:1010.510>0.0001]372it [00:11, 66.80it/s, bound:0 nc: 12 ncall:1.1e+03 eff:34.3% logz=-27142.01+/-0.10 dlogz:996.890>0.0001] 381it [00:11, 57.82it/s, bound:0 nc:  3 ncall:1.1e+03 eff:34.4% logz=-27137.06+/-0.11 dlogz:992.201>0.0001]396it [00:12, 58.91it/s, bound:0 nc:  2 ncall:1.1e+03 eff:34.7% logz=-27124.86+/-0.11 dlogz:980.063>0.0001]410it [00:12, 58.27it/s, bound:0 nc:  6 ncall:1.2e+03 eff:34.9% logz=-27119.90+/-0.10 dlogz:974.608>0.0001]423it [00:12, 56.63it/s, bound:0 nc:  2 ncall:1.2e+03 eff:35.1% logz=-27116.56+/-0.10 dlogz:971.190>0.0001]437it [00:12, 56.78it/s, bound:0 nc:  5 ncall:1.2e+03 eff:35.3% logz=-27112.14+/-0.10 dlogz:966.947>0.0001]452it [00:13, 58.03it/s, bound:0 nc:  7 ncall:1.3e+03 eff:35.6% logz=-27107.22+/-0.10 dlogz:961.984>0.0001]463it [00:13, 54.03it/s, bound:0 nc:  4 ncall:1.3e+03 eff:35.5% logz=-27104.29+/-0.10 dlogz:958.903>0.0001]476it [00:13, 53.85it/s, bound:0 nc:  3 ncall:1.3e+03 eff:35.7% logz=-27101.07+/-0.10 dlogz:955.577>0.0001]487it [00:13, 51.03it/s, bound:0 nc:  3 ncall:1.4e+03 eff:35.6% logz=-27099.25+/-0.09 dlogz:953.702>0.0001]499it [00:14, 49.98it/s, bound:0 nc:  2 ncall:1.4e+03 eff:35.7% logz=-27097.52+/-0.09 dlogz:951.941>0.0001]510it [00:14, 48.63it/s, bound:0 nc:  2 ncall:1.4e+03 eff:35.7% logz=-27096.08+/-0.09 dlogz:950.452>0.0001]515it [00:14, 40.39it/s, bound:0 nc:  8 ncall:1.5e+03 eff:35.1% logz=-27095.53+/-0.09 dlogz:949.883>0.0001]525it [00:14, 40.58it/s, bound:0 nc:  1 ncall:1.5e+03 eff:35.2% logz=-27094.27+/-0.09 dlogz:948.602>0.0001]536it [00:15, 42.07it/s, bound:0 nc:  6 ncall:1.5e+03 eff:35.1% logz=-27092.08+/-0.10 dlogz:946.448>0.0001]546it [00:15, 41.82it/s, bound:0 nc:  2 ncall:1.6e+03 eff:35.0% logz=-27090.25+/-0.10 dlogz:944.586>0.0001]552it [00:15, 36.77it/s, bound:0 nc: 23 ncall:1.6e+03 eff:34.6% logz=-27089.26+/-0.10 dlogz:943.581>0.0001]558it [00:15, 33.01it/s, bound:0 nc:  2 ncall:1.6e+03 eff:34.4% logz=-27088.50+/-0.09 dlogz:942.783>0.0001]568it [00:16, 35.37it/s, bound:0 nc:  4 ncall:1.7e+03 eff:34.4% logz=-27086.96+/-0.09 dlogz:941.240>0.0001]577it [00:16, 35.81it/s, bound:0 nc:  7 ncall:1.7e+03 eff:34.2% logz=-27085.64+/-0.09 dlogz:939.890>0.0001]592it [00:16, 43.58it/s, bound:0 nc:  2 ncall:1.7e+03 eff:34.5% logz=-27083.53+/-0.09 dlogz:937.724>0.0001]602it [00:16, 42.77it/s, bound:0 nc:  1 ncall:1.7e+03 eff:34.4% logz=-27082.53+/-0.09 dlogz:936.696>0.0001]619it [00:17, 50.78it/s, bound:0 nc:  2 ncall:1.8e+03 eff:34.7% logz=-27081.19+/-0.09 dlogz:935.292>0.0001]629it [00:17, 47.85it/s, bound:0 nc:  3 ncall:1.8e+03 eff:34.7% logz=-27080.46+/-0.09 dlogz:934.562>0.0001]637it [00:17, 43.19it/s, bound:0 nc:  1 ncall:1.8e+03 eff:34.5% logz=-27079.72+/-0.09 dlogz:933.806>0.0001]642it [00:17, 36.54it/s, bound:0 nc:  3 ncall:1.9e+03 eff:34.2% logz=-27079.32+/-0.09 dlogz:933.385>0.0001]647it [00:18, 31.63it/s, bound:0 nc: 13 ncall:1.9e+03 eff:33.9% logz=-27078.90+/-0.09 dlogz:932.982>0.0001]658it [00:18, 35.63it/s, bound:0 nc:  9 ncall:1.9e+03 eff:33.8% logz=-27077.67+/-0.09 dlogz:931.748>0.0001]666it [00:18, 34.81it/s, bound:0 nc:  9 ncall:2.0e+03 eff:33.8% logz=-27076.73+/-0.09 dlogz:930.782>0.0001]674it [00:18, 34.28it/s, bound:0 nc: 15 ncall:2.0e+03 eff:33.4% logz=-27075.79+/-0.09 dlogz:929.805>0.0001]680it [00:19, 31.43it/s, bound:0 nc:  9 ncall:2.0e+03 eff:33.3% logz=-27075.24+/-0.09 dlogz:929.239>0.0001]690it [00:19, 34.32it/s, bound:0 nc:  9 ncall:2.1e+03 eff:33.2% logz=-27074.44+/-0.09 dlogz:928.398>0.0001]699it [00:19, 35.12it/s, bound:0 nc:  1 ncall:2.1e+03 eff:33.3% logz=-27073.74+/-0.09 dlogz:927.714>0.0001]704it [00:19, 30.71it/s, bound:0 nc: 13 ncall:2.1e+03 eff:33.0% logz=-27073.21+/-0.09 dlogz:927.181>0.0001]712it [00:20, 31.47it/s, bound:0 nc: 14 ncall:2.2e+03 eff:32.7% logz=-27072.48+/-0.09 dlogz:926.415>0.0001]716it [00:20, 27.02it/s, bound:0 nc:  9 ncall:2.2e+03 eff:32.5% logz=-27072.11+/-0.09 dlogz:926.041>0.0001]720it [00:20, 23.86it/s, bound:0 nc: 13 ncall:2.2e+03 eff:32.3% logz=-27071.77+/-0.09 dlogz:925.689>0.0001]726it [00:20, 24.14it/s, bound:0 nc:  5 ncall:2.3e+03 eff:32.1% logz=-27071.25+/-0.09 dlogz:925.158>0.0001]732it [00:21, 24.33it/s, bound:0 nc:  4 ncall:2.3e+03 eff:31.9% logz=-27070.78+/-0.09 dlogz:924.665>0.0001]739it [00:21, 25.53it/s, bound:0 nc:  8 ncall:2.3e+03 eff:31.8% logz=-27070.15+/-0.09 dlogz:924.030>0.0001]746it [00:21, 26.50it/s, bound:0 nc: 16 ncall:2.4e+03 eff:31.5% logz=-27069.63+/-0.09 dlogz:923.472>0.0001]754it [00:21, 28.27it/s, bound:0 nc:  3 ncall:2.4e+03 eff:31.6% logz=-27069.12+/-0.09 dlogz:922.956>0.0001]761it [00:21, 28.43it/s, bound:0 nc: 28 ncall:2.4e+03 eff:31.3% logz=-27068.63+/-0.09 dlogz:922.445>0.0001]766it [00:22, 26.08it/s, bound:0 nc: 16 ncall:2.5e+03 eff:31.1% logz=-27068.35+/-0.09 dlogz:922.136>0.0001]771it [00:22, 24.54it/s, bound:0 nc: 12 ncall:2.5e+03 eff:30.9% logz=-27068.11+/-0.09 dlogz:921.887>0.0001]777it [00:22, 24.56it/s, bound:0 nc:  8 ncall:2.5e+03 eff:30.8% logz=-27067.85+/-0.09 dlogz:921.617>0.0001]784it [00:22, 25.84it/s, bound:0 nc:  1 ncall:2.5e+03 eff:30.8% logz=-27067.49+/-0.09 dlogz:921.247>0.0001]792it [00:23, 27.82it/s, bound:0 nc: 15 ncall:2.6e+03 eff:30.6% logz=-27067.01+/-0.09 dlogz:920.759>0.0001]798it [00:23, 26.85it/s, bound:0 nc:  4 ncall:2.6e+03 eff:30.5% logz=-27066.58+/-0.09 dlogz:920.346>0.0001]807it [00:23, 29.90it/s, bound:0 nc: 11 ncall:2.7e+03 eff:30.4% logz=-27065.85+/-0.09 dlogz:919.595>0.0001]812it [00:23, 27.01it/s, bound:0 nc:  4 ncall:2.7e+03 eff:30.3% logz=-27065.47+/-0.09 dlogz:919.183>0.0001]819it [00:24, 27.50it/s, bound:0 nc:  6 ncall:2.7e+03 eff:30.2% logz=-27064.95+/-0.09 dlogz:918.659>0.0001]829it [00:24, 31.66it/s, bound:0 nc: 14 ncall:2.8e+03 eff:30.1% logz=-27064.22+/-0.09 dlogz:917.898>0.0001]836it [00:24, 30.70it/s, bound:0 nc:  4 ncall:2.8e+03 eff:30.1% logz=-27063.76+/-0.09 dlogz:917.416>0.0001]840it [00:24, 26.55it/s, bound:0 nc:  3 ncall:2.8e+03 eff:29.9% logz=-27063.53+/-0.09 dlogz:917.183>0.0001]844it [00:25, 23.52it/s, bound:0 nc: 24 ncall:2.8e+03 eff:29.7% logz=-27063.28+/-0.09 dlogz:916.922>0.0001]850it [00:25, 23.89it/s, bound:0 nc:  3 ncall:2.9e+03 eff:29.6% logz=-27062.91+/-0.09 dlogz:916.544>0.0001]856it [00:25, 24.04it/s, bound:0 nc:  2 ncall:2.9e+03 eff:29.5% logz=-27062.58+/-0.09 dlogz:916.190>0.0001]863it [00:25, 25.47it/s, bound:0 nc:  4 ncall:2.9e+03 eff:29.4% logz=-27062.18+/-0.09 dlogz:915.779>0.0001]868it [00:26, 23.98it/s, bound:0 nc: 16 ncall:3.0e+03 eff:29.3% logz=-27061.90+/-0.09 dlogz:915.486>0.0001]871it [00:26, 20.53it/s, bound:0 nc:  2 ncall:3.0e+03 eff:29.0% logz=-27061.74+/-0.09 dlogz:915.321>0.0001]876it [00:26, 20.45it/s, bound:0 nc:  6 ncall:3.0e+03 eff:28.9% logz=-27061.45+/-0.09 dlogz:915.027>0.0001]884it [00:26, 24.19it/s, bound:0 nc: 14 ncall:3.1e+03 eff:28.8% logz=-27061.05+/-0.09 dlogz:914.597>0.0001]890it [00:27, 24.24it/s, bound:0 nc:  3 ncall:3.1e+03 eff:28.8% logz=-27060.77+/-0.09 dlogz:914.308>0.0001]898it [00:27, 26.83it/s, bound:0 nc:  3 ncall:3.1e+03 eff:28.7% logz=-27060.42+/-0.09 dlogz:913.938>0.0001]903it [00:27, 25.05it/s, bound:0 nc: 14 ncall:3.2e+03 eff:28.6% logz=-27060.20+/-0.09 dlogz:913.708>0.0001]909it [00:27, 24.98it/s, bound:0 nc: 10 ncall:3.2e+03 eff:28.5% logz=-27059.92+/-0.09 dlogz:913.422>0.0001]917it [00:28, 27.37it/s, bound:0 nc:  6 ncall:3.2e+03 eff:28.4% logz=-27059.46+/-0.09 dlogz:912.952>0.0001]922it [00:28, 25.28it/s, bound:0 nc:  2 ncall:3.3e+03 eff:28.3% logz=-27059.18+/-0.09 dlogz:912.659>0.0001]927it [00:28, 23.86it/s, bound:0 nc: 13 ncall:3.3e+03 eff:28.2% logz=-27058.88+/-0.09 dlogz:912.362>0.0001]932it [00:28, 22.84it/s, bound:0 nc: 16 ncall:3.3e+03 eff:28.0% logz=-27058.56+/-0.09 dlogz:912.033>0.0001]937it [00:29, 22.23it/s, bound:0 nc:  9 ncall:3.4e+03 eff:27.9% logz=-27058.26+/-0.09 dlogz:911.719>0.0001]944it [00:29, 24.04it/s, bound:0 nc: 15 ncall:3.4e+03 eff:27.8% logz=-27057.83+/-0.09 dlogz:911.269>0.0001]948it [00:29, 21.81it/s, bound:0 nc:  8 ncall:3.4e+03 eff:27.8% logz=-27057.59+/-0.09 dlogz:911.026>0.0001]954it [00:29, 22.62it/s, bound:0 nc: 11 ncall:3.4e+03 eff:27.7% logz=-27057.28+/-0.09 dlogz:910.691>0.0001]959it [00:30, 22.02it/s, bound:0 nc: 14 ncall:3.5e+03 eff:27.5% logz=-27057.05+/-0.09 dlogz:910.444>0.0001]962it [00:30, 19.04it/s, bound:0 nc:  4 ncall:3.5e+03 eff:27.3% logz=-27056.91+/-0.09 dlogz:910.302>0.0001]964it [00:30, 15.87it/s, bound:0 nc:  3 ncall:3.5e+03 eff:27.2% logz=-27056.81+/-0.09 dlogz:910.200>0.0001]970it [00:30, 18.59it/s, bound:0 nc:  9 ncall:3.6e+03 eff:27.1% logz=-27056.51+/-0.09 dlogz:909.889>0.0001]977it [00:30, 21.57it/s, bound:0 nc:  9 ncall:3.6e+03 eff:27.1% logz=-27056.19+/-0.09 dlogz:909.551>0.0001]983it [00:31, 22.54it/s, bound:0 nc: 16 ncall:3.6e+03 eff:26.9% logz=-27055.94+/-0.09 dlogz:909.284>0.0001]986it [00:31, 19.55it/s, bound:0 nc: 11 ncall:3.7e+03 eff:26.8% logz=-27055.82+/-0.09 dlogz:909.157>0.0001]989it [00:31, 17.36it/s, bound:0 nc: 21 ncall:3.7e+03 eff:26.6% logz=-27055.71+/-0.09 dlogz:909.037>0.0001]991it [00:31, 14.65it/s, bound:0 nc:  6 ncall:3.7e+03 eff:26.5% logz=-27055.64+/-0.09 dlogz:908.961>0.0001]1000it [00:32, 21.39it/s, bound:0 nc:  3 ncall:3.8e+03 eff:26.5% logz=-27055.31+/-0.09 dlogz:908.619>0.0001]1009it [00:32, 26.22it/s, bound:0 nc:  2 ncall:3.8e+03 eff:26.6% logz=-27054.97+/-0.09 dlogz:908.262>0.0001]1014it [00:32, 24.53it/s, bound:0 nc: 11 ncall:3.8e+03 eff:26.4% logz=-27054.76+/-0.09 dlogz:908.047>0.0001]1019it [00:32, 23.26it/s, bound:0 nc: 10 ncall:3.9e+03 eff:26.3% logz=-27054.58+/-0.09 dlogz:907.848>0.0001]1022it [00:33, 20.07it/s, bound:0 nc: 18 ncall:3.9e+03 eff:26.2% logz=-27054.47+/-0.09 dlogz:907.736>0.0001]1027it [00:33, 20.18it/s, bound:0 nc: 10 ncall:3.9e+03 eff:26.2% logz=-27054.30+/-0.09 dlogz:907.551>0.0001]1033it [00:33, 21.52it/s, bound:0 nc: 11 ncall:4.0e+03 eff:26.1% logz=-27054.10+/-0.09 dlogz:907.338>0.0001]1036it [00:33, 18.67it/s, bound:0 nc:  4 ncall:4.0e+03 eff:26.0% logz=-27053.99+/-0.09 dlogz:907.221>0.0001]1040it [00:34, 18.08it/s, bound:0 nc:  3 ncall:4.0e+03 eff:25.9% logz=-27053.82+/-0.09 dlogz:907.052>0.0001]1044it [00:34, 17.54it/s, bound:0 nc: 23 ncall:4.1e+03 eff:25.7% logz=-27053.63+/-0.09 dlogz:906.861>0.0001]1046it [00:34, 14.79it/s, bound:0 nc: 19 ncall:4.1e+03 eff:25.5% logz=-27053.54+/-0.09 dlogz:906.765>0.0001]1048it [00:34, 12.81it/s, bound:0 nc:  7 ncall:4.1e+03 eff:25.4% logz=-27053.45+/-0.09 dlogz:906.669>0.0001]1052it [00:35, 13.95it/s, bound:0 nc:  6 ncall:4.2e+03 eff:25.3% logz=-27053.24+/-0.09 dlogz:906.463>0.0001]1056it [00:35, 14.68it/s, bound:0 nc:  5 ncall:4.2e+03 eff:25.2% logz=-27053.00+/-0.09 dlogz:906.214>0.0001]1060it [00:35, 15.28it/s, bound:0 nc: 14 ncall:4.2e+03 eff:25.1% logz=-27052.78+/-0.09 dlogz:905.982>0.0001]1065it [00:35, 16.90it/s, bound:0 nc:  2 ncall:4.2e+03 eff:25.1% logz=-27052.55+/-0.09 dlogz:905.737>0.0001]1069it [00:36, 16.80it/s, bound:0 nc: 17 ncall:4.3e+03 eff:25.0% logz=-27052.38+/-0.09 dlogz:905.555>0.0001]1074it [00:36, 17.97it/s, bound:0 nc:  4 ncall:4.3e+03 eff:24.9% logz=-27052.16+/-0.09 dlogz:905.329>0.0001]1080it [00:36, 19.93it/s, bound:0 nc:  9 ncall:4.3e+03 eff:24.9% logz=-27051.90+/-0.09 dlogz:905.054>0.0001]1083it [00:36, 17.64it/s, bound:0 nc: 20 ncall:4.4e+03 eff:24.8% logz=-27051.78+/-0.09 dlogz:904.923>0.0001]1089it [00:37, 19.71it/s, bound:0 nc: 25 ncall:4.4e+03 eff:24.6% logz=-27051.53+/-0.09 dlogz:904.660>0.0001]1093it [00:37, 18.85it/s, bound:0 nc: 17 ncall:4.4e+03 eff:24.6% logz=-27051.35+/-0.09 dlogz:904.476>0.0001]1099it [00:37, 20.52it/s, bound:0 nc:  9 ncall:4.5e+03 eff:24.6% logz=-27051.09+/-0.09 dlogz:904.204>0.0001]1103it [00:37, 19.32it/s, bound:0 nc: 11 ncall:4.5e+03 eff:24.5% logz=-27050.92+/-0.09 dlogz:904.027>0.0001]1106it [00:38, 17.21it/s, bound:0 nc: 13 ncall:4.5e+03 eff:24.4% logz=-27050.80+/-0.09 dlogz:903.896>0.0001]1109it [00:38, 15.75it/s, bound:0 nc: 28 ncall:4.6e+03 eff:24.3% logz=-27050.68+/-0.09 dlogz:903.769>0.0001]1117it [00:38, 20.79it/s, bound:0 nc:  4 ncall:4.6e+03 eff:24.3% logz=-27050.35+/-0.09 dlogz:903.426>0.0001]1120it [00:39, 14.05it/s, bound:0 nc: 18 ncall:4.7e+03 eff:24.0% logz=-27050.23+/-0.09 dlogz:903.300>0.0001]1123it [00:39, 13.63it/s, bound:0 nc:  6 ncall:4.7e+03 eff:23.9% logz=-27050.11+/-0.09 dlogz:903.176>0.0001]1129it [00:39, 16.57it/s, bound:0 nc: 12 ncall:4.7e+03 eff:23.8% logz=-27049.90+/-0.09 dlogz:902.943>0.0001]1133it [00:39, 16.56it/s, bound:0 nc: 12 ncall:4.8e+03 eff:23.8% logz=-27049.76+/-0.09 dlogz:902.802>0.0001]1136it [00:39, 15.40it/s, bound:0 nc: 13 ncall:4.8e+03 eff:23.7% logz=-27049.66+/-0.09 dlogz:902.695>0.0001]1140it [00:40, 15.76it/s, bound:0 nc:  3 ncall:4.8e+03 eff:23.6% logz=-27049.53+/-0.09 dlogz:902.552>0.0001]1144it [00:40, 15.92it/s, bound:0 nc: 32 ncall:4.9e+03 eff:23.5% logz=-27049.40+/-0.09 dlogz:902.413>0.0001]1148it [00:40, 16.12it/s, bound:0 nc:  5 ncall:4.9e+03 eff:23.5% logz=-27049.28+/-0.09 dlogz:902.283>0.0001]1150it [00:40, 13.76it/s, bound:0 nc: 19 ncall:4.9e+03 eff:23.4% logz=-27049.21+/-0.09 dlogz:902.216>0.0001]1153it [00:41, 10.35it/s, bound:0 nc: 40 ncall:5.0e+03 eff:23.1% logz=-27049.11+/-0.09 dlogz:902.112>0.0001]1157it [00:41, 11.84it/s, bound:0 nc:  4 ncall:5.0e+03 eff:23.1% logz=-27048.98+/-0.09 dlogz:901.970>0.0001]1161it [00:41, 13.06it/s, bound:0 nc: 14 ncall:5.1e+03 eff:23.0% logz=-27048.85+/-0.09 dlogz:901.830>0.0001]1166it [00:42, 15.04it/s, bound:0 nc: 29 ncall:5.1e+03 eff:22.9% logz=-27048.68+/-0.09 dlogz:901.654>0.0001]1168it [00:42, 13.18it/s, bound:0 nc:  9 ncall:5.1e+03 eff:22.9% logz=-27048.61+/-0.09 dlogz:901.584>0.0001]1173it [00:42, 15.34it/s, bound:0 nc:  8 ncall:5.1e+03 eff:22.8% logz=-27048.45+/-0.09 dlogz:901.405>0.0001]1176it [00:42, 14.49it/s, bound:0 nc: 14 ncall:5.2e+03 eff:22.7% logz=-27048.34+/-0.09 dlogz:901.298>0.0001]1180it [00:43, 15.14it/s, bound:0 nc: 28 ncall:5.2e+03 eff:22.6% logz=-27048.19+/-0.09 dlogz:901.141>0.0001]1185it [00:43, 16.72it/s, bound:0 nc:  7 ncall:5.2e+03 eff:22.6% logz=-27048.01+/-0.09 dlogz:900.951>0.0001]1187it [00:43, 14.30it/s, bound:0 nc: 36 ncall:5.3e+03 eff:22.4% logz=-27047.95+/-0.09 dlogz:900.877>0.0001]1189it [00:43, 12.50it/s, bound:0 nc: 10 ncall:5.3e+03 eff:22.4% logz=-27047.88+/-0.09 dlogz:900.806>0.0001]1193it [00:44, 13.81it/s, bound:0 nc:  9 ncall:5.3e+03 eff:22.3% logz=-27047.74+/-0.09 dlogz:900.662>0.0001]1197it [00:44, 14.45it/s, bound:0 nc: 20 ncall:5.4e+03 eff:22.3% logz=-27047.61+/-0.09 dlogz:900.518>0.0001]1199it [00:44, 12.64it/s, bound:0 nc: 26 ncall:5.4e+03 eff:22.1% logz=-27047.54+/-0.09 dlogz:900.447>0.0001]1201it [00:44, 11.39it/s, bound:0 nc:  1 ncall:5.4e+03 eff:22.1% logz=-27047.47+/-0.09 dlogz:900.375>0.0001]1203it [00:45, 10.48it/s, bound:0 nc: 18 ncall:5.5e+03 eff:22.0% logz=-27047.39+/-0.09 dlogz:900.297>0.0001]1206it [00:45, 11.06it/s, bound:0 nc:  9 ncall:5.5e+03 eff:22.0% logz=-27047.28+/-0.09 dlogz:900.175>0.0001]1208it [00:45, 10.27it/s, bound:0 nc:  8 ncall:5.5e+03 eff:21.8% logz=-27047.21+/-0.09 dlogz:900.097>0.0001]1211it [00:45, 10.96it/s, bound:0 nc: 32 ncall:5.6e+03 eff:21.7% logz=-27047.09+/-0.09 dlogz:899.979>0.0001]1213it [00:46, 10.09it/s, bound:0 nc: 11 ncall:5.6e+03 eff:21.6% logz=-27047.02+/-0.09 dlogz:899.902>0.0001]1215it [00:46,  9.57it/s, bound:0 nc:  3 ncall:5.6e+03 eff:21.6% logz=-27046.95+/-0.09 dlogz:899.828>0.0001]1218it [00:46, 10.38it/s, bound:0 nc: 16 ncall:5.7e+03 eff:21.5% logz=-27046.85+/-0.09 dlogz:899.717>0.0001]1220it [00:46,  9.75it/s, bound:0 nc: 18 ncall:5.7e+03 eff:21.4% logz=-27046.78+/-0.09 dlogz:899.645>0.0001]1223it [00:46, 10.50it/s, bound:0 nc: 14 ncall:5.7e+03 eff:21.4% logz=-27046.68+/-0.09 dlogz:899.537>0.0001]1225it [00:47,  9.86it/s, bound:0 nc: 18 ncall:5.8e+03 eff:21.3% logz=-27046.61+/-0.09 dlogz:899.467>0.0001]1229it [00:47, 11.83it/s, bound:0 nc:  9 ncall:5.8e+03 eff:21.3% logz=-27046.47+/-0.09 dlogz:899.316>0.0001]1233it [00:47, 13.27it/s, bound:0 nc: 27 ncall:5.8e+03 eff:21.2% logz=-27046.32+/-0.09 dlogz:899.161>0.0001]1235it [00:47, 11.81it/s, bound:0 nc: 22 ncall:5.9e+03 eff:21.1% logz=-27046.25+/-0.09 dlogz:899.087>0.0001]1238it [00:48, 11.93it/s, bound:0 nc: 23 ncall:5.9e+03 eff:21.0% logz=-27046.15+/-0.09 dlogz:898.978>0.0001]1241it [00:48, 12.09it/s, bound:0 nc: 14 ncall:5.9e+03 eff:21.0% logz=-27046.05+/-0.09 dlogz:898.871>0.0001]1243it [00:48, 10.96it/s, bound:0 nc: 34 ncall:6.0e+03 eff:20.8% logz=-27045.98+/-0.09 dlogz:898.796>0.0001]1245it [00:48, 10.15it/s, bound:0 nc: 16 ncall:6.0e+03 eff:20.8% logz=-27045.91+/-0.09 dlogz:898.724>0.0001]1248it [00:49, 10.80it/s, bound:0 nc:  8 ncall:6.0e+03 eff:20.8% logz=-27045.80+/-0.09 dlogz:898.612>0.0001]1251it [00:49, 11.32it/s, bound:0 nc: 26 ncall:6.0e+03 eff:20.7% logz=-27045.68+/-0.09 dlogz:898.490>0.0001]1255it [00:49, 12.88it/s, bound:0 nc: 16 ncall:6.1e+03 eff:20.7% logz=-27045.54+/-0.09 dlogz:898.333>0.0001]1257it [00:49, 11.43it/s, bound:0 nc: 13 ncall:6.1e+03 eff:20.6% logz=-27045.47+/-0.09 dlogz:898.260>0.0001]1259it [00:50, 10.51it/s, bound:0 nc: 17 ncall:6.2e+03 eff:20.5% logz=-27045.40+/-0.09 dlogz:898.189>0.0001]1261it [00:50,  7.59it/s, bound:0 nc: 34 ncall:6.2e+03 eff:20.3% logz=-27045.34+/-0.09 dlogz:898.122>0.0001]1264it [00:50,  8.78it/s, bound:0 nc:  8 ncall:6.2e+03 eff:20.3% logz=-27045.25+/-0.09 dlogz:898.022>0.0001]1266it [00:51,  8.66it/s, bound:0 nc: 34 ncall:6.3e+03 eff:20.2% logz=-27045.18+/-0.09 dlogz:897.954>0.0001]1269it [00:51,  7.60it/s, bound:0 nc: 64 ncall:6.4e+03 eff:20.0% logz=-27045.08+/-0.09 dlogz:897.853>0.0001]1270it [00:51,  6.77it/s, bound:0 nc: 12 ncall:6.4e+03 eff:20.0% logz=-27045.05+/-0.09 dlogz:897.815>0.0001]1271it [00:52,  6.14it/s, bound:0 nc: 30 ncall:6.4e+03 eff:19.9% logz=-27045.01+/-0.09 dlogz:897.777>0.0001]1273it [00:52,  6.70it/s, bound:0 nc: 39 ncall:6.4e+03 eff:19.8% logz=-27044.94+/-0.09 dlogz:897.702>0.0001]1276it [00:52,  8.25it/s, bound:0 nc: 17 ncall:6.5e+03 eff:19.8% logz=-27044.84+/-0.09 dlogz:897.593>0.0001]1279it [00:52,  9.40it/s, bound:0 nc: 33 ncall:6.5e+03 eff:19.7% logz=-27044.74+/-0.09 dlogz:897.484>0.0001]1280it [00:53,  7.85it/s, bound:0 nc: 38 ncall:6.5e+03 eff:19.6% logz=-27044.70+/-0.09 dlogz:897.448>0.0001]1282it [00:53,  7.98it/s, bound:0 nc:  3 ncall:6.5e+03 eff:19.6% logz=-27044.64+/-0.09 dlogz:897.379>0.0001]1287it [00:53, 11.65it/s, bound:0 nc:  8 ncall:6.6e+03 eff:19.5% logz=-27044.49+/-0.09 dlogz:897.217>0.0001]1289it [00:53, 10.68it/s, bound:0 nc: 13 ncall:6.6e+03 eff:19.5% logz=-27044.43+/-0.09 dlogz:897.154>0.0001]1293it [00:54, 12.41it/s, bound:0 nc: 12 ncall:6.7e+03 eff:19.4% logz=-27044.32+/-0.09 dlogz:897.031>0.0001]1297it [00:54, 13.55it/s, bound:0 nc:  8 ncall:6.7e+03 eff:19.4% logz=-27044.20+/-0.09 dlogz:896.909>0.0001]1299it [00:54, 12.07it/s, bound:0 nc:  5 ncall:6.7e+03 eff:19.4% logz=-27044.14+/-0.09 dlogz:896.847>0.0001]1301it [00:54, 10.97it/s, bound:0 nc: 15 ncall:6.8e+03 eff:19.3% logz=-27044.08+/-0.09 dlogz:896.781>0.0001]1303it [00:54, 10.13it/s, bound:0 nc: 12 ncall:6.8e+03 eff:19.2% logz=-27044.02+/-0.09 dlogz:896.717>0.0001]1307it [00:55, 12.06it/s, bound:0 nc: 14 ncall:6.8e+03 eff:19.2% logz=-27043.91+/-0.09 dlogz:896.595>0.0001]1313it [00:55, 15.90it/s, bound:0 nc: 12 ncall:6.8e+03 eff:19.2% logz=-27043.73+/-0.09 dlogz:896.405>0.0001]1316it [00:55, 14.87it/s, bound:0 nc: 17 ncall:6.9e+03 eff:19.1% logz=-27043.63+/-0.09 dlogz:896.305>0.0001]1318it [00:55, 12.90it/s, bound:0 nc: 29 ncall:6.9e+03 eff:19.1% logz=-27043.57+/-0.09 dlogz:1021.099>0.0001]1320it [00:56, 11.53it/s, bound:0 nc: 21 ncall:7.0e+03 eff:19.0% logz=-27043.50+/-0.09 dlogz:1021.026>0.0001]1322it [00:56, 10.58it/s, bound:0 nc: 10 ncall:7.0e+03 eff:18.9% logz=-27043.43+/-0.09 dlogz:1020.954>0.0001]1324it [00:56,  9.93it/s, bound:0 nc:  4 ncall:7.0e+03 eff:18.9% logz=-27043.37+/-0.09 dlogz:1020.885>0.0001]1326it [00:56,  9.40it/s, bound:0 nc: 30 ncall:7.0e+03 eff:18.8% logz=-27043.30+/-0.09 dlogz:1020.817>0.0001]1328it [00:57,  9.06it/s, bound:0 nc: 25 ncall:7.1e+03 eff:18.8% logz=-27043.24+/-0.09 dlogz:1020.752>0.0001]1329it [00:57,  7.57it/s, bound:0 nc: 27 ncall:7.1e+03 eff:18.7% logz=-27043.21+/-0.09 dlogz:1020.720>0.0001]1332it [00:57,  9.04it/s, bound:0 nc: 15 ncall:7.1e+03 eff:18.7% logz=-27043.12+/-0.09 dlogz:1020.623>0.0001]1338it [00:57, 13.78it/s, bound:0 nc:  5 ncall:7.2e+03 eff:18.7% logz=-27042.92+/-0.09 dlogz:1020.416>0.0001]1340it [00:58, 12.20it/s, bound:0 nc: 22 ncall:7.2e+03 eff:18.6% logz=-27042.85+/-0.09 dlogz:1020.341>0.0001]1342it [00:58,  8.45it/s, bound:0 nc: 40 ncall:7.3e+03 eff:18.5% logz=-27042.78+/-0.09 dlogz:1020.267>0.0001]1346it [00:58, 10.44it/s, bound:0 nc: 19 ncall:7.3e+03 eff:18.4% logz=-27042.65+/-0.09 dlogz:1020.121>0.0001]1349it [00:59, 10.96it/s, bound:0 nc:  4 ncall:7.3e+03 eff:18.4% logz=-27042.54+/-0.09 dlogz:1020.010>0.0001]1352it [00:59, 11.31it/s, bound:0 nc: 17 ncall:7.4e+03 eff:18.4% logz=-27042.43+/-0.09 dlogz:1019.895>0.0001]1354it [00:59,  8.24it/s, bound:0 nc: 56 ncall:7.4e+03 eff:18.2% logz=-27042.36+/-0.09 dlogz:1019.822>0.0001]1356it [01:00,  8.21it/s, bound:0 nc: 10 ncall:7.4e+03 eff:18.2% logz=-27042.29+/-0.09 dlogz:1019.751>0.0001]1359it [01:00,  9.24it/s, bound:0 nc: 14 ncall:7.5e+03 eff:18.1% logz=-27042.19+/-0.09 dlogz:1019.643>0.0001]1361it [01:00,  9.01it/s, bound:0 nc: 14 ncall:7.5e+03 eff:18.1% logz=-27042.13+/-0.09 dlogz:1019.573>0.0001]1362it [01:00,  7.69it/s, bound:0 nc: 17 ncall:7.5e+03 eff:18.1% logz=-27042.10+/-0.09 dlogz:1019.540>0.0001]1365it [01:01,  8.99it/s, bound:0 nc:  2 ncall:7.6e+03 eff:18.0% logz=-27042.01+/-0.09 dlogz:1019.445>0.0001]1368it [01:01,  9.98it/s, bound:0 nc: 22 ncall:7.6e+03 eff:18.0% logz=-27041.93+/-0.09 dlogz:1019.355>0.0001]1371it [01:01, 10.65it/s, bound:0 nc: 19 ncall:7.7e+03 eff:17.9% logz=-27041.84+/-0.09 dlogz:1019.264>0.0001]1373it [01:01,  7.67it/s, bound:0 nc:  5 ncall:7.7e+03 eff:17.8% logz=-27041.79+/-0.09 dlogz:1019.203>0.0001]1380it [01:02, 10.33it/s, bound:0 nc: 66 ncall:7.8e+03 eff:17.7% logz=-27041.59+/-0.09 dlogz:1018.990>0.0001]1382it [01:02,  9.89it/s, bound:0 nc: 13 ncall:7.8e+03 eff:17.7% logz=-27041.53+/-0.09 dlogz:1018.927>0.0001]1385it [01:02, 10.45it/s, bound:0 nc: 39 ncall:7.9e+03 eff:17.6% logz=-27041.44+/-0.09 dlogz:1018.831>0.0001]1387it [01:03,  6.59it/s, bound:0 nc: 69 ncall:7.9e+03 eff:17.5% logz=-27041.38+/-0.09 dlogz:1018.768>0.0001]1388it [01:03,  6.11it/s, bound:0 nc: 30 ncall:8.0e+03 eff:17.4% logz=-27041.35+/-0.09 dlogz:1018.737>0.0001]1391it [01:04,  7.50it/s, bound:0 nc: 13 ncall:8.0e+03 eff:17.4% logz=-27041.26+/-0.09 dlogz:1018.645>0.0001]1395it [01:04,  9.63it/s, bound:0 nc: 11 ncall:8.0e+03 eff:17.4% logz=-27041.15+/-0.09 dlogz:1018.525>0.0001]1398it [01:04, 10.33it/s, bound:0 nc: 27 ncall:8.1e+03 eff:17.3% logz=-27041.07+/-0.09 dlogz:1018.436>0.0001]1400it [01:04,  9.79it/s, bound:0 nc: 41 ncall:8.1e+03 eff:17.3% logz=-27041.02+/-0.09 dlogz:1018.378>0.0001]1402it [01:05,  9.37it/s, bound:0 nc:  4 ncall:8.1e+03 eff:17.2% logz=-27040.96+/-0.09 dlogz:1018.318>0.0001]1404it [01:05,  9.09it/s, bound:0 nc: 34 ncall:8.2e+03 eff:17.2% logz=-27040.90+/-0.09 dlogz:1018.257>0.0001]1405it [01:05,  7.64it/s, bound:0 nc:  9 ncall:8.2e+03 eff:17.2% logz=-27040.87+/-0.09 dlogz:1018.226>0.0001]1407it [01:05,  7.84it/s, bound:0 nc: 17 ncall:8.2e+03 eff:17.1% logz=-27040.82+/-0.09 dlogz:1018.165>0.0001]1411it [01:06, 10.33it/s, bound:0 nc: 17 ncall:8.3e+03 eff:17.1% logz=-27040.70+/-0.09 dlogz:1018.042>0.0001]1415it [01:06,  9.42it/s, bound:0 nc: 38 ncall:8.3e+03 eff:17.0% logz=-27040.59+/-0.09 dlogz:1017.919>0.0001]1416it [01:06,  8.12it/s, bound:0 nc: 37 ncall:8.3e+03 eff:17.0% logz=-27040.56+/-0.09 dlogz:1017.889>0.0001]1417it [01:07,  5.64it/s, bound:0 nc: 85 ncall:8.4e+03 eff:16.8% logz=-27040.53+/-0.09 dlogz:1017.857>0.0001]1419it [01:07,  6.23it/s, bound:0 nc: 10 ncall:8.4e+03 eff:16.8% logz=-27040.47+/-0.09 dlogz:1017.795>0.0001]1421it [01:07,  6.74it/s, bound:0 nc: 11 ncall:8.5e+03 eff:16.8% logz=-27040.41+/-0.09 dlogz:1017.733>0.0001]1423it [01:08,  5.65it/s, bound:0 nc: 54 ncall:8.5e+03 eff:16.6% logz=-27040.35+/-0.09 dlogz:1017.670>0.0001]1424it [01:08,  4.32it/s, bound:0 nc: 59 ncall:8.6e+03 eff:16.5% logz=-27040.32+/-0.09 dlogz:1017.639>0.0001]1427it [01:08,  6.00it/s, bound:0 nc: 19 ncall:8.6e+03 eff:16.5% logz=-27040.24+/-0.09 dlogz:1017.547>0.0001]1428it [01:09,  5.57it/s, bound:0 nc: 27 ncall:8.7e+03 eff:16.5% logz=-27040.21+/-0.09 dlogz:1017.517>0.0001]1430it [01:09,  6.24it/s, bound:0 nc: 10 ncall:8.7e+03 eff:16.4% logz=-27040.16+/-0.09 dlogz:1017.459>0.0001]1432it [01:09,  6.75it/s, bound:0 nc:  7 ncall:8.7e+03 eff:16.4% logz=-27040.10+/-0.09 dlogz:1017.402>0.0001]1436it [01:09,  9.44it/s, bound:0 nc: 31 ncall:8.8e+03 eff:16.3% logz=-27040.00+/-0.09 dlogz:1017.287>0.0001]1438it [01:10,  5.84it/s, bound:0 nc: 20 ncall:8.9e+03 eff:16.2% logz=-27039.95+/-0.09 dlogz:1017.231>0.0001]1440it [01:10,  6.33it/s, bound:0 nc: 29 ncall:8.9e+03 eff:16.2% logz=-27039.90+/-0.09 dlogz:1017.177>0.0001]1443it [01:11,  7.72it/s, bound:0 nc:  7 ncall:8.9e+03 eff:16.2% logz=-27039.82+/-0.09 dlogz:1017.098>0.0001]1447it [01:11,  9.85it/s, bound:0 nc: 13 ncall:9.0e+03 eff:16.1% logz=-27039.73+/-0.09 dlogz:1016.996>0.0001]1449it [01:11,  9.45it/s, bound:0 nc: 32 ncall:9.0e+03 eff:16.1% logz=-27039.68+/-0.09 dlogz:1016.945>0.0001]1451it [01:12,  5.05it/s, bound:0 nc: 29 ncall:9.1e+03 eff:15.9% logz=-27039.64+/-0.09 dlogz:1016.895>0.0001]1452it [01:12,  4.88it/s, bound:0 nc: 19 ncall:9.1e+03 eff:15.9% logz=-27039.62+/-0.09 dlogz:1016.870>0.0001]1454it [01:13,  5.58it/s, bound:0 nc: 15 ncall:9.2e+03 eff:15.8% logz=-27039.57+/-0.09 dlogz:1016.822>0.0001]1458it [01:13,  8.02it/s, bound:0 nc:  3 ncall:9.2e+03 eff:15.8% logz=-27039.49+/-0.09 dlogz:1016.727>0.0001]1460it [01:13,  8.07it/s, bound:0 nc: 21 ncall:9.2e+03 eff:15.8% logz=-27039.44+/-0.09 dlogz:1016.680>0.0001]1463it [01:13,  9.16it/s, bound:0 nc: 23 ncall:9.3e+03 eff:15.8% logz=-27039.38+/-0.09 dlogz:1016.610>0.0001]1465it [01:14,  8.96it/s, bound:0 nc:  8 ncall:9.3e+03 eff:15.7% logz=-27039.34+/-0.09 dlogz:1016.564>0.0001]1469it [01:14, 11.01it/s, bound:0 nc: 33 ncall:9.3e+03 eff:15.7% logz=-27039.25+/-0.09 dlogz:1016.471>0.0001]1472it [01:14, 11.47it/s, bound:0 nc: 45 ncall:9.4e+03 eff:15.7% logz=-27039.18+/-0.09 dlogz:1016.396>0.0001]1474it [01:14, 10.55it/s, bound:0 nc:  2 ncall:9.4e+03 eff:15.6% logz=-27039.12+/-0.09 dlogz:1016.340>0.0001]1476it [01:15,  5.26it/s, bound:0 nc: 28 ncall:9.5e+03 eff:15.5% logz=-27039.07+/-0.09 dlogz:1016.278>0.0001]1479it [01:16,  6.56it/s, bound:0 nc: 21 ncall:9.6e+03 eff:15.4% logz=-27038.98+/-0.09 dlogz:1016.185>0.0001]1481it [01:16,  4.89it/s, bound:0 nc: 78 ncall:9.7e+03 eff:15.3% logz=-27038.92+/-0.09 dlogz:1016.125>0.0001]1484it [01:16,  6.19it/s, bound:0 nc: 31 ncall:9.7e+03 eff:15.3% logz=-27038.83+/-0.09 dlogz:1016.028>0.0001]1486it [01:17,  5.54it/s, bound:0 nc: 61 ncall:9.8e+03 eff:15.2% logz=-27038.77+/-0.09 dlogz:1015.960>0.0001]1487it [01:17,  5.25it/s, bound:0 nc: 22 ncall:9.8e+03 eff:15.2% logz=-27038.73+/-0.09 dlogz:1015.926>0.0001]1491it [01:17,  7.67it/s, bound:0 nc: 13 ncall:9.8e+03 eff:15.2% logz=-27038.61+/-0.10 dlogz:1015.792>0.0001]1494it [01:18,  8.77it/s, bound:0 nc: 31 ncall:9.9e+03 eff:15.1% logz=-27038.51+/-0.10 dlogz:1015.692>0.0001]1496it [01:18,  8.68it/s, bound:0 nc:  2 ncall:9.9e+03 eff:15.1% logz=-27038.46+/-0.10 dlogz:1015.629>0.0001]1498it [01:18,  8.56it/s, bound:0 nc: 20 ncall:9.9e+03 eff:15.1% logz=-27038.40+/-0.10 dlogz:1015.568>0.0001]1500it [01:19,  4.53it/s, bound:0 nc:111 ncall:1.0e+04 eff:14.9% logz=-27038.34+/-0.02 dlogz:1015.506>0.0001]1503it [01:19,  5.89it/s, bound:0 nc:  9 ncall:1.0e+04 eff:14.9% logz=-27038.26+/-0.03 dlogz:1015.416>0.0001]1507it [01:20,  7.98it/s, bound:0 nc:  4 ncall:1.0e+04 eff:14.9% logz=-27038.15+/-0.04 dlogz:1015.298>0.0001]1509it [01:20,  8.06it/s, bound:0 nc: 10 ncall:1.0e+04 eff:14.9% logz=-27038.09+/-0.05 dlogz:1015.238>0.0001]1514it [01:20,  8.96it/s, bound:0 nc: 41 ncall:1.0e+04 eff:14.8% logz=-27037.96+/-0.06 dlogz:1015.094>0.0001]1516it [01:21,  8.79it/s, bound:0 nc: 12 ncall:1.0e+04 eff:14.8% logz=-27037.91+/-0.06 dlogz:1015.035>0.0001]1519it [01:21,  9.66it/s, bound:0 nc: 38 ncall:1.0e+04 eff:14.8% logz=-27037.83+/-0.06 dlogz:1014.950>0.0001]1521it [01:21,  9.28it/s, bound:0 nc:  5 ncall:1.0e+04 eff:14.8% logz=-27037.78+/-0.06 dlogz:1014.895>0.0001]1522it [01:21,  7.91it/s, bound:0 nc: 30 ncall:1.0e+04 eff:14.7% logz=-27037.75+/-0.07 dlogz:1014.867>0.0001]1523it [01:22,  6.86it/s, bound:0 nc: 26 ncall:1.0e+04 eff:14.7% logz=-27037.72+/-0.07 dlogz:1014.838>0.0001]1528it [01:23,  5.85it/s, bound:0 nc:108 ncall:1.0e+04 eff:14.6% logz=-27037.60+/-0.07 dlogz:1014.702>0.0001]1530it [01:23,  6.27it/s, bound:0 nc: 39 ncall:1.1e+04 eff:14.5% logz=-27037.55+/-0.07 dlogz:1014.649>0.0001]1532it [01:23,  6.68it/s, bound:0 nc: 39 ncall:1.1e+04 eff:14.5% logz=-27037.50+/-0.07 dlogz:1014.595>0.0001]1533it [01:23,  6.10it/s, bound:0 nc: 26 ncall:1.1e+04 eff:14.5% logz=-27037.47+/-0.07 dlogz:1014.566>0.0001]1534it [01:24,  5.59it/s, bound:0 nc: 33 ncall:1.1e+04 eff:14.4% logz=-27037.44+/-0.07 dlogz:1014.537>0.0001]1535it [01:24,  5.23it/s, bound:0 nc: 27 ncall:1.1e+04 eff:14.4% logz=-27037.41+/-0.08 dlogz:1014.506>0.0001]1536it [01:24,  3.88it/s, bound:0 nc: 68 ncall:1.1e+04 eff:14.3% logz=-27037.38+/-0.08 dlogz:1014.474>0.0001]1537it [01:25,  3.94it/s, bound:0 nc: 17 ncall:1.1e+04 eff:14.3% logz=-27037.35+/-0.08 dlogz:1014.441>0.0001]1539it [01:25,  5.02it/s, bound:0 nc: 23 ncall:1.1e+04 eff:14.3% logz=-27037.29+/-0.08 dlogz:1014.376>0.0001]1542it [01:25,  6.96it/s, bound:0 nc: 19 ncall:1.1e+04 eff:14.3% logz=-27037.20+/-0.08 dlogz:1014.279>0.0001]1544it [01:25,  7.29it/s, bound:0 nc: 42 ncall:1.1e+04 eff:14.2% logz=-27037.14+/-0.08 dlogz:1014.217>0.0001]1546it [01:25,  7.55it/s, bound:0 nc:  8 ncall:1.1e+04 eff:14.2% logz=-27037.08+/-0.08 dlogz:1014.154>0.0001]1547it [01:26,  6.60it/s, bound:0 nc: 39 ncall:1.1e+04 eff:14.2% logz=-27037.05+/-0.08 dlogz:1014.120>0.0001]1550it [01:26,  6.40it/s, bound:0 nc: 63 ncall:1.1e+04 eff:14.1% logz=-27036.94+/-0.08 dlogz:1014.013>0.0001]1551it [01:27,  4.70it/s, bound:0 nc: 51 ncall:1.1e+04 eff:14.0% logz=-27036.91+/-0.09 dlogz:1013.975>0.0001]1552it [01:27,  4.56it/s, bound:0 nc: 19 ncall:1.1e+04 eff:14.0% logz=-27036.87+/-0.09 dlogz:1013.939>0.0001]1556it [01:27,  7.41it/s, bound:0 nc: 28 ncall:1.1e+04 eff:14.0% logz=-27036.74+/-0.09 dlogz:1013.794>0.0001]1558it [01:27,  7.62it/s, bound:0 nc: 20 ncall:1.1e+04 eff:14.0% logz=-27036.67+/-0.09 dlogz:1013.723>0.0001]1560it [01:28,  7.76it/s, bound:0 nc: 37 ncall:1.1e+04 eff:14.0% logz=-27036.61+/-0.09 dlogz:1013.655>0.0001]1562it [01:28,  7.87it/s, bound:0 nc: 16 ncall:1.1e+04 eff:14.0% logz=-27036.55+/-0.09 dlogz:1013.589>0.0001]1564it [01:28,  6.24it/s, bound:0 nc: 59 ncall:1.1e+04 eff:13.9% logz=-27036.49+/-0.09 dlogz:1013.525>0.0001]1566it [01:29,  6.71it/s, bound:0 nc: 20 ncall:1.1e+04 eff:13.9% logz=-27036.43+/-0.09 dlogz:1013.463>0.0001]1567it [01:29,  6.06it/s, bound:0 nc: 44 ncall:1.1e+04 eff:13.8% logz=-27036.40+/-0.09 dlogz:1013.432>0.0001]1570it [01:29,  6.10it/s, bound:0 nc: 54 ncall:1.1e+04 eff:13.8% logz=-27036.32+/-0.09 dlogz:1013.344>0.0001]1572it [01:30,  6.59it/s, bound:0 nc: 38 ncall:1.1e+04 eff:13.7% logz=-27036.27+/-0.09 dlogz:1013.288>0.0001]1573it [01:30,  5.99it/s, bound:0 nc: 10 ncall:1.1e+04 eff:13.7% logz=-27036.24+/-0.09 dlogz:1013.259>0.0001]1578it [01:30,  9.78it/s, bound:0 nc: 18 ncall:1.1e+04 eff:13.7% logz=-27036.10+/-0.09 dlogz:1013.107>0.0001]1580it [01:30,  9.35it/s, bound:0 nc: 18 ncall:1.2e+04 eff:13.7% logz=-27036.05+/-0.09 dlogz:1013.050>0.0001]1582it [01:31,  9.07it/s, bound:0 nc: 26 ncall:1.2e+04 eff:13.7% logz=-27036.00+/-0.09 dlogz:1012.993>0.0001]1583it [01:31,  7.68it/s, bound:0 nc: 36 ncall:1.2e+04 eff:13.7% logz=-27035.97+/-0.09 dlogz:1012.965>0.0001]1584it [01:31,  5.16it/s, bound:0 nc: 61 ncall:1.2e+04 eff:13.6% logz=-27035.94+/-0.09 dlogz:1012.936>0.0001]1585it [01:32,  4.93it/s, bound:0 nc: 46 ncall:1.2e+04 eff:13.6% logz=-27035.91+/-0.09 dlogz:1012.907>0.0001]1587it [01:32,  5.78it/s, bound:0 nc: 20 ncall:1.2e+04 eff:13.6% logz=-27035.86+/-0.09 dlogz:1012.849>0.0001]1588it [01:32,  4.20it/s, bound:0 nc: 66 ncall:1.2e+04 eff:13.5% logz=-27035.83+/-0.09 dlogz:1012.820>0.0001]1590it [01:33,  5.15it/s, bound:0 nc: 13 ncall:1.2e+04 eff:13.5% logz=-27035.78+/-0.09 dlogz:1012.765>0.0001]1591it [01:33,  4.89it/s, bound:0 nc: 22 ncall:1.2e+04 eff:13.4% logz=-27035.76+/-0.09 dlogz:1012.738>0.0001]1593it [01:33,  5.80it/s, bound:0 nc: 26 ncall:1.2e+04 eff:13.4% logz=-27035.71+/-0.09 dlogz:1012.684>0.0001]1594it [01:34,  3.44it/s, bound:0 nc: 99 ncall:1.2e+04 eff:13.3% logz=-27035.68+/-0.09 dlogz:1012.656>0.0001]1596it [01:34,  3.66it/s, bound:0 nc: 62 ncall:1.2e+04 eff:13.3% logz=-27035.63+/-0.09 dlogz:1012.601>0.0001]1597it [01:35,  3.14it/s, bound:0 nc: 87 ncall:1.2e+04 eff:13.2% logz=-27035.61+/-0.09 dlogz:1012.573>0.0001]1598it [01:35,  2.80it/s, bound:0 nc: 41 ncall:1.2e+04 eff:13.1% logz=-27035.58+/-0.09 dlogz:1012.546>0.0001]1599it [01:36,  2.23it/s, bound:0 nc: 98 ncall:1.2e+04 eff:13.1% logz=-27035.55+/-0.09 dlogz:1012.518>0.0001]1602it [01:36,  3.32it/s, bound:0 nc: 60 ncall:1.2e+04 eff:13.0% logz=-27035.48+/-0.09 dlogz:1012.434>0.0001]1603it [01:37,  3.46it/s, bound:0 nc: 38 ncall:1.2e+04 eff:13.0% logz=-27035.45+/-0.09 dlogz:1012.407>0.0001]1604it [01:37,  3.60it/s, bound:0 nc: 24 ncall:1.2e+04 eff:12.9% logz=-27035.42+/-0.09 dlogz:1012.380>0.0001]1605it [01:38,  2.60it/s, bound:0 nc: 80 ncall:1.2e+04 eff:12.9% logz=-27035.39+/-0.10 dlogz:1012.350>0.0001]1606it [01:38,  2.87it/s, bound:0 nc: 48 ncall:1.3e+04 eff:12.8% logz=-27035.37+/-0.10 dlogz:1012.318>0.0001]1608it [01:38,  3.29it/s, bound:0 nc: 44 ncall:1.3e+04 eff:12.8% logz=-27035.31+/-0.10 dlogz:1012.256>0.0001]1609it [01:39,  3.45it/s, bound:0 nc: 26 ncall:1.3e+04 eff:12.8% logz=-27035.28+/-0.10 dlogz:1012.226>0.0001]1611it [01:39,  4.49it/s, bound:0 nc:  8 ncall:1.3e+04 eff:12.8% logz=-27035.23+/-0.10 dlogz:1012.167>0.0001]1614it [01:39,  6.34it/s, bound:0 nc: 16 ncall:1.3e+04 eff:12.7% logz=-27035.14+/-0.10 dlogz:1012.079>0.0001]1615it [01:40,  3.86it/s, bound:0 nc:109 ncall:1.3e+04 eff:12.6% logz=-27035.11+/-0.10 dlogz:1012.049>0.0001]1616it [01:40,  3.30it/s, bound:0 nc: 45 ncall:1.3e+04 eff:12.6% logz=-27035.08+/-0.10 dlogz:1012.017>0.0001]1618it [01:40,  4.24it/s, bound:0 nc: 46 ncall:1.3e+04 eff:12.6% logz=-27035.02+/-0.10 dlogz:1011.951>0.0001]1620it [01:41,  5.10it/s, bound:0 nc: 14 ncall:1.3e+04 eff:12.6% logz=-27034.95+/-0.10 dlogz:1011.879>0.0001]1622it [01:41,  5.86it/s, bound:0 nc: 32 ncall:1.3e+04 eff:12.5% logz=-27034.88+/-0.10 dlogz:1011.806>0.0001]1623it [01:41,  4.30it/s, bound:0 nc: 53 ncall:1.3e+04 eff:12.5% logz=-27034.85+/-0.10 dlogz:1011.769>0.0001]1624it [01:42,  3.50it/s, bound:0 nc: 64 ncall:1.3e+04 eff:12.4% logz=-27034.81+/-0.10 dlogz:1011.733>0.0001]1626it [01:42,  3.73it/s, bound:0 nc: 46 ncall:1.3e+04 eff:12.4% logz=-27034.74+/-0.10 dlogz:1011.661>0.0001]1628it [01:43,  4.63it/s, bound:0 nc: 16 ncall:1.3e+04 eff:12.4% logz=-27034.68+/-0.10 dlogz:1011.592>0.0001]1633it [01:43,  6.72it/s, bound:0 nc: 46 ncall:1.3e+04 eff:12.4% logz=-27034.51+/-0.10 dlogz:1011.417>0.0001]1636it [01:43,  7.89it/s, bound:0 nc: 21 ncall:1.3e+04 eff:12.3% logz=-27034.42+/-0.10 dlogz:1011.312>0.0001]1637it [01:44,  5.72it/s, bound:0 nc: 58 ncall:1.3e+04 eff:12.3% logz=-27034.39+/-0.10 dlogz:1011.279>0.0001]1639it [01:44,  6.25it/s, bound:0 nc: 29 ncall:1.3e+04 eff:12.3% logz=-27034.33+/-0.10 dlogz:1011.214>0.0001]1641it [01:44,  6.69it/s, bound:0 nc: 33 ncall:1.3e+04 eff:12.3% logz=-27034.27+/-0.10 dlogz:1011.149>0.0001]1642it [01:45,  6.08it/s, bound:0 nc: 29 ncall:1.3e+04 eff:12.2% logz=-27034.24+/-0.10 dlogz:1011.117>0.0001]1646it [01:45,  6.98it/s, bound:0 nc: 50 ncall:1.3e+04 eff:12.2% logz=-27034.11+/-0.10 dlogz:1010.988>0.0001]1649it [01:45,  8.21it/s, bound:0 nc: 22 ncall:1.3e+04 eff:12.2% logz=-27034.02+/-0.10 dlogz:1010.892>0.0001]1652it [01:46,  9.21it/s, bound:0 nc: 31 ncall:1.4e+04 eff:12.2% logz=-27033.93+/-0.10 dlogz:1010.793>0.0001]1653it [01:46,  5.20it/s, bound:0 nc: 97 ncall:1.4e+04 eff:12.1% logz=-27033.90+/-0.10 dlogz:1010.761>0.0001]1654it [01:47,  5.00it/s, bound:0 nc: 24 ncall:1.4e+04 eff:12.1% logz=-27033.87+/-0.10 dlogz:1010.730>0.0001]1657it [01:47,  6.59it/s, bound:0 nc: 41 ncall:1.4e+04 eff:12.1% logz=-27033.79+/-0.10 dlogz:1010.641>0.0001]1658it [01:47,  4.87it/s, bound:0 nc: 37 ncall:1.4e+04 eff:12.1% logz=-27033.76+/-0.10 dlogz:1010.611>0.0001]1659it [01:48,  4.70it/s, bound:0 nc: 32 ncall:1.4e+04 eff:12.0% logz=-27033.74+/-0.10 dlogz:1010.582>0.0001]1661it [01:48,  5.54it/s, bound:0 nc: 21 ncall:1.4e+04 eff:12.0% logz=-27033.68+/-0.10 dlogz:1010.519>0.0001]1665it [01:48,  6.62it/s, bound:0 nc: 63 ncall:1.4e+04 eff:12.0% logz=-27033.56+/-0.10 dlogz:1010.394>0.0001]1666it [01:48,  6.08it/s, bound:0 nc: 24 ncall:1.4e+04 eff:12.0% logz=-27033.53+/-0.10 dlogz:1010.364>0.0001]1668it [01:49,  6.59it/s, bound:0 nc: 16 ncall:1.4e+04 eff:12.0% logz=-27033.47+/-0.10 dlogz:1010.302>0.0001]1669it [01:49,  5.99it/s, bound:0 nc: 23 ncall:1.4e+04 eff:11.9% logz=-27033.45+/-0.10 dlogz:1010.272>0.0001]1671it [01:49,  5.22it/s, bound:0 nc: 61 ncall:1.4e+04 eff:11.9% logz=-27033.39+/-0.10 dlogz:1010.212>0.0001]1672it [01:50,  4.95it/s, bound:0 nc: 22 ncall:1.4e+04 eff:11.9% logz=-27033.36+/-0.10 dlogz:1010.183>0.0001]1674it [01:50,  4.63it/s, bound:0 nc: 44 ncall:1.4e+04 eff:11.8% logz=-27033.31+/-0.10 dlogz:1010.124>0.0001]1676it [01:51,  4.45it/s, bound:0 nc: 57 ncall:1.4e+04 eff:11.8% logz=-27033.25+/-0.10 dlogz:1010.065>0.0001]1677it [01:51,  4.39it/s, bound:0 nc: 13 ncall:1.4e+04 eff:11.8% logz=-27033.23+/-0.10 dlogz:1010.036>0.0001]1678it [01:51,  4.31it/s, bound:0 nc: 34 ncall:1.4e+04 eff:11.8% logz=-27033.20+/-0.10 dlogz:1010.008>0.0001]1681it [01:51,  6.29it/s, bound:0 nc:  5 ncall:1.4e+04 eff:11.8% logz=-27033.13+/-0.10 dlogz:1009.925>0.0001]1682it [01:52,  5.76it/s, bound:0 nc: 35 ncall:1.4e+04 eff:11.7% logz=-27033.10+/-0.10 dlogz:1009.898>0.0001]1684it [01:52,  5.06it/s, bound:0 nc: 48 ncall:1.4e+04 eff:11.7% logz=-27033.05+/-0.10 dlogz:1009.841>0.0001]1686it [01:52,  5.82it/s, bound:0 nc: 28 ncall:1.4e+04 eff:11.7% logz=-27032.99+/-0.10 dlogz:1009.780>0.0001]1688it [01:53,  4.28it/s, bound:0 nc: 76 ncall:1.5e+04 eff:11.6% logz=-27032.93+/-0.10 dlogz:1009.718>0.0001]1690it [01:53,  5.04it/s, bound:0 nc: 43 ncall:1.5e+04 eff:11.6% logz=-27032.87+/-0.10 dlogz:1009.656>0.0001]1691it [01:54,  4.00it/s, bound:0 nc: 47 ncall:1.5e+04 eff:11.6% logz=-27032.84+/-0.10 dlogz:1009.625>0.0001]1692it [01:54,  4.03it/s, bound:0 nc: 22 ncall:1.5e+04 eff:11.6% logz=-27032.81+/-0.10 dlogz:1009.595>0.0001]1693it [01:54,  4.04it/s, bound:0 nc: 41 ncall:1.5e+04 eff:11.5% logz=-27032.79+/-0.10 dlogz:1009.565>0.0001]1695it [01:55,  5.05it/s, bound:0 nc: 24 ncall:1.5e+04 eff:11.5% logz=-27032.73+/-0.10 dlogz:1009.506>0.0001]1697it [01:55,  5.87it/s, bound:0 nc: 16 ncall:1.5e+04 eff:11.5% logz=-27032.68+/-0.10 dlogz:1009.449>0.0001]1698it [01:55,  4.27it/s, bound:0 nc: 76 ncall:1.5e+04 eff:11.4% logz=-27032.65+/-0.10 dlogz:1009.421>0.0001]1699it [01:55,  4.23it/s, bound:0 nc: 19 ncall:1.5e+04 eff:11.4% logz=-27032.63+/-0.10 dlogz:1009.392>0.0001]1700it [01:56,  3.37it/s, bound:0 nc: 52 ncall:1.5e+04 eff:11.4% logz=-27032.60+/-0.10 dlogz:1009.364>0.0001]1702it [01:56,  4.46it/s, bound:0 nc: 31 ncall:1.5e+04 eff:11.4% logz=-27032.55+/-0.10 dlogz:1009.309>0.0001]1704it [01:56,  5.37it/s, bound:0 nc: 20 ncall:1.5e+04 eff:11.4% logz=-27032.50+/-0.10 dlogz:1009.255>0.0001]1705it [01:57,  5.06it/s, bound:0 nc: 38 ncall:1.5e+04 eff:11.4% logz=-27032.48+/-0.10 dlogz:1009.229>0.0001]1706it [01:57,  3.80it/s, bound:0 nc: 75 ncall:1.5e+04 eff:11.3% logz=-27032.45+/-0.10 dlogz:1009.202>0.0001]1707it [01:57,  3.88it/s, bound:0 nc:  6 ncall:1.5e+04 eff:11.3% logz=-27032.43+/-0.10 dlogz:1009.176>0.0001]1708it [01:58,  3.95it/s, bound:0 nc: 35 ncall:1.5e+04 eff:11.3% logz=-27032.41+/-0.10 dlogz:1009.151>0.0001]1711it [01:58,  6.17it/s, bound:0 nc: 25 ncall:1.5e+04 eff:11.3% logz=-27032.33+/-0.10 dlogz:1009.068>0.0001]1713it [01:58,  6.76it/s, bound:0 nc:  7 ncall:1.5e+04 eff:11.3% logz=-27032.28+/-0.10 dlogz:1009.013>0.0001]1714it [01:58,  5.99it/s, bound:0 nc: 41 ncall:1.5e+04 eff:11.3% logz=-27032.25+/-0.10 dlogz:1008.986>0.0001]1715it [01:59,  4.27it/s, bound:0 nc: 57 ncall:1.5e+04 eff:11.2% logz=-27032.23+/-0.10 dlogz:1008.958>0.0001]1717it [02:00,  3.55it/s, bound:0 nc: 91 ncall:1.5e+04 eff:11.1% logz=-27032.18+/-0.10 dlogz:1008.904>0.0001]1718it [02:00,  3.09it/s, bound:0 nc: 47 ncall:1.5e+04 eff:11.1% logz=-27032.15+/-0.10 dlogz:1008.877>0.0001]1721it [02:01,  4.08it/s, bound:0 nc: 39 ncall:1.6e+04 eff:11.1% logz=-27032.08+/-0.10 dlogz:1008.797>0.0001]1722it [02:01,  4.09it/s, bound:0 nc: 42 ncall:1.6e+04 eff:11.1% logz=-27032.05+/-0.10 dlogz:1008.770>0.0001]1723it [02:01,  4.11it/s, bound:0 nc: 35 ncall:1.6e+04 eff:11.1% logz=-27032.03+/-0.10 dlogz:1008.745>0.0001]1724it [02:02,  3.36it/s, bound:0 nc: 50 ncall:1.6e+04 eff:11.0% logz=-27032.01+/-0.10 dlogz:1008.719>0.0001]1726it [02:02,  4.39it/s, bound:0 nc: 37 ncall:1.6e+04 eff:11.0% logz=-27031.96+/-0.10 dlogz:1008.669>0.0001]1727it [02:02,  3.53it/s, bound:0 nc: 60 ncall:1.6e+04 eff:11.0% logz=-27031.94+/-0.10 dlogz:1008.644>0.0001]1728it [02:03,  3.03it/s, bound:0 nc: 61 ncall:1.6e+04 eff:10.9% logz=-27031.92+/-0.10 dlogz:1008.620>0.0001]1729it [02:03,  2.71it/s, bound:0 nc: 81 ncall:1.6e+04 eff:10.9% logz=-27031.89+/-0.10 dlogz:1008.595>0.0001]1730it [02:03,  2.99it/s, bound:0 nc: 18 ncall:1.6e+04 eff:10.9% logz=-27031.87+/-0.10 dlogz:1008.569>0.0001]1731it [02:05,  1.29it/s, bound:0 nc:258 ncall:1.6e+04 eff:10.7% logz=-27031.84+/-0.10 dlogz:1008.543>0.0001]1733it [02:06,  2.05it/s, bound:0 nc: 24 ncall:1.6e+04 eff:10.7% logz=-27031.80+/-0.10 dlogz:1008.491>0.0001]1734it [02:06,  2.05it/s, bound:0 nc: 64 ncall:1.6e+04 eff:10.7% logz=-27031.77+/-0.10 dlogz:1008.465>0.0001]1735it [02:06,  2.36it/s, bound:0 nc: 33 ncall:1.6e+04 eff:10.7% logz=-27031.75+/-0.10 dlogz:1008.439>0.0001]1736it [02:07,  2.67it/s, bound:0 nc: 28 ncall:1.6e+04 eff:10.6% logz=-27031.73+/-0.10 dlogz:1008.413>0.0001]1737it [02:07,  2.96it/s, bound:0 nc: 37 ncall:1.6e+04 eff:10.6% logz=-27031.70+/-0.10 dlogz:1008.388>0.0001]1739it [02:07,  3.39it/s, bound:0 nc: 40 ncall:1.6e+04 eff:10.6% logz=-27031.66+/-0.10 dlogz:1008.337>0.0001]1740it [02:08,  3.54it/s, bound:0 nc: 59 ncall:1.6e+04 eff:10.6% logz=-27031.63+/-0.10 dlogz:1008.312>0.0001]1741it [02:08,  3.67it/s, bound:0 nc: 32 ncall:1.6e+04 eff:10.6% logz=-27031.61+/-0.10 dlogz:1008.286>0.0001]1742it [02:08,  3.79it/s, bound:0 nc:  4 ncall:1.7e+04 eff:10.6% logz=-27031.58+/-0.10 dlogz:1008.260>0.0001]1743it [02:09,  2.57it/s, bound:0 nc:105 ncall:1.7e+04 eff:10.5% logz=-27031.56+/-0.10 dlogz:1008.234>0.0001]1745it [02:09,  3.70it/s, bound:0 nc: 38 ncall:1.7e+04 eff:10.5% logz=-27031.51+/-0.10 dlogz:1008.180>0.0001]1746it [02:10,  2.62it/s, bound:0 nc: 72 ncall:1.7e+04 eff:10.4% logz=-27031.48+/-0.10 dlogz:1008.150>0.0001]1748it [02:10,  3.64it/s, bound:0 nc: 32 ncall:1.7e+04 eff:10.4% logz=-27031.42+/-0.10 dlogz:1008.088>0.0001]1750it [02:10,  4.59it/s, bound:0 nc:  7 ncall:1.7e+04 eff:10.4% logz=-27031.36+/-0.10 dlogz:1008.022>0.0001]1753it [02:11,  5.19it/s, bound:0 nc: 55 ncall:1.7e+04 eff:10.4% logz=-27031.27+/-0.10 dlogz:1007.927>0.0001]1754it [02:11,  4.96it/s, bound:0 nc: 34 ncall:1.7e+04 eff:10.4% logz=-27031.24+/-0.10 dlogz:1007.896>0.0001]1755it [02:11,  4.79it/s, bound:0 nc: 26 ncall:1.7e+04 eff:10.4% logz=-27031.21+/-0.10 dlogz:1007.866>0.0001]1756it [02:11,  4.64it/s, bound:0 nc: 26 ncall:1.7e+04 eff:10.4% logz=-27031.18+/-0.10 dlogz:1007.836>0.0001]1759it [02:12,  6.66it/s, bound:0 nc: 31 ncall:1.7e+04 eff:10.3% logz=-27031.10+/-0.10 dlogz:1007.746>0.0001]1760it [02:12,  5.99it/s, bound:0 nc: 21 ncall:1.7e+04 eff:10.3% logz=-27031.07+/-0.10 dlogz:1007.716>0.0001]1764it [02:12,  8.97it/s, bound:0 nc: 32 ncall:1.7e+04 eff:10.3% logz=-27030.97+/-0.10 dlogz:1007.600>0.0001]1765it [02:13,  5.91it/s, bound:0 nc: 51 ncall:1.7e+04 eff:10.3% logz=-27030.94+/-0.10 dlogz:1007.573>0.0001]1767it [02:13,  6.50it/s, bound:0 nc: 42 ncall:1.7e+04 eff:10.3% logz=-27030.89+/-0.10 dlogz:1007.518>0.0001]1768it [02:13,  5.91it/s, bound:0 nc: 20 ncall:1.7e+04 eff:10.3% logz=-27030.87+/-0.10 dlogz:1007.491>0.0001]1769it [02:13,  5.43it/s, bound:0 nc: 22 ncall:1.7e+04 eff:10.3% logz=-27030.84+/-0.10 dlogz:1007.464>0.0001]1770it [02:14,  3.23it/s, bound:0 nc:102 ncall:1.7e+04 eff:10.2% logz=-27030.82+/-0.10 dlogz:1007.436>0.0001]1771it [02:14,  3.42it/s, bound:0 nc: 20 ncall:1.7e+04 eff:10.2% logz=-27030.79+/-0.10 dlogz:1007.409>0.0001]1773it [02:15,  4.49it/s, bound:0 nc: 20 ncall:1.7e+04 eff:10.2% logz=-27030.74+/-0.10 dlogz:1007.355>0.0001]1774it [02:15,  3.56it/s, bound:0 nc: 58 ncall:1.7e+04 eff:10.2% logz=-27030.72+/-0.10 dlogz:1007.329>0.0001]1776it [02:16,  3.19it/s, bound:0 nc:110 ncall:1.8e+04 eff:10.1% logz=-27030.67+/-0.10 dlogz:1007.278>0.0001]1777it [02:16,  3.36it/s, bound:0 nc: 31 ncall:1.8e+04 eff:10.1% logz=-27030.65+/-0.10 dlogz:1007.251>0.0001]1778it [02:16,  3.53it/s, bound:0 nc: 35 ncall:1.8e+04 eff:10.1% logz=-27030.62+/-0.10 dlogz:1007.225>0.0001]1781it [02:17,  4.50it/s, bound:0 nc: 59 ncall:1.8e+04 eff:10.1% logz=-27030.54+/-0.10 dlogz:1007.143>0.0001]1782it [02:17,  3.68it/s, bound:0 nc: 47 ncall:1.8e+04 eff:10.1% logz=-27030.52+/-0.10 dlogz:1007.117>0.0001]1783it [02:17,  3.77it/s, bound:0 nc: 46 ncall:1.8e+04 eff:10.0% logz=-27030.49+/-0.10 dlogz:1007.090>0.0001]1786it [02:18,  5.70it/s, bound:0 nc: 17 ncall:1.8e+04 eff:10.0% logz=-27030.42+/-0.10 dlogz:1007.008>0.0001]1787it [02:18,  3.60it/s, bound:0 nc: 93 ncall:1.8e+04 eff:10.0% logz=-27030.39+/-0.10 dlogz:1006.981>0.0001]1788it [02:24,  1.33s/it, bound:1 nc: 63 ncall:1.8e+04 eff:10.0% logz=-27030.37+/-0.10 dlogz:1006.955>0.0001]1820it [02:28,  3.91it/s, bound:2 nc: 35 ncall:1.9e+04 eff:9.8% logz=-27029.45+/-0.10 dlogz:1005.972>0.0001] 1844it [02:33,  4.35it/s, bound:3 nc:  8 ncall:1.9e+04 eff:9.6% logz=-27028.83+/-0.10 dlogz:1005.301>0.0001]1870it [02:38,  4.60it/s, bound:4 nc:  2 ncall:2.0e+04 eff:9.4% logz=-27028.19+/-0.06 dlogz:1004.609>0.0001]1898it [02:44,  4.81it/s, bound:5 nc: 15 ncall:2.1e+04 eff:9.2% logz=-27027.47+/-0.09 dlogz:1003.841>0.0001]1924it [02:49,  5.02it/s, bound:6 nc:  5 ncall:2.1e+04 eff:9.0% logz=-27026.78+/-0.10 dlogz:1003.095>0.0001]1953it [02:54,  5.25it/s, bound:7 nc:  3 ncall:2.2e+04 eff:8.9% logz=-27025.94+/-0.10 dlogz:1002.202>0.0001]1983it [02:59,  5.34it/s, bound:8 nc:  3 ncall:2.3e+04 eff:8.7% logz=-27025.20+/-0.10 dlogz:1001.397>0.0001]2015it [03:05,  5.43it/s, bound:10 nc:  3 ncall:2.3e+04 eff:8.6% logz=-27024.50+/-0.10 dlogz:1000.628>0.0001]2041it [03:10,  5.20it/s, bound:11 nc: 13 ncall:2.4e+04 eff:8.4% logz=-27023.94+/-0.10 dlogz:1000.015>0.0001]2067it [03:16,  5.05it/s, bound:12 nc:  4 ncall:2.5e+04 eff:8.3% logz=-27023.32+/-0.10 dlogz:999.342>0.0001] 2096it [03:21,  5.20it/s, bound:13 nc: 12 ncall:2.6e+04 eff:8.1% logz=-27022.64+/-0.11 dlogz:998.608>0.0001]2121it [03:27,  4.94it/s, bound:14 nc: 13 ncall:2.6e+04 eff:8.0% logz=-27022.07+/-0.11 dlogz:997.988>0.0001]2150it [03:32,  5.04it/s, bound:16 nc: 12 ncall:2.7e+04 eff:7.9% logz=-27021.40+/-0.11 dlogz:997.262>0.0001]2175it [03:38,  4.95it/s, bound:17 nc: 13 ncall:2.8e+04 eff:7.8% logz=-27020.81+/-0.11 dlogz:996.622>0.0001]2200it [03:43,  4.74it/s, bound:18 nc:  5 ncall:2.9e+04 eff:7.7% logz=-27020.16+/-0.11 dlogz:995.920>0.0001]2230it [03:49,  4.96it/s, bound:19 nc:  4 ncall:3.0e+04 eff:7.6% logz=-27019.38+/-0.08 dlogz:995.081>0.0001]2256it [03:55,  4.80it/s, bound:21 nc:  5 ncall:3.0e+04 eff:7.5% logz=-27018.74+/-0.09 dlogz:994.392>0.0001]2282it [04:00,  4.78it/s, bound:22 nc: 29 ncall:3.1e+04 eff:7.3% logz=-27018.13+/-0.10 dlogz:993.721>0.0001]2309it [04:06,  4.85it/s, bound:23 nc: 14 ncall:3.2e+04 eff:7.3% logz=-27017.62+/-0.10 dlogz:993.153>0.0001]2336it [04:11,  4.87it/s, bound:24 nc: 10 ncall:3.3e+04 eff:7.2% logz=-27017.14+/-0.11 dlogz:992.622>0.0001]2364it [04:17,  4.91it/s, bound:25 nc:  8 ncall:3.3e+04 eff:7.1% logz=-27016.62+/-0.11 dlogz:992.049>0.0001]2388it [04:22,  4.74it/s, bound:27 nc: 10 ncall:3.4e+04 eff:7.0% logz=-27016.19+/-0.11 dlogz:991.567>0.0001]2416it [04:28,  4.68it/s, bound:28 nc: 31 ncall:3.5e+04 eff:6.9% logz=-27015.69+/-0.11 dlogz:991.012>0.0001]2440it [04:34,  4.45it/s, bound:29 nc:  5 ncall:3.6e+04 eff:6.8% logz=-27015.29+/-0.11 dlogz:990.567>0.0001]2468it [04:40,  4.52it/s, bound:31 nc:  5 ncall:3.7e+04 eff:6.8% logz=-27014.82+/-0.11 dlogz:990.038>0.0001]2494it [04:47,  4.43it/s, bound:32 nc: 10 ncall:3.7e+04 eff:6.7% logz=-27014.36+/-0.11 dlogz:989.528>0.0001]2519it [04:53,  4.33it/s, bound:33 nc: 82 ncall:3.8e+04 eff:6.6% logz=-27013.87+/-0.11 dlogz:988.991>0.0001]2543it [04:59,  4.20it/s, bound:35 nc:  5 ncall:3.9e+04 eff:6.5% logz=-27013.45+/-0.06 dlogz:988.515>0.0001]2568it [05:05,  4.16it/s, bound:36 nc:  5 ncall:4.0e+04 eff:6.4% logz=-27013.02+/-0.08 dlogz:988.037>0.0001]2594it [05:11,  4.10it/s, bound:37 nc: 12 ncall:4.1e+04 eff:6.4% logz=-27012.61+/-0.09 dlogz:987.572>0.0001]2618it [05:18,  4.06it/s, bound:39 nc:  5 ncall:4.2e+04 eff:6.3% logz=-27012.24+/-0.10 dlogz:987.161>0.0001]2642it [05:24,  3.97it/s, bound:40 nc: 15 ncall:4.2e+04 eff:6.2% logz=-27011.86+/-0.10 dlogz:986.730>0.0001]2663it [05:30,  3.79it/s, bound:42 nc: 10 ncall:4.3e+04 eff:6.2% logz=-27011.49+/-0.11 dlogz:986.319>0.0001]2689it [05:36,  3.93it/s, bound:43 nc: 24 ncall:4.4e+04 eff:6.1% logz=-27011.06+/-0.11 dlogz:985.837>0.0001]2714it [05:42,  3.99it/s, bound:44 nc: 30 ncall:4.5e+04 eff:6.0% logz=-27010.65+/-0.11 dlogz:985.379>0.0001]2736it [05:49,  3.79it/s, bound:46 nc: 14 ncall:4.6e+04 eff:6.0% logz=-27010.31+/-0.11 dlogz:984.990>0.0001]2763it [05:55,  3.89it/s, bound:47 nc: 96 ncall:4.7e+04 eff:5.9% logz=-27009.86+/-0.11 dlogz:2364.685>0.0001]2787it [06:02,  3.86it/s, bound:49 nc:  4 ncall:4.8e+04 eff:5.9% logz=-27009.47+/-0.11 dlogz:2364.247>0.0001]2813it [06:08,  3.92it/s, bound:50 nc: 48 ncall:4.9e+04 eff:5.8% logz=-27009.09+/-0.06 dlogz:2363.806>0.0001]2836it [06:15,  3.77it/s, bound:51 nc: 15 ncall:4.9e+04 eff:5.7% logz=-27008.74+/-0.08 dlogz:2363.416>0.0001]2861it [06:22,  3.75it/s, bound:53 nc:  3 ncall:5.0e+04 eff:5.7% logz=-27008.32+/-0.09 dlogz:2362.946>0.0001]2883it [06:28,  3.59it/s, bound:54 nc: 26 ncall:5.1e+04 eff:5.6% logz=-27007.92+/-0.10 dlogz:2362.506>0.0001]2907it [06:35,  3.62it/s, bound:56 nc: 45 ncall:5.2e+04 eff:5.6% logz=-27007.50+/-0.11 dlogz:2362.033>0.0001]2929it [06:42,  3.49it/s, bound:57 nc: 34 ncall:5.3e+04 eff:5.5% logz=-27007.11+/-0.11 dlogz:2361.604>0.0001]2948it [06:48,  3.34it/s, bound:59 nc: 45 ncall:5.4e+04 eff:5.5% logz=-27006.81+/-0.11 dlogz:2361.263>0.0001]2966it [06:55,  3.13it/s, bound:60 nc: 13 ncall:5.5e+04 eff:5.4% logz=-27006.54+/-0.11 dlogz:2360.951>0.0001]2986it [07:02,  3.07it/s, bound:62 nc:  5 ncall:5.6e+04 eff:5.4% logz=-27006.25+/-0.12 dlogz:2360.623>0.0001]3008it [07:09,  3.09it/s, bound:63 nc: 34 ncall:5.7e+04 eff:5.3% logz=-27005.92+/-0.12 dlogz:2360.250>0.0001]3032it [07:16,  3.17it/s, bound:65 nc: 23 ncall:5.8e+04 eff:5.3% logz=-27005.56+/-0.05 dlogz:2359.842>0.0001]3054it [07:23,  3.13it/s, bound:66 nc: 31 ncall:5.9e+04 eff:5.2% logz=-27005.21+/-0.08 dlogz:2359.455>0.0001]3076it [07:30,  3.14it/s, bound:68 nc: 36 ncall:6.0e+04 eff:5.2% logz=-27004.87+/-0.09 dlogz:2359.066>0.0001]3097it [07:37,  3.08it/s, bound:69 nc:  5 ncall:6.1e+04 eff:5.1% logz=-27004.57+/-0.10 dlogz:2358.723>0.0001]3121it [07:44,  3.19it/s, bound:71 nc: 17 ncall:6.2e+04 eff:5.1% logz=-27004.24+/-0.11 dlogz:2358.344>0.0001]3139it [07:51,  3.03it/s, bound:72 nc: 26 ncall:6.3e+04 eff:5.0% logz=-27004.00+/-0.11 dlogz:2358.065>0.0001]3161it [07:58,  3.06it/s, bound:74 nc: 15 ncall:6.3e+04 eff:5.0% logz=-27003.71+/-0.11 dlogz:2357.736>0.0001]3181it [08:06,  2.92it/s, bound:75 nc:  5 ncall:6.4e+04 eff:4.9% logz=-27003.45+/-0.11 dlogz:2357.430>0.0001]3203it [08:13,  2.93it/s, bound:77 nc: 44 ncall:6.5e+04 eff:4.9% logz=-27003.13+/-0.12 dlogz:2357.069>0.0001]3225it [08:20,  2.96it/s, bound:78 nc: 27 ncall:6.7e+04 eff:4.8% logz=-27002.83+/-0.12 dlogz:2356.725>0.0001]3246it [08:28,  2.91it/s, bound:80 nc: 63 ncall:6.8e+04 eff:4.8% logz=-27002.55+/-0.06 dlogz:2356.408>0.0001]3267it [08:35,  2.87it/s, bound:82 nc:  5 ncall:6.9e+04 eff:4.8% logz=-27002.28+/-0.08 dlogz:2356.096>0.0001]3287it [08:43,  2.84it/s, bound:83 nc: 81 ncall:7.0e+04 eff:4.7% logz=-27002.02+/-0.09 dlogz:2355.796>0.0001]3305it [08:50,  2.74it/s, bound:85 nc: 50 ncall:7.1e+04 eff:4.7% logz=-27001.79+/-0.10 dlogz:2355.531>0.0001]3323it [08:57,  2.64it/s, bound:86 nc: 18 ncall:7.2e+04 eff:4.6% logz=-27001.55+/-0.10 dlogz:2355.253>0.0001]3343it [09:04,  2.71it/s, bound:88 nc: 25 ncall:7.3e+04 eff:4.6% logz=-27001.28+/-0.11 dlogz:2354.941>0.0001]3361it [09:12,  2.60it/s, bound:89 nc:  5 ncall:7.3e+04 eff:4.6% logz=-27001.05+/-0.11 dlogz:2354.671>0.0001]3380it [09:19,  2.62it/s, bound:91 nc: 66 ncall:7.5e+04 eff:4.5% logz=-27000.81+/-0.11 dlogz:2354.394>0.0001]3400it [09:27,  2.58it/s, bound:93 nc:118 ncall:7.6e+04 eff:4.5% logz=-27000.57+/-0.12 dlogz:2354.119>0.0001]3414it [09:35,  2.35it/s, bound:94 nc: 28 ncall:7.7e+04 eff:4.5% logz=-27000.41+/-0.04 dlogz:2353.929>0.0001]3434it [09:43,  2.41it/s, bound:96 nc: 78 ncall:7.8e+04 eff:4.4% logz=-27000.19+/-0.07 dlogz:2353.665>0.0001]3450it [09:50,  2.32it/s, bound:98 nc: 55 ncall:7.9e+04 eff:4.4% logz=-27000.01+/-0.08 dlogz:2353.456>0.0001]3468it [09:58,  2.30it/s, bound:99 nc: 65 ncall:8.0e+04 eff:4.3% logz=-26999.82+/-0.09 dlogz:2353.227>0.0001]3487it [10:06,  2.35it/s, bound:101 nc: 64 ncall:8.1e+04 eff:4.3% logz=-26999.61+/-0.10 dlogz:2352.979>0.0001]3503it [10:14,  2.25it/s, bound:103 nc: 15 ncall:8.2e+04 eff:4.3% logz=-26999.43+/-0.10 dlogz:2352.772>0.0001]3524it [10:22,  2.36it/s, bound:104 nc:171 ncall:8.3e+04 eff:4.2% logz=-26999.21+/-0.11 dlogz:2352.506>0.0001]3540it [10:30,  2.26it/s, bound:106 nc:  5 ncall:8.4e+04 eff:4.2% logz=-26999.04+/-0.11 dlogz:2352.304>0.0001]3558it [10:38,  2.27it/s, bound:108 nc: 21 ncall:8.5e+04 eff:4.2% logz=-26998.86+/-0.11 dlogz:2352.086>0.0001]18:46 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
3565it [10:40,  2.34it/s, bound:108 nc: 97 ncall:8.6e+04 eff:4.2% logz=-26998.79+/-0.01 dlogz:2352.003>0.0001]3573it [10:48,  1.89it/s, bound:109 nc: 39 ncall:8.6e+04 eff:4.1% logz=-26998.71+/-0.04 dlogz:2351.909>0.0001]3594it [10:56,  2.12it/s, bound:111 nc: 25 ncall:8.7e+04 eff:4.1% logz=-26998.51+/-0.06 dlogz:2351.670>0.0001]3615it [11:04,  2.28it/s, bound:113 nc:  6 ncall:8.8e+04 eff:4.1% logz=-26998.32+/-0.08 dlogz:2351.431>0.0001]3636it [11:12,  2.39it/s, bound:115 nc:129 ncall:9.0e+04 eff:4.1% logz=-26998.13+/-0.09 dlogz:2351.197>0.0001]3653it [11:20,  2.31it/s, bound:116 nc: 40 ncall:9.1e+04 eff:4.0% logz=-26997.96+/-0.09 dlogz:2350.993>0.0001]3670it [11:28,  2.24it/s, bound:118 nc: 84 ncall:9.2e+04 eff:4.0% logz=-26997.79+/-0.10 dlogz:2350.798>0.0001]3685it [11:36,  2.11it/s, bound:120 nc: 28 ncall:9.3e+04 eff:4.0% logz=-26997.65+/-0.10 dlogz:2350.627>0.0001]3704it [11:44,  2.20it/s, bound:122 nc:  6 ncall:9.4e+04 eff:3.9% logz=-26997.46+/-0.11 dlogz:2350.401>0.0001]3722it [11:52,  2.20it/s, bound:123 nc: 29 ncall:9.5e+04 eff:3.9% logz=-26997.29+/-0.01 dlogz:2350.187>0.0001]3743it [12:01,  2.31it/s, bound:125 nc: 43 ncall:9.6e+04 eff:3.9% logz=-26997.09+/-0.06 dlogz:2349.943>0.0001]3764it [12:09,  2.38it/s, bound:127 nc: 43 ncall:9.7e+04 eff:3.9% logz=-26996.89+/-0.07 dlogz:2349.701>0.0001]3785it [12:17,  2.40it/s, bound:129 nc: 97 ncall:9.9e+04 eff:3.8% logz=-26996.69+/-0.09 dlogz:2349.462>0.0001]3805it [12:26,  2.40it/s, bound:131 nc: 21 ncall:1.0e+05 eff:3.8% logz=-26996.49+/-0.09 dlogz:2349.226>0.0001]3824it [12:34,  2.35it/s, bound:132 nc: 51 ncall:1.0e+05 eff:3.8% logz=-26996.30+/-0.10 dlogz:2348.999>0.0001]3844it [12:43,  2.34it/s, bound:134 nc: 56 ncall:1.0e+05 eff:3.8% logz=-26996.11+/-0.11 dlogz:2348.762>0.0001]3863it [12:52,  2.29it/s, bound:136 nc: 73 ncall:1.0e+05 eff:3.7% logz=-26995.91+/-0.11 dlogz:2348.528>0.0001]3882it [13:00,  2.27it/s, bound:138 nc: 43 ncall:1.0e+05 eff:3.7% logz=-26995.72+/-0.11 dlogz:2348.301>0.0001]3900it [13:09,  2.23it/s, bound:140 nc:108 ncall:1.1e+05 eff:3.7% logz=-26995.55+/-0.05 dlogz:2348.094>0.0001]3921it [13:17,  2.32it/s, bound:142 nc: 45 ncall:1.1e+05 eff:3.7% logz=-26995.34+/-0.07 dlogz:2347.845>0.0001]3941it [13:25,  2.32it/s, bound:144 nc: 31 ncall:1.1e+05 eff:3.7% logz=-26995.15+/-0.09 dlogz:2347.607>0.0001]3960it [13:34,  2.32it/s, bound:145 nc: 34 ncall:1.1e+05 eff:3.6% logz=-26994.97+/-0.09 dlogz:2347.391>0.0001]3979it [13:42,  2.28it/s, bound:147 nc: 18 ncall:1.1e+05 eff:3.6% logz=-26994.79+/-0.10 dlogz:2347.176>0.0001]4001it [13:51,  2.37it/s, bound:149 nc:  6 ncall:1.1e+05 eff:3.6% logz=-26994.58+/-0.11 dlogz:2346.920>0.0001]4024it [14:00,  2.44it/s, bound:151 nc:105 ncall:1.1e+05 eff:3.6% logz=-26994.36+/-0.11 dlogz:2346.654>0.0001]4043it [14:08,  2.37it/s, bound:153 nc:140 ncall:1.1e+05 eff:3.6% logz=-26994.16+/-0.12 dlogz:2346.421>0.0001]4061it [14:17,  2.28it/s, bound:155 nc:160 ncall:1.2e+05 eff:3.5% logz=-26993.96+/-0.05 dlogz:2346.184>0.0001]4079it [14:26,  2.21it/s, bound:156 nc: 40 ncall:1.2e+05 eff:3.5% logz=-26993.77+/-0.07 dlogz:2345.953>0.0001]4095it [14:34,  2.10it/s, bound:158 nc: 47 ncall:1.2e+05 eff:3.5% logz=-26993.60+/-0.08 dlogz:2345.753>0.0001]4114it [14:43,  2.12it/s, bound:160 nc: 21 ncall:1.2e+05 eff:3.5% logz=-26993.41+/-0.09 dlogz:2345.528>0.0001]4132it [14:52,  2.11it/s, bound:162 nc: 43 ncall:1.2e+05 eff:3.5% logz=-26993.25+/-0.10 dlogz:2345.328>0.0001]4155it [15:01,  2.27it/s, bound:164 nc:174 ncall:1.2e+05 eff:3.4% logz=-26993.05+/-0.11 dlogz:2345.084>0.0001]4174it [15:10,  2.23it/s, bound:166 nc:110 ncall:1.2e+05 eff:3.4% logz=-26992.88+/-0.11 dlogz:2344.879>0.0001]4192it [15:18,  2.17it/s, bound:168 nc:123 ncall:1.2e+05 eff:3.4% logz=-26992.73+/-0.11 dlogz:2344.686>0.0001]4209it [15:27,  2.10it/s, bound:170 nc:  6 ncall:1.2e+05 eff:3.4% logz=-26992.58+/-0.05 dlogz:2344.509>0.0001]4229it [15:36,  2.15it/s, bound:171 nc: 45 ncall:1.3e+05 eff:3.4% logz=-26992.41+/-0.07 dlogz:2344.294>0.0001]4249it [15:45,  2.18it/s, bound:173 nc:150 ncall:1.3e+05 eff:3.3% logz=-26992.23+/-0.08 dlogz:2344.071>0.0001]4268it [15:54,  2.18it/s, bound:175 nc: 17 ncall:1.3e+05 eff:3.3% logz=-26992.05+/-0.09 dlogz:2343.858>0.0001]4284it [16:02,  2.06it/s, bound:177 nc: 16 ncall:1.3e+05 eff:3.3% logz=-26991.90+/-0.10 dlogz:2343.676>0.0001]4303it [16:11,  2.08it/s, bound:179 nc: 59 ncall:1.3e+05 eff:3.3% logz=-26991.72+/-0.11 dlogz:2343.457>0.0001]4321it [16:20,  2.07it/s, bound:181 nc: 15 ncall:1.3e+05 eff:3.3% logz=-26991.55+/-0.11 dlogz:2343.251>0.0001]4342it [16:29,  2.16it/s, bound:183 nc: 47 ncall:1.3e+05 eff:3.3% logz=-26991.35+/-0.03 dlogz:2343.006>0.0001]4366it [16:38,  2.33it/s, bound:185 nc: 18 ncall:1.3e+05 eff:3.3% logz=-26991.13+/-0.06 dlogz:2342.746>0.0001]4387it [16:47,  2.33it/s, bound:187 nc:101 ncall:1.4e+05 eff:3.2% logz=-26990.96+/-0.08 dlogz:2342.527>0.0001]4405it [16:55,  2.26it/s, bound:189 nc:  5 ncall:1.4e+05 eff:3.2% logz=-26990.80+/-0.09 dlogz:2342.333>0.0001]4426it [17:04,  2.29it/s, bound:191 nc:  5 ncall:1.4e+05 eff:3.2% logz=-26990.61+/-0.10 dlogz:2342.104>0.0001]4448it [17:13,  2.34it/s, bound:193 nc: 44 ncall:1.4e+05 eff:3.2% logz=-26990.41+/-0.11 dlogz:2341.856>0.0001]4466it [17:22,  2.27it/s, bound:195 nc: 41 ncall:1.4e+05 eff:3.2% logz=-26990.25+/-0.11 dlogz:2341.659>0.0001]4490it [17:31,  2.41it/s, bound:196 nc:  5 ncall:1.4e+05 eff:3.2% logz=-26990.04+/-0.12 dlogz:2341.407>0.0001]4513it [17:39,  2.47it/s, bound:198 nc:  4 ncall:1.4e+05 eff:3.2% logz=-26989.85+/-0.03 dlogz:2341.171>0.0001]4538it [17:48,  2.60it/s, bound:200 nc: 16 ncall:1.4e+05 eff:3.2% logz=-26989.65+/-0.07 dlogz:2340.921>0.0001]4559it [17:57,  2.54it/s, bound:202 nc: 30 ncall:1.5e+05 eff:3.1% logz=-26989.49+/-0.08 dlogz:2340.719>0.0001]4578it [18:05,  2.44it/s, bound:204 nc: 49 ncall:1.5e+05 eff:3.1% logz=-26989.35+/-0.09 dlogz:2340.533>0.0001]4599it [18:14,  2.44it/s, bound:206 nc:  6 ncall:1.5e+05 eff:3.1% logz=-26989.18+/-0.10 dlogz:2340.326>0.0001]4624it [18:23,  2.59it/s, bound:208 nc: 43 ncall:1.5e+05 eff:3.1% logz=-26988.98+/-0.11 dlogz:2340.074>0.0001]4646it [18:31,  2.60it/s, bound:210 nc:  5 ncall:1.5e+05 eff:3.1% logz=-26988.80+/-0.11 dlogz:2339.851>0.0001]4669it [18:39,  2.66it/s, bound:212 nc: 19 ncall:1.5e+05 eff:3.1% logz=-26988.61+/-0.12 dlogz:2339.617>0.0001]4686it [18:48,  2.46it/s, bound:214 nc: 83 ncall:1.5e+05 eff:3.1% logz=-26988.47+/-0.03 dlogz:2339.439>0.0001]4708it [18:56,  2.54it/s, bound:216 nc:  5 ncall:1.5e+05 eff:3.1% logz=-26988.28+/-0.07 dlogz:2339.208>0.0001]4728it [19:04,  2.53it/s, bound:217 nc: 17 ncall:1.5e+05 eff:3.1% logz=-26988.12+/-0.08 dlogz:2339.005>0.0001]4752it [19:11,  2.70it/s, bound:219 nc: 16 ncall:1.6e+05 eff:3.1% logz=-26987.93+/-0.09 dlogz:2338.772>0.0001]4771it [19:19,  2.60it/s, bound:221 nc: 44 ncall:1.6e+05 eff:3.0% logz=-26987.78+/-0.10 dlogz:2338.585>0.0001]4793it [19:27,  2.67it/s, bound:223 nc:  4 ncall:1.6e+05 eff:3.0% logz=-26987.62+/-0.11 dlogz:2338.374>0.0001]4813it [19:35,  2.66it/s, bound:224 nc:155 ncall:1.6e+05 eff:3.0% logz=-26987.46+/-0.11 dlogz:2338.178>0.0001]4831it [19:42,  2.59it/s, bound:226 nc: 13 ncall:1.6e+05 eff:3.0% logz=-26987.31+/-0.12 dlogz:2337.989>0.0001]4851it [19:49,  2.63it/s, bound:228 nc: 21 ncall:1.6e+05 eff:3.0% logz=-26987.14+/-0.12 dlogz:2337.780>0.0001]4874it [19:57,  2.74it/s, bound:229 nc: 80 ncall:1.6e+05 eff:3.0% logz=-26986.94+/-0.05 dlogz:2337.534>0.0001]4893it [20:05,  2.67it/s, bound:231 nc: 16 ncall:1.6e+05 eff:3.0% logz=-26986.78+/-0.07 dlogz:2337.337>0.0001]4914it [20:12,  2.71it/s, bound:233 nc: 38 ncall:1.6e+05 eff:3.0% logz=-26986.60+/-0.09 dlogz:2337.117>0.0001]4933it [20:20,  2.66it/s, bound:234 nc: 41 ncall:1.7e+05 eff:3.0% logz=-26986.44+/-0.10 dlogz:2336.915>0.0001]4954it [20:27,  2.72it/s, bound:236 nc: 67 ncall:1.7e+05 eff:3.0% logz=-26986.24+/-0.11 dlogz:2336.681>0.0001]4975it [20:34,  2.78it/s, bound:238 nc:  4 ncall:1.7e+05 eff:3.0% logz=-26986.05+/-0.12 dlogz:2336.441>0.0001]4999it [20:41,  2.97it/s, bound:239 nc: 15 ncall:1.7e+05 eff:3.0% logz=-26985.82+/-0.12 dlogz:2336.172>0.0001]5022it [20:48,  3.06it/s, bound:240 nc: 98 ncall:1.7e+05 eff:3.0% logz=-26985.62+/-0.13 dlogz:2335.919>0.0001]5050it [20:56,  3.28it/s, bound:242 nc: 16 ncall:1.7e+05 eff:3.0% logz=-26985.35+/-0.13 dlogz:2335.596>0.0001]18:57 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
5068it [20:58,  3.78it/s, bound:243 nc: 40 ncall:1.7e+05 eff:3.0% logz=-26985.15+/-0.02 dlogz:2335.364>0.0001]5075it [21:05,  2.83it/s, bound:244 nc: 24 ncall:1.7e+05 eff:3.0% logz=-26985.07+/-0.04 dlogz:2335.267>0.0001]5102it [21:12,  3.16it/s, bound:245 nc:  7 ncall:1.7e+05 eff:3.0% logz=-26984.73+/-0.09 dlogz:2334.875>0.0001]5130it [21:20,  3.37it/s, bound:247 nc: 25 ncall:1.7e+05 eff:3.0% logz=-26984.40+/-0.11 dlogz:2334.491>0.0001]5159it [21:27,  3.54it/s, bound:248 nc: 16 ncall:1.7e+05 eff:3.0% logz=-26984.02+/-0.12 dlogz:2334.054>0.0001]5187it [21:35,  3.57it/s, bound:250 nc:  6 ncall:1.8e+05 eff:3.0% logz=-26983.60+/-0.13 dlogz:2333.583>0.0001]5218it [21:42,  3.78it/s, bound:252 nc: 13 ncall:1.8e+05 eff:3.0% logz=-26982.96+/-0.14 dlogz:2332.887>0.0001]5247it [21:50,  3.74it/s, bound:253 nc: 31 ncall:1.8e+05 eff:3.0% logz=-26981.61+/-0.16 dlogz:2331.506>0.0001]5276it [21:58,  3.64it/s, bound:255 nc:  6 ncall:1.8e+05 eff:3.0% logz=-26979.37+/-0.16 dlogz:2329.237>0.0001]5305it [22:07,  3.54it/s, bound:257 nc:  7 ncall:1.8e+05 eff:3.0% logz=-26975.94+/-0.17 dlogz:2325.955>0.0001]5337it [22:15,  3.64it/s, bound:259 nc:  4 ncall:1.8e+05 eff:3.0% logz=-26923.29+/-0.18 dlogz:2275.209>0.0001]5368it [22:24,  3.68it/s, bound:261 nc:  7 ncall:1.8e+05 eff:3.0% logz=-26884.46+/-0.18 dlogz:2234.924>0.0001]5399it [22:32,  3.69it/s, bound:262 nc:  4 ncall:1.8e+05 eff:3.0% logz=-26827.89+/-0.18 dlogz:2177.958>0.0001]5430it [22:40,  3.72it/s, bound:264 nc: 19 ncall:1.8e+05 eff:3.0% logz=-26794.74+/-0.18 dlogz:2145.686>0.0001]5459it [22:48,  3.66it/s, bound:266 nc: 21 ncall:1.9e+05 eff:2.9% logz=-26761.40+/-0.18 dlogz:2112.926>0.0001]5487it [22:57,  3.51it/s, bound:268 nc:  5 ncall:1.9e+05 eff:2.9% logz=-26712.14+/-0.18 dlogz:2062.355>0.0001]5517it [23:06,  3.52it/s, bound:270 nc:  7 ncall:1.9e+05 eff:2.9% logz=-26670.40+/-0.18 dlogz:2021.345>0.0001]5548it [23:14,  3.57it/s, bound:272 nc: 14 ncall:1.9e+05 eff:2.9% logz=-26617.90+/-0.18 dlogz:1968.971>0.0001]5577it [23:23,  3.51it/s, bound:274 nc: 17 ncall:1.9e+05 eff:2.9% logz=-26574.39+/-0.18 dlogz:1924.470>0.0001]5606it [23:31,  3.50it/s, bound:275 nc:  5 ncall:1.9e+05 eff:2.9% logz=-26534.85+/-0.19 dlogz:1887.449>0.0001]5635it [23:39,  3.47it/s, bound:277 nc: 26 ncall:1.9e+05 eff:2.9% logz=-26489.31+/-0.18 dlogz:1839.121>0.0001]5666it [23:48,  3.49it/s, bound:279 nc:  6 ncall:1.9e+05 eff:2.9% logz=-26450.35+/-0.18 dlogz:1800.246>0.0001]5697it [23:57,  3.57it/s, bound:281 nc:  5 ncall:1.9e+05 eff:2.9% logz=-26417.70+/-0.18 dlogz:1767.648>0.0001]5727it [24:05,  3.55it/s, bound:283 nc: 42 ncall:2.0e+05 eff:2.9% logz=-26379.54+/-0.18 dlogz:1729.456>0.0001]5756it [24:13,  3.57it/s, bound:285 nc: 23 ncall:2.0e+05 eff:2.9% logz=-26347.76+/-0.18 dlogz:2407.283>0.0001]5784it [24:21,  3.52it/s, bound:287 nc:  7 ncall:2.0e+05 eff:2.9% logz=-26320.71+/-0.19 dlogz:2381.059>0.0001]5815it [24:30,  3.55it/s, bound:288 nc: 24 ncall:2.0e+05 eff:2.9% logz=-26289.39+/-0.18 dlogz:2349.238>0.0001]5841it [24:38,  3.43it/s, bound:290 nc: 11 ncall:2.0e+05 eff:2.9% logz=-26255.79+/-0.18 dlogz:2315.486>0.0001]5870it [24:46,  3.46it/s, bound:292 nc: 28 ncall:2.0e+05 eff:2.9% logz=-26221.07+/-0.18 dlogz:2280.394>0.0001]5900it [24:55,  3.49it/s, bound:294 nc:  7 ncall:2.0e+05 eff:2.9% logz=-26186.82+/-0.18 dlogz:2246.444>0.0001]5931it [25:03,  3.59it/s, bound:296 nc:  6 ncall:2.0e+05 eff:2.9% logz=-26154.97+/-0.19 dlogz:2215.032>0.0001]5961it [25:12,  3.54it/s, bound:298 nc: 15 ncall:2.1e+05 eff:2.9% logz=-26128.66+/-0.18 dlogz:2917.061>0.0001]5987it [25:20,  3.38it/s, bound:300 nc:  6 ncall:2.1e+05 eff:2.9% logz=-26089.28+/-0.19 dlogz:2878.299>0.0001]6019it [25:29,  3.49it/s, bound:302 nc: 37 ncall:2.1e+05 eff:2.9% logz=-26060.70+/-0.18 dlogz:2849.236>0.0001]6049it [25:37,  3.53it/s, bound:303 nc: 34 ncall:2.1e+05 eff:2.9% logz=-26036.42+/-0.17 dlogz:2824.439>0.0001]6079it [25:46,  3.50it/s, bound:305 nc:  5 ncall:2.1e+05 eff:2.9% logz=-26009.33+/-0.18 dlogz:2797.409>0.0001]6109it [25:54,  3.53it/s, bound:307 nc:  7 ncall:2.1e+05 eff:2.9% logz=-25979.68+/-0.19 dlogz:2767.800>0.0001]6140it [26:03,  3.57it/s, bound:309 nc: 59 ncall:2.1e+05 eff:2.9% logz=-25958.95+/-0.19 dlogz:2747.384>0.0001]6166it [26:11,  3.41it/s, bound:311 nc:  7 ncall:2.1e+05 eff:2.9% logz=-25937.35+/-0.18 dlogz:2725.256>0.0001]6197it [26:19,  3.51it/s, bound:313 nc: 17 ncall:2.1e+05 eff:2.9% logz=-25912.90+/-0.19 dlogz:2701.385>0.0001]6226it [26:28,  3.50it/s, bound:315 nc: 36 ncall:2.2e+05 eff:2.9% logz=-25891.13+/-0.19 dlogz:2678.900>0.0001]6253it [26:36,  3.43it/s, bound:317 nc: 44 ncall:2.2e+05 eff:2.9% logz=-25870.45+/-0.18 dlogz:2657.891>0.0001]6278it [26:45,  3.28it/s, bound:318 nc: 32 ncall:2.2e+05 eff:2.9% logz=-25846.79+/-0.17 dlogz:2634.695>0.0001]6307it [26:53,  3.31it/s, bound:320 nc: 20 ncall:2.2e+05 eff:2.9% logz=-25817.68+/-0.19 dlogz:2606.400>0.0001]6335it [27:01,  3.32it/s, bound:322 nc:  7 ncall:2.2e+05 eff:2.9% logz=-25794.69+/-0.19 dlogz:2582.187>0.0001]6362it [27:10,  3.32it/s, bound:324 nc:  5 ncall:2.2e+05 eff:2.9% logz=-25775.66+/-0.19 dlogz:2563.110>0.0001]6392it [27:18,  3.37it/s, bound:326 nc: 23 ncall:2.2e+05 eff:2.9% logz=-25751.38+/-0.19 dlogz:2538.613>0.0001]6421it [27:27,  3.40it/s, bound:328 nc:  5 ncall:2.2e+05 eff:2.9% logz=-25733.64+/-0.19 dlogz:2520.933>0.0001]6451it [27:35,  3.44it/s, bound:330 nc: 24 ncall:2.3e+05 eff:2.9% logz=-25712.64+/-0.19 dlogz:2500.255>0.0001]6478it [27:44,  3.37it/s, bound:332 nc:  6 ncall:2.3e+05 eff:2.9% logz=-25692.31+/-0.19 dlogz:2479.533>0.0001]6506it [27:52,  3.31it/s, bound:333 nc: 21 ncall:2.3e+05 eff:2.9% logz=-25662.69+/-0.19 dlogz:2450.162>0.0001]6531it [28:01,  3.21it/s, bound:335 nc: 18 ncall:2.3e+05 eff:2.9% logz=-25641.84+/-0.19 dlogz:2429.219>0.0001]6559it [28:09,  3.21it/s, bound:337 nc: 33 ncall:2.3e+05 eff:2.9% logz=-25616.82+/-0.19 dlogz:2403.992>0.0001]6584it [28:18,  3.11it/s, bound:339 nc: 13 ncall:2.3e+05 eff:2.9% logz=-25600.42+/-0.19 dlogz:2387.585>0.0001]6606it [28:27,  2.93it/s, bound:341 nc: 40 ncall:2.3e+05 eff:2.8% logz=-25585.83+/-0.19 dlogz:2373.056>0.0001]6633it [28:35,  3.00it/s, bound:343 nc: 51 ncall:2.3e+05 eff:2.8% logz=-25559.45+/-0.20 dlogz:2349.351>0.0001]6658it [28:44,  2.98it/s, bound:345 nc:  6 ncall:2.3e+05 eff:2.8% logz=-25540.56+/-0.19 dlogz:2327.355>0.0001]6688it [28:53,  3.11it/s, bound:347 nc: 36 ncall:2.4e+05 eff:2.8% logz=-25520.42+/-0.19 dlogz:2306.952>0.0001]6711it [29:01,  2.98it/s, bound:349 nc: 36 ncall:2.4e+05 eff:2.8% logz=-25500.51+/-0.20 dlogz:2288.054>0.0001]6738it [29:10,  3.02it/s, bound:351 nc: 28 ncall:2.4e+05 eff:2.8% logz=-25486.25+/-0.19 dlogz:2272.908>0.0001]6767it [29:18,  3.17it/s, bound:353 nc:  8 ncall:2.4e+05 eff:2.8% logz=-25461.26+/-0.19 dlogz:2248.006>0.0001]6795it [29:27,  3.19it/s, bound:354 nc: 28 ncall:2.4e+05 eff:2.8% logz=-25443.12+/-0.19 dlogz:2229.705>0.0001]6820it [29:35,  3.12it/s, bound:356 nc: 11 ncall:2.4e+05 eff:2.8% logz=-25425.67+/-0.19 dlogz:2476.712>0.0001]6849it [29:44,  3.20it/s, bound:358 nc:  7 ncall:2.4e+05 eff:2.8% logz=-25405.16+/-0.19 dlogz:2455.720>0.0001]6876it [29:53,  3.18it/s, bound:360 nc: 23 ncall:2.4e+05 eff:2.8% logz=-25388.68+/-0.19 dlogz:2439.332>0.0001]6903it [30:01,  3.13it/s, bound:362 nc: 34 ncall:2.5e+05 eff:2.8% logz=-25366.25+/-0.19 dlogz:2416.806>0.0001]6925it [30:10,  2.92it/s, bound:364 nc: 15 ncall:2.5e+05 eff:2.8% logz=-25350.99+/-0.19 dlogz:2401.292>0.0001]6949it [30:19,  2.85it/s, bound:366 nc:117 ncall:2.5e+05 eff:2.8% logz=-25338.62+/-0.19 dlogz:2389.465>0.0001]6975it [30:28,  2.89it/s, bound:368 nc:  8 ncall:2.5e+05 eff:2.8% logz=-25322.93+/-0.19 dlogz:2373.288>0.0001]7003it [30:37,  3.00it/s, bound:370 nc: 63 ncall:2.5e+05 eff:2.8% logz=-25307.58+/-0.19 dlogz:2357.694>0.0001]7024it [30:45,  2.85it/s, bound:372 nc: 52 ncall:2.5e+05 eff:2.8% logz=-25300.49+/-0.19 dlogz:2350.781>0.0001]7050it [30:54,  2.88it/s, bound:374 nc: 24 ncall:2.5e+05 eff:2.8% logz=-25283.92+/-0.19 dlogz:2333.958>0.0001]7071it [31:03,  2.74it/s, bound:376 nc: 93 ncall:2.5e+05 eff:2.8% logz=-25275.00+/-0.19 dlogz:2325.167>0.0001]7097it [31:12,  2.76it/s, bound:378 nc: 24 ncall:2.6e+05 eff:2.8% logz=-25261.01+/-0.19 dlogz:2311.090>0.0001]19:07 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
7110it [31:15,  2.90it/s, bound:379 nc: 40 ncall:2.6e+05 eff:2.8% logz=-25254.20+/-0.14 dlogz:2304.614>0.0001]7121it [31:24,  2.33it/s, bound:380 nc: 25 ncall:2.6e+05 eff:2.8% logz=-25244.11+/-0.20 dlogz:2294.419>0.0001]7146it [31:33,  2.46it/s, bound:382 nc:  8 ncall:2.6e+05 eff:2.8% logz=-25226.00+/-0.20 dlogz:2276.157>0.0001]7170it [31:43,  2.50it/s, bound:384 nc: 38 ncall:2.6e+05 eff:2.8% logz=-25213.03+/-0.19 dlogz:2262.940>0.0001]7193it [31:52,  2.51it/s, bound:386 nc:111 ncall:2.6e+05 eff:2.8% logz=-25202.58+/-0.20 dlogz:2252.653>0.0001]7213it [32:01,  2.39it/s, bound:388 nc: 28 ncall:2.6e+05 eff:2.8% logz=-25194.72+/-0.19 dlogz:2244.351>0.0001]7238it [32:11,  2.47it/s, bound:390 nc: 55 ncall:2.6e+05 eff:2.8% logz=-25179.47+/-0.20 dlogz:2231.187>0.0001]7260it [32:20,  2.47it/s, bound:392 nc: 35 ncall:2.6e+05 eff:2.7% logz=-25167.03+/-0.20 dlogz:2217.132>0.0001]7283it [32:29,  2.49it/s, bound:394 nc: 21 ncall:2.7e+05 eff:2.7% logz=-25153.42+/-0.19 dlogz:2203.162>0.0001]7305it [32:39,  2.40it/s, bound:396 nc:114 ncall:2.7e+05 eff:2.7% logz=-25137.29+/-0.20 dlogz:2186.884>0.0001]7328it [32:48,  2.41it/s, bound:398 nc: 59 ncall:2.7e+05 eff:2.7% logz=-25125.40+/-0.20 dlogz:2175.110>0.0001]7349it [32:58,  2.33it/s, bound:400 nc:  7 ncall:2.7e+05 eff:2.7% logz=-25114.85+/-0.19 dlogz:2164.342>0.0001]7374it [33:07,  2.44it/s, bound:402 nc: 16 ncall:2.7e+05 eff:2.7% logz=-25104.18+/-0.20 dlogz:2153.709>0.0001]7400it [33:16,  2.54it/s, bound:404 nc: 63 ncall:2.7e+05 eff:2.7% logz=-25093.82+/-0.20 dlogz:2144.280>0.0001]7422it [33:26,  2.49it/s, bound:406 nc: 50 ncall:2.7e+05 eff:2.7% logz=-25080.03+/-0.20 dlogz:2129.312>0.0001]7444it [33:35,  2.48it/s, bound:408 nc: 18 ncall:2.7e+05 eff:2.7% logz=-25067.98+/-0.17 dlogz:2118.306>0.0001]7468it [33:44,  2.51it/s, bound:410 nc: 18 ncall:2.8e+05 eff:2.7% logz=-25057.85+/-0.20 dlogz:2107.329>0.0001]7492it [33:53,  2.52it/s, bound:412 nc:  7 ncall:2.8e+05 eff:2.7% logz=-25045.97+/-0.19 dlogz:2095.078>0.0001]7518it [34:03,  2.60it/s, bound:414 nc:  6 ncall:2.8e+05 eff:2.7% logz=-25031.72+/-0.20 dlogz:2080.783>0.0001]7544it [34:12,  2.67it/s, bound:416 nc:  2 ncall:2.8e+05 eff:2.7% logz=-25018.56+/-0.20 dlogz:2067.711>0.0001]7571it [34:22,  2.70it/s, bound:418 nc: 27 ncall:2.8e+05 eff:2.7% logz=-25009.40+/-0.20 dlogz:2058.341>0.0001]7597it [34:32,  2.68it/s, bound:420 nc: 19 ncall:2.8e+05 eff:2.7% logz=-24999.50+/-0.20 dlogz:2048.467>0.0001]7624it [34:41,  2.73it/s, bound:422 nc:  9 ncall:2.8e+05 eff:2.7% logz=-24988.23+/-0.20 dlogz:2037.134>0.0001]7651it [34:51,  2.73it/s, bound:424 nc:  9 ncall:2.8e+05 eff:2.7% logz=-24971.83+/-0.20 dlogz:2122.466>0.0001]7678it [35:01,  2.74it/s, bound:427 nc: 27 ncall:2.9e+05 eff:2.7% logz=-24962.00+/-0.20 dlogz:2112.846>0.0001]7706it [35:10,  2.80it/s, bound:429 nc: 63 ncall:2.9e+05 eff:2.7% logz=-24941.33+/-0.20 dlogz:2092.141>0.0001]7728it [35:19,  2.68it/s, bound:431 nc: 16 ncall:2.9e+05 eff:2.7% logz=-24928.14+/-0.20 dlogz:2079.421>0.0001]7748it [35:28,  2.55it/s, bound:433 nc:  8 ncall:2.9e+05 eff:2.7% logz=-24918.46+/-0.20 dlogz:2069.619>0.0001]7772it [35:38,  2.51it/s, bound:435 nc: 41 ncall:2.9e+05 eff:2.7% logz=-24904.26+/-0.20 dlogz:2054.751>0.0001]7800it [35:48,  2.60it/s, bound:437 nc: 31 ncall:2.9e+05 eff:2.7% logz=-24892.03+/-0.20 dlogz:2042.360>0.0001]7825it [35:58,  2.56it/s, bound:439 nc:105 ncall:2.9e+05 eff:2.7% logz=-24883.79+/-0.20 dlogz:2034.578>0.0001]7850it [36:08,  2.57it/s, bound:441 nc:  7 ncall:3.0e+05 eff:2.7% logz=-24869.70+/-0.20 dlogz:2020.670>0.0001]7876it [36:18,  2.59it/s, bound:443 nc: 30 ncall:3.0e+05 eff:2.7% logz=-24851.91+/-0.20 dlogz:2002.297>0.0001]7900it [36:27,  2.58it/s, bound:445 nc:  9 ncall:3.0e+05 eff:2.6% logz=-24834.19+/-0.20 dlogz:1984.792>0.0001]7925it [36:37,  2.60it/s, bound:448 nc: 21 ncall:3.0e+05 eff:2.6% logz=-24818.87+/-0.20 dlogz:1969.164>0.0001]7953it [36:46,  2.70it/s, bound:450 nc:  9 ncall:3.0e+05 eff:2.6% logz=-24801.67+/-0.20 dlogz:1952.098>0.0001]7979it [36:56,  2.68it/s, bound:452 nc: 25 ncall:3.0e+05 eff:2.6% logz=-24788.93+/-0.20 dlogz:1938.964>0.0001]8007it [37:06,  2.76it/s, bound:454 nc:  9 ncall:3.0e+05 eff:2.6% logz=-24776.59+/-0.20 dlogz:1937.105>0.0001]8036it [37:16,  2.81it/s, bound:456 nc:  7 ncall:3.1e+05 eff:2.6% logz=-24761.41+/-0.20 dlogz:1921.853>0.0001]8064it [37:26,  2.81it/s, bound:458 nc: 30 ncall:3.1e+05 eff:2.6% logz=-24746.58+/-0.20 dlogz:1907.337>0.0001]8092it [37:35,  2.81it/s, bound:461 nc: 38 ncall:3.1e+05 eff:2.6% logz=-24730.58+/-0.21 dlogz:2033.592>0.0001]8118it [37:46,  2.71it/s, bound:463 nc:  4 ncall:3.1e+05 eff:2.6% logz=-24711.66+/-0.21 dlogz:2014.378>0.0001]8148it [37:56,  2.82it/s, bound:465 nc:  8 ncall:3.1e+05 eff:2.6% logz=-24689.33+/-0.21 dlogz:1992.496>0.0001]8178it [38:06,  2.87it/s, bound:467 nc: 87 ncall:3.1e+05 eff:2.6% logz=-24671.98+/-0.21 dlogz:1974.796>0.0001]8205it [38:16,  2.81it/s, bound:470 nc: 31 ncall:3.1e+05 eff:2.6% logz=-24657.92+/-0.20 dlogz:1960.234>0.0001]8234it [38:26,  2.84it/s, bound:472 nc:  9 ncall:3.1e+05 eff:2.6% logz=-24638.31+/-0.21 dlogz:1941.465>0.0001]8264it [38:36,  2.89it/s, bound:474 nc:  8 ncall:3.2e+05 eff:2.6% logz=-24618.01+/-0.20 dlogz:1920.290>0.0001]8293it [38:46,  2.88it/s, bound:476 nc: 74 ncall:3.2e+05 eff:2.6% logz=-24592.10+/-0.21 dlogz:1896.147>0.0001]8324it [38:56,  2.97it/s, bound:478 nc: 24 ncall:3.2e+05 eff:2.6% logz=-24560.99+/-0.21 dlogz:1863.539>0.0001]8353it [39:05,  2.97it/s, bound:481 nc:  8 ncall:3.2e+05 eff:2.6% logz=-24536.82+/-0.21 dlogz:1839.911>0.0001]8381it [39:15,  2.94it/s, bound:483 nc:  9 ncall:3.2e+05 eff:2.6% logz=-24514.39+/-0.20 dlogz:1817.019>0.0001]8413it [39:25,  3.04it/s, bound:485 nc:  7 ncall:3.2e+05 eff:2.6% logz=-24491.25+/-0.21 dlogz:1793.308>0.0001]8443it [39:35,  3.02it/s, bound:487 nc:  8 ncall:3.2e+05 eff:2.6% logz=-24471.38+/-0.21 dlogz:1773.421>0.0001]8475it [39:44,  3.13it/s, bound:489 nc:  8 ncall:3.3e+05 eff:2.6% logz=-24446.19+/-0.21 dlogz:1748.836>0.0001]8507it [39:54,  3.19it/s, bound:491 nc:  5 ncall:3.3e+05 eff:2.6% logz=-24425.93+/-0.21 dlogz:1728.001>0.0001]8537it [40:04,  3.18it/s, bound:494 nc: 21 ncall:3.3e+05 eff:2.6% logz=-24393.39+/-0.21 dlogz:1696.187>0.0001]8566it [40:13,  3.11it/s, bound:496 nc: 27 ncall:3.3e+05 eff:2.6% logz=-24363.93+/-0.21 dlogz:1667.142>0.0001]8597it [40:23,  3.13it/s, bound:498 nc:  5 ncall:3.3e+05 eff:2.6% logz=-24343.10+/-0.21 dlogz:1645.155>0.0001]8629it [40:33,  3.19it/s, bound:500 nc:  9 ncall:3.3e+05 eff:2.6% logz=-24313.49+/-0.21 dlogz:1615.100>0.0001]8661it [40:42,  3.22it/s, bound:502 nc:  9 ncall:3.3e+05 eff:2.6% logz=-24286.39+/-0.21 dlogz:1587.898>0.0001]8693it [40:52,  3.25it/s, bound:504 nc:  4 ncall:3.4e+05 eff:2.6% logz=-24256.31+/-0.21 dlogz:1558.207>0.0001]8724it [41:02,  3.23it/s, bound:506 nc:  8 ncall:3.4e+05 eff:2.6% logz=-24226.56+/-0.22 dlogz:1529.665>0.0001]8755it [41:12,  3.22it/s, bound:509 nc:  8 ncall:3.4e+05 eff:2.6% logz=-24189.01+/-0.21 dlogz:1491.156>0.0001]8786it [41:21,  3.23it/s, bound:511 nc:  9 ncall:3.4e+05 eff:2.6% logz=-24146.73+/-0.21 dlogz:1448.615>0.0001]19:17 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
8814it [41:25,  3.76it/s, bound:513 nc: 73 ncall:3.4e+05 eff:2.6% logz=-24100.24+/-0.16 dlogz:1401.892>0.0001]8816it [41:35,  2.53it/s, bound:513 nc:  7 ncall:3.4e+05 eff:2.6% logz=-24099.33+/-0.19 dlogz:1400.600>0.0001]8845it [41:45,  2.68it/s, bound:515 nc: 80 ncall:3.4e+05 eff:2.6% logz=-24065.04+/-0.21 dlogz:1366.428>0.0001]8876it [41:54,  2.86it/s, bound:517 nc: 10 ncall:3.4e+05 eff:2.6% logz=-24026.64+/-0.22 dlogz:1329.210>0.0001]8906it [42:04,  2.95it/s, bound:519 nc: 19 ncall:3.4e+05 eff:2.6% logz=-23977.38+/-0.22 dlogz:1308.837>0.0001]8938it [42:14,  3.05it/s, bound:521 nc: 10 ncall:3.5e+05 eff:2.6% logz=-23945.56+/-0.21 dlogz:1274.295>0.0001]8970it [42:23,  3.14it/s, bound:524 nc:  7 ncall:3.5e+05 eff:2.6% logz=-23900.71+/-0.22 dlogz:1229.785>0.0001]9001it [42:33,  3.14it/s, bound:526 nc: 10 ncall:3.5e+05 eff:2.6% logz=-23866.51+/-0.22 dlogz:1195.337>0.0001]9032it [42:43,  3.17it/s, bound:528 nc: 92 ncall:3.5e+05 eff:2.6% logz=-23827.14+/-0.16 dlogz:1155.348>0.0001]9061it [42:52,  3.13it/s, bound:530 nc:  9 ncall:3.5e+05 eff:2.6% logz=-23780.00+/-0.22 dlogz:1108.783>0.0001]9093it [43:02,  3.18it/s, bound:532 nc: 10 ncall:3.5e+05 eff:2.6% logz=-23747.72+/-0.21 dlogz:1075.940>0.0001]9123it [43:12,  3.14it/s, bound:534 nc:  7 ncall:3.5e+05 eff:2.6% logz=-23710.92+/-0.22 dlogz:1040.046>0.0001]9155it [43:21,  3.22it/s, bound:536 nc:  9 ncall:3.6e+05 eff:2.6% logz=-23662.28+/-0.22 dlogz:991.659>0.0001] 9187it [43:31,  3.24it/s, bound:539 nc:  7 ncall:3.6e+05 eff:2.6% logz=-23622.69+/-0.22 dlogz:951.253>0.0001]9218it [43:41,  3.24it/s, bound:541 nc:  8 ncall:3.6e+05 eff:2.6% logz=-23589.60+/-0.22 dlogz:927.859>0.0001]9250it [43:50,  3.29it/s, bound:543 nc:  8 ncall:3.6e+05 eff:2.6% logz=-23560.30+/-0.19 dlogz:898.226>0.0001]9282it [43:59,  3.33it/s, bound:545 nc:  7 ncall:3.6e+05 eff:2.6% logz=-23524.31+/-0.22 dlogz:862.234>0.0001]9313it [44:09,  3.32it/s, bound:547 nc:  7 ncall:3.6e+05 eff:2.6% logz=-23480.15+/-0.22 dlogz:818.329>0.0001]9344it [44:18,  3.29it/s, bound:549 nc: 10 ncall:3.6e+05 eff:2.6% logz=-23449.83+/-0.22 dlogz:788.115>0.0001]9374it [44:28,  3.24it/s, bound:551 nc: 10 ncall:3.6e+05 eff:2.6% logz=-23422.31+/-0.22 dlogz:760.042>0.0001]9405it [44:37,  3.26it/s, bound:553 nc:  9 ncall:3.7e+05 eff:2.6% logz=-23393.02+/-0.22 dlogz:731.763>0.0001]9437it [44:47,  3.30it/s, bound:556 nc:  8 ncall:3.7e+05 eff:2.6% logz=-23358.36+/-0.22 dlogz:695.885>0.0001]9469it [44:56,  3.32it/s, bound:558 nc:  9 ncall:3.7e+05 eff:2.6% logz=-23329.54+/-0.22 dlogz:667.816>0.0001]9501it [45:06,  3.35it/s, bound:560 nc:  8 ncall:3.7e+05 eff:2.6% logz=-23303.85+/-0.22 dlogz:641.607>0.0001]9532it [45:15,  3.33it/s, bound:562 nc:  9 ncall:3.7e+05 eff:2.6% logz=-23276.89+/-0.22 dlogz:614.622>0.0001]9563it [45:25,  3.31it/s, bound:564 nc:  7 ncall:3.7e+05 eff:2.6% logz=-23255.29+/-0.22 dlogz:592.647>0.0001]9595it [45:34,  3.31it/s, bound:566 nc:  8 ncall:3.7e+05 eff:2.6% logz=-23224.63+/-0.22 dlogz:561.849>0.0001]9627it [45:44,  3.32it/s, bound:568 nc: 10 ncall:3.8e+05 eff:2.6% logz=-23200.85+/-0.22 dlogz:541.251>0.0001]9658it [45:53,  3.34it/s, bound:570 nc:  9 ncall:3.8e+05 eff:2.6% logz=-23177.13+/-0.22 dlogz:517.821>0.0001]9690it [46:02,  3.39it/s, bound:573 nc:  9 ncall:3.8e+05 eff:2.6% logz=-23153.17+/-0.22 dlogz:494.503>0.0001]9719it [46:11,  3.29it/s, bound:575 nc: 10 ncall:3.8e+05 eff:2.6% logz=-23132.68+/-0.22 dlogz:472.959>0.0001]9749it [46:21,  3.26it/s, bound:577 nc: 91 ncall:3.8e+05 eff:2.6% logz=-23112.39+/-0.22 dlogz:452.618>0.0001]9781it [46:30,  3.33it/s, bound:579 nc:  7 ncall:3.8e+05 eff:2.6% logz=-23099.59+/-0.22 dlogz:439.495>0.0001]9811it [46:40,  3.27it/s, bound:581 nc: 10 ncall:3.8e+05 eff:2.6% logz=-23085.47+/-0.22 dlogz:425.599>0.0001]9843it [46:49,  3.30it/s, bound:583 nc:  7 ncall:3.8e+05 eff:2.6% logz=-23066.69+/-0.22 dlogz:406.547>0.0001]9873it [46:58,  3.29it/s, bound:585 nc: 10 ncall:3.9e+05 eff:2.6% logz=-23052.68+/-0.22 dlogz:392.501>0.0001]9905it [47:08,  3.32it/s, bound:587 nc:  8 ncall:3.9e+05 eff:2.6% logz=-23032.36+/-0.22 dlogz:372.202>0.0001]9937it [47:17,  3.32it/s, bound:590 nc:  7 ncall:3.9e+05 eff:2.6% logz=-23016.65+/-0.22 dlogz:356.644>0.0001]9968it [47:27,  3.30it/s, bound:592 nc: 10 ncall:3.9e+05 eff:2.6% logz=-23001.24+/-0.22 dlogz:341.090>0.0001]10000it [47:36,  3.33it/s, bound:594 nc:  9 ncall:3.9e+05 eff:2.6% logz=-22984.78+/-0.22 dlogz:324.917>0.0001]10031it [47:46,  3.33it/s, bound:596 nc:  8 ncall:3.9e+05 eff:2.6% logz=-22972.03+/-0.22 dlogz:311.720>0.0001]10062it [47:55,  3.33it/s, bound:598 nc:  4 ncall:3.9e+05 eff:2.6% logz=-22958.73+/-0.22 dlogz:298.207>0.0001]10094it [48:04,  3.34it/s, bound:600 nc:  8 ncall:4.0e+05 eff:2.6% logz=-22944.14+/-0.22 dlogz:283.479>0.0001]10126it [48:14,  3.37it/s, bound:602 nc:  6 ncall:4.0e+05 eff:2.6% logz=-22934.21+/-0.22 dlogz:273.671>0.0001]10158it [48:23,  3.37it/s, bound:604 nc: 10 ncall:4.0e+05 eff:2.6% logz=-22921.16+/-0.22 dlogz:260.336>0.0001]10189it [48:33,  3.36it/s, bound:606 nc:  7 ncall:4.0e+05 eff:2.6% logz=-22912.30+/-0.22 dlogz:251.465>0.0001]10221it [48:42,  3.37it/s, bound:609 nc:  8 ncall:4.0e+05 eff:2.6% logz=-22903.36+/-0.22 dlogz:242.489>0.0001]10252it [48:51,  3.35it/s, bound:611 nc:  7 ncall:4.0e+05 eff:2.6% logz=-22892.82+/-0.22 dlogz:231.979>0.0001]10283it [49:01,  3.32it/s, bound:613 nc: 10 ncall:4.0e+05 eff:2.6% logz=-22883.57+/-0.22 dlogz:222.542>0.0001]10313it [49:10,  3.29it/s, bound:615 nc: 10 ncall:4.0e+05 eff:2.6% logz=-22872.29+/-0.22 dlogz:211.285>0.0001]10343it [49:19,  3.27it/s, bound:617 nc:  9 ncall:4.1e+05 eff:2.5% logz=-22863.12+/-0.22 dlogz:201.958>0.0001]10374it [49:29,  3.27it/s, bound:619 nc: 10 ncall:4.1e+05 eff:2.5% logz=-22856.96+/-0.21 dlogz:195.953>0.0001]10405it [49:39,  3.26it/s, bound:621 nc:  9 ncall:4.1e+05 eff:2.5% logz=-22846.22+/-0.22 dlogz:185.001>0.0001]10435it [49:48,  3.21it/s, bound:623 nc:  9 ncall:4.1e+05 eff:2.5% logz=-22834.89+/-0.22 dlogz:173.570>0.0001]10466it [49:58,  3.21it/s, bound:626 nc: 10 ncall:4.1e+05 eff:2.5% logz=-22827.31+/-0.22 dlogz:165.853>0.0001]10498it [50:07,  3.26it/s, bound:628 nc: 10 ncall:4.1e+05 eff:2.5% logz=-22819.13+/-0.22 dlogz:157.698>0.0001]10529it [50:17,  3.25it/s, bound:630 nc: 24 ncall:4.1e+05 eff:2.5% logz=-22813.45+/-0.22 dlogz:152.432>0.0001]10560it [50:26,  3.26it/s, bound:632 nc: 10 ncall:4.1e+05 eff:2.5% logz=-22809.48+/-0.22 dlogz:148.385>0.0001]10591it [50:36,  3.23it/s, bound:634 nc:  9 ncall:4.2e+05 eff:2.5% logz=-22802.35+/-0.20 dlogz:141.362>0.0001]10623it [50:46,  3.26it/s, bound:636 nc: 10 ncall:4.2e+05 eff:2.5% logz=-22797.66+/-0.22 dlogz:136.470>0.0001]10654it [50:56,  3.24it/s, bound:638 nc: 10 ncall:4.2e+05 eff:2.5% logz=-22791.83+/-0.23 dlogz:130.713>0.0001]10685it [51:05,  3.23it/s, bound:640 nc:  8 ncall:4.2e+05 eff:2.5% logz=-22785.39+/-0.22 dlogz:124.119>0.0001]10716it [51:15,  3.23it/s, bound:643 nc: 10 ncall:4.2e+05 eff:2.5% logz=-22780.48+/-0.22 dlogz:119.087>0.0001]10747it [51:25,  3.21it/s, bound:645 nc:  8 ncall:4.2e+05 eff:2.5% logz=-22775.93+/-0.22 dlogz:114.465>0.0001]10777it [51:34,  3.18it/s, bound:647 nc: 89 ncall:4.2e+05 eff:2.5% logz=-22771.49+/-0.22 dlogz:110.011>0.0001]19:27 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
10805it [51:40,  3.58it/s, bound:649 nc: 72 ncall:4.3e+05 eff:2.5% logz=-22768.26+/-0.08 dlogz:106.719>0.0001]10809it [51:49,  2.51it/s, bound:649 nc: 10 ncall:4.3e+05 eff:2.5% logz=-22767.72+/-0.16 dlogz:106.150>0.0001]10840it [51:59,  2.72it/s, bound:651 nc: 10 ncall:4.3e+05 eff:2.5% logz=-22761.91+/-0.22 dlogz:100.273>0.0001]10872it [52:09,  2.88it/s, bound:654 nc: 10 ncall:4.3e+05 eff:2.5% logz=-22758.72+/-0.22 dlogz:97.023>0.0001] 10903it [52:19,  2.95it/s, bound:656 nc: 10 ncall:4.3e+05 eff:2.5% logz=-22755.43+/-0.22 dlogz:93.659>0.0001]10935it [52:29,  3.03it/s, bound:658 nc:  9 ncall:4.3e+05 eff:2.5% logz=-22752.23+/-0.22 dlogz:90.361>0.0001]10966it [52:39,  3.05it/s, bound:660 nc: 10 ncall:4.3e+05 eff:2.5% logz=-22748.87+/-0.22 dlogz:87.031>0.0001]10998it [52:49,  3.09it/s, bound:663 nc:  9 ncall:4.3e+05 eff:2.5% logz=-22744.88+/-0.22 dlogz:82.887>0.0001]11028it [52:59,  3.06it/s, bound:665 nc: 10 ncall:4.4e+05 eff:2.5% logz=-22741.94+/-0.16 dlogz:79.892>0.0001]11059it [53:09,  3.06it/s, bound:667 nc: 10 ncall:4.4e+05 eff:2.5% logz=-22738.43+/-0.22 dlogz:76.337>0.0001]11090it [53:19,  3.07it/s, bound:669 nc: 10 ncall:4.4e+05 eff:2.5% logz=-22735.02+/-0.22 dlogz:72.856>0.0001]11121it [53:29,  3.07it/s, bound:672 nc:  9 ncall:4.4e+05 eff:2.5% logz=-22731.64+/-0.22 dlogz:69.389>0.0001]11152it [53:40,  3.08it/s, bound:674 nc: 29 ncall:4.4e+05 eff:2.5% logz=-22728.34+/-0.22 dlogz:66.058>0.0001]11181it [53:49,  3.03it/s, bound:676 nc:  9 ncall:4.4e+05 eff:2.5% logz=-22726.05+/-0.22 dlogz:63.682>0.0001]11212it [53:59,  3.05it/s, bound:678 nc: 10 ncall:4.4e+05 eff:2.5% logz=-22723.82+/-0.22 dlogz:61.392>0.0001]11243it [54:10,  3.06it/s, bound:680 nc: 10 ncall:4.5e+05 eff:2.5% logz=-22721.34+/-0.20 dlogz:58.846>0.0001]11275it [54:20,  3.08it/s, bound:683 nc: 10 ncall:4.5e+05 eff:2.5% logz=-22718.97+/-0.22 dlogz:56.439>0.0001]11306it [54:30,  3.08it/s, bound:685 nc: 10 ncall:4.5e+05 eff:2.5% logz=-22716.53+/-0.22 dlogz:53.907>0.0001]11337it [54:40,  3.08it/s, bound:687 nc: 89 ncall:4.5e+05 eff:2.5% logz=-22714.39+/-0.22 dlogz:51.694>0.0001]11368it [54:50,  3.07it/s, bound:689 nc: 10 ncall:4.5e+05 eff:2.5% logz=-22712.71+/-0.22 dlogz:49.948>0.0001]11399it [55:00,  3.06it/s, bound:692 nc: 10 ncall:4.5e+05 eff:2.5% logz=-22711.01+/-0.22 dlogz:48.186>0.0001]11430it [55:11,  3.05it/s, bound:694 nc: 10 ncall:4.5e+05 eff:2.5% logz=-22709.46+/-0.07 dlogz:46.561>0.0001]11458it [55:21,  2.98it/s, bound:696 nc: 10 ncall:4.6e+05 eff:2.5% logz=-22707.86+/-0.20 dlogz:44.920>0.0001]11490it [55:31,  3.03it/s, bound:698 nc: 10 ncall:4.6e+05 eff:2.5% logz=-22706.01+/-0.22 dlogz:43.308>0.0001]11520it [55:41,  3.01it/s, bound:701 nc: 90 ncall:4.6e+05 eff:2.5% logz=-22704.37+/-0.22 dlogz:41.611>0.0001]11552it [55:51,  3.05it/s, bound:703 nc: 10 ncall:4.6e+05 eff:2.5% logz=-22702.76+/-0.22 dlogz:39.917>0.0001]11584it [56:01,  3.09it/s, bound:705 nc: 10 ncall:4.6e+05 eff:2.5% logz=-22701.20+/-0.22 dlogz:38.308>0.0001]11615it [56:11,  3.08it/s, bound:707 nc: 10 ncall:4.6e+05 eff:2.5% logz=-22699.88+/-0.22 dlogz:36.919>0.0001]11645it [56:21,  3.05it/s, bound:710 nc:  9 ncall:4.6e+05 eff:2.5% logz=-22698.48+/-0.12 dlogz:35.450>0.0001]11677it [56:31,  3.09it/s, bound:712 nc: 10 ncall:4.7e+05 eff:2.5% logz=-22697.33+/-0.20 dlogz:34.232>0.0001]11708it [56:41,  3.10it/s, bound:714 nc: 10 ncall:4.7e+05 eff:2.5% logz=-22696.14+/-0.22 dlogz:33.214>0.0001]11737it [56:51,  3.04it/s, bound:716 nc: 10 ncall:4.7e+05 eff:2.5% logz=-22694.96+/-0.22 dlogz:31.980>0.0001]11769it [57:01,  3.08it/s, bound:719 nc: 10 ncall:4.7e+05 eff:2.5% logz=-22693.90+/-0.22 dlogz:30.857>0.0001]11800it [57:11,  3.09it/s, bound:721 nc: 10 ncall:4.7e+05 eff:2.5% logz=-22692.80+/-0.23 dlogz:29.701>0.0001]11831it [57:21,  3.09it/s, bound:723 nc: 10 ncall:4.7e+05 eff:2.5% logz=-22691.75+/-0.23 dlogz:28.754>0.0001]11862it [57:31,  3.08it/s, bound:725 nc: 10 ncall:4.7e+05 eff:2.5% logz=-22690.83+/-0.14 dlogz:27.767>0.0001]11892it [57:41,  3.06it/s, bound:728 nc: 10 ncall:4.8e+05 eff:2.5% logz=-22689.92+/-0.20 dlogz:26.794>0.0001]11921it [57:51,  3.02it/s, bound:730 nc: 28 ncall:4.8e+05 eff:2.5% logz=-22688.91+/-0.22 dlogz:25.732>0.0001]11951it [58:01,  3.02it/s, bound:732 nc: 10 ncall:4.8e+05 eff:2.5% logz=-22687.88+/-0.22 dlogz:24.642>0.0001]11982it [58:11,  3.05it/s, bound:734 nc: 10 ncall:4.8e+05 eff:2.5% logz=-22686.87+/-0.23 dlogz:23.569>0.0001]12011it [58:21,  3.01it/s, bound:736 nc: 90 ncall:4.8e+05 eff:2.5% logz=-22686.06+/-0.23 dlogz:22.699>0.0001]12043it [58:31,  3.08it/s, bound:739 nc: 10 ncall:4.8e+05 eff:2.5% logz=-22685.28+/-0.23 dlogz:21.845>0.0001]12073it [58:41,  3.06it/s, bound:741 nc: 89 ncall:4.8e+05 eff:2.5% logz=-22684.49+/-0.16 dlogz:21.003>0.0001]12105it [58:51,  3.12it/s, bound:743 nc: 10 ncall:4.8e+05 eff:2.5% logz=-22683.69+/-0.20 dlogz:20.135>0.0001]12137it [59:01,  3.16it/s, bound:746 nc: 10 ncall:4.9e+05 eff:2.5% logz=-22683.08+/-0.21 dlogz:19.450>0.0001]12169it [59:10,  3.19it/s, bound:748 nc: 10 ncall:4.9e+05 eff:2.5% logz=-22682.51+/-0.22 dlogz:18.820>0.0001]12200it [59:20,  3.18it/s, bound:750 nc: 10 ncall:4.9e+05 eff:2.5% logz=-22681.89+/-0.22 dlogz:18.143>0.0001]12232it [59:30,  3.20it/s, bound:752 nc: 10 ncall:4.9e+05 eff:2.5% logz=-22681.26+/-0.22 dlogz:17.449>0.0001]12264it [59:40,  3.21it/s, bound:754 nc: 10 ncall:4.9e+05 eff:2.5% logz=-22680.67+/-0.05 dlogz:16.788>0.0001]12293it [59:50,  3.13it/s, bound:757 nc: 10 ncall:4.9e+05 eff:2.5% logz=-22680.12+/-0.15 dlogz:16.188>0.0001]12323it [1:00:00,  3.11it/s, bound:759 nc: 10 ncall:4.9e+05 eff:2.5% logz=-22679.48+/-0.19 dlogz:15.482>0.0001]12355it [1:00:09,  3.15it/s, bound:761 nc: 10 ncall:5.0e+05 eff:2.5% logz=-22678.79+/-0.21 dlogz:14.732>0.0001]12382it [1:00:19,  3.03it/s, bound:763 nc: 10 ncall:5.0e+05 eff:2.5% logz=-22678.27+/-0.22 dlogz:14.155>0.0001]12414it [1:00:29,  3.11it/s, bound:765 nc: 10 ncall:5.0e+05 eff:2.5% logz=-22677.77+/-0.22 dlogz:13.590>0.0001]12446it [1:00:39,  3.16it/s, bound:767 nc: 10 ncall:5.0e+05 eff:2.5% logz=-22677.31+/-0.22 dlogz:13.066>0.0001]12477it [1:00:49,  3.16it/s, bound:770 nc: 10 ncall:5.0e+05 eff:2.5% logz=-22676.84+/-0.05 dlogz:12.535>0.0001]12507it [1:00:58,  3.14it/s, bound:772 nc: 10 ncall:5.0e+05 eff:2.5% logz=-22676.39+/-0.14 dlogz:12.020>0.0001]12538it [1:01:08,  3.15it/s, bound:774 nc: 10 ncall:5.0e+05 eff:2.5% logz=-22675.97+/-0.18 dlogz:11.536>0.0001]12570it [1:01:18,  3.19it/s, bound:776 nc: 10 ncall:5.1e+05 eff:2.5% logz=-22675.54+/-0.20 dlogz:11.049>0.0001]12601it [1:01:27,  3.20it/s, bound:778 nc: 10 ncall:5.1e+05 eff:2.5% logz=-22675.14+/-0.21 dlogz:10.681>0.0001]12632it [1:01:37,  3.20it/s, bound:780 nc: 10 ncall:5.1e+05 eff:2.5% logz=-22674.77+/-0.21 dlogz:10.246>0.0001]12662it [1:01:47,  3.17it/s, bound:782 nc: 10 ncall:5.1e+05 eff:2.5% logz=-22674.42+/-0.22 dlogz:9.834>0.0001] 19:38 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
12688it [1:01:53,  3.41it/s, bound:784 nc: 63 ncall:5.1e+05 eff:2.5% logz=-22674.14+/-0.02 dlogz:9.498>0.0001]12692it [1:02:03,  2.43it/s, bound:785 nc: 10 ncall:5.1e+05 eff:2.5% logz=-22674.10+/-0.05 dlogz:9.449>0.0001]12723it [1:02:12,  2.68it/s, bound:787 nc: 86 ncall:5.1e+05 eff:2.5% logz=-22673.80+/-0.12 dlogz:9.087>0.0001]12754it [1:02:22,  2.85it/s, bound:789 nc: 86 ncall:5.1e+05 eff:2.5% logz=-22673.51+/-0.16 dlogz:8.736>0.0001]12785it [1:02:31,  2.96it/s, bound:791 nc: 10 ncall:5.1e+05 eff:2.5% logz=-22673.23+/-0.18 dlogz:8.396>0.0001]12816it [1:02:41,  3.05it/s, bound:793 nc: 86 ncall:5.2e+05 eff:2.5% logz=-22672.97+/-0.19 dlogz:8.074>0.0001]12848it [1:02:51,  3.14it/s, bound:795 nc: 10 ncall:5.2e+05 eff:2.5% logz=-22672.71+/-0.20 dlogz:7.750>0.0001]12880it [1:03:00,  3.20it/s, bound:797 nc: 10 ncall:5.2e+05 eff:2.5% logz=-22672.46+/-0.21 dlogz:7.439>0.0001]12912it [1:03:10,  3.23it/s, bound:800 nc: 10 ncall:5.2e+05 eff:2.5% logz=-22672.23+/-0.04 dlogz:7.145>0.0001]12942it [1:03:19,  3.20it/s, bound:802 nc: 10 ncall:5.2e+05 eff:2.5% logz=-22672.03+/-0.10 dlogz:6.884>0.0001]12973it [1:03:29,  3.21it/s, bound:804 nc: 10 ncall:5.2e+05 eff:2.5% logz=-22671.83+/-0.14 dlogz:6.620>0.0001]13004it [1:03:39,  3.23it/s, bound:806 nc: 10 ncall:5.2e+05 eff:2.5% logz=-22671.64+/-0.16 dlogz:6.370>0.0001]13034it [1:03:48,  3.21it/s, bound:808 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22671.46+/-0.17 dlogz:6.132>0.0001]13063it [1:03:57,  3.16it/s, bound:810 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22671.29+/-0.18 dlogz:5.903>0.0001]13094it [1:04:07,  3.20it/s, bound:812 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22671.11+/-0.19 dlogz:5.664>0.0001]13125it [1:04:16,  3.21it/s, bound:814 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22670.95+/-0.04 dlogz:5.436>0.0001]13156it [1:04:26,  3.23it/s, bound:816 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22670.80+/-0.10 dlogz:5.222>0.0001]13187it [1:04:35,  3.24it/s, bound:818 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22670.64+/-0.12 dlogz:5.010>0.0001]13219it [1:04:45,  3.28it/s, bound:820 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22670.50+/-0.14 dlogz:4.798>0.0001]13249it [1:04:54,  3.26it/s, bound:822 nc: 10 ncall:5.3e+05 eff:2.5% logz=-22670.36+/-0.16 dlogz:4.606>0.0001]13279it [1:05:04,  3.24it/s, bound:825 nc: 10 ncall:5.4e+05 eff:2.5% logz=-22670.23+/-0.17 dlogz:4.418>0.0001]13310it [1:05:13,  3.24it/s, bound:827 nc: 10 ncall:5.4e+05 eff:2.5% logz=-22670.10+/-0.18 dlogz:4.228>0.0001]13342it [1:05:23,  3.30it/s, bound:829 nc: 10 ncall:5.4e+05 eff:2.5% logz=-22669.97+/-0.18 dlogz:4.038>0.0001]13373it [1:05:32,  3.29it/s, bound:831 nc: 10 ncall:5.4e+05 eff:2.5% logz=-22669.85+/-0.09 dlogz:3.860>0.0001]13403it [1:05:41,  3.27it/s, bound:833 nc: 10 ncall:5.4e+05 eff:2.5% logz=-22669.74+/-0.11 dlogz:3.691>0.0001]13433it [1:05:51,  3.25it/s, bound:835 nc: 83 ncall:5.4e+05 eff:2.5% logz=-22669.63+/-0.13 dlogz:3.528>0.0001]13463it [1:06:00,  3.25it/s, bound:837 nc: 10 ncall:5.4e+05 eff:2.5% logz=-22669.53+/-0.14 dlogz:3.369>0.0001]13494it [1:06:09,  3.26it/s, bound:839 nc: 10 ncall:5.5e+05 eff:2.5% logz=-22669.43+/-0.15 dlogz:3.211>0.0001]13526it [1:06:19,  3.31it/s, bound:841 nc: 10 ncall:5.5e+05 eff:2.5% logz=-22669.33+/-0.16 dlogz:3.056>0.0001]13556it [1:06:28,  3.28it/s, bound:843 nc: 10 ncall:5.5e+05 eff:2.5% logz=-22669.24+/-0.17 dlogz:2.917>0.0001]13586it [1:06:37,  3.26it/s, bound:845 nc: 11 ncall:5.5e+05 eff:2.5% logz=-22669.16+/-0.10 dlogz:2.783>0.0001]13618it [1:06:47,  3.32it/s, bound:847 nc: 11 ncall:5.5e+05 eff:2.5% logz=-22669.08+/-0.12 dlogz:2.646>0.0001]13648it [1:06:56,  3.30it/s, bound:849 nc: 11 ncall:5.5e+05 eff:2.5% logz=-22669.00+/-0.13 dlogz:2.522>0.0001]13680it [1:07:05,  3.35it/s, bound:851 nc: 11 ncall:5.5e+05 eff:2.5% logz=-22668.93+/-0.14 dlogz:2.396>0.0001]13711it [1:07:14,  3.35it/s, bound:853 nc: 11 ncall:5.5e+05 eff:2.5% logz=-22668.86+/-0.15 dlogz:2.278>0.0001]13743it [1:07:24,  3.39it/s, bound:855 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.79+/-0.15 dlogz:2.161>0.0001]13773it [1:07:33,  3.36it/s, bound:857 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.73+/-0.16 dlogz:2.055>0.0001]13804it [1:07:42,  3.36it/s, bound:859 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.68+/-0.13 dlogz:1.952>0.0001]13836it [1:07:51,  3.41it/s, bound:861 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.62+/-0.13 dlogz:1.850>0.0001]13867it [1:08:00,  3.41it/s, bound:863 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.57+/-0.14 dlogz:1.756>0.0001]13896it [1:08:09,  3.34it/s, bound:865 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.52+/-0.15 dlogz:1.671>0.0001]13926it [1:08:18,  3.33it/s, bound:867 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.48+/-0.15 dlogz:1.586>0.0001]13956it [1:08:27,  3.32it/s, bound:869 nc: 11 ncall:5.6e+05 eff:2.5% logz=-22668.43+/-0.16 dlogz:1.505>0.0001]13987it [1:08:36,  3.35it/s, bound:871 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.39+/-0.16 dlogz:1.425>0.0001]14018it [1:08:46,  3.37it/s, bound:873 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.35+/-0.16 dlogz:1.348>0.0001]14050it [1:08:55,  3.41it/s, bound:875 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.31+/-0.15 dlogz:1.271>0.0001]14080it [1:09:04,  3.38it/s, bound:877 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.27+/-0.16 dlogz:1.202>0.0001]14112it [1:09:13,  3.43it/s, bound:879 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.24+/-0.16 dlogz:1.132>0.0001]14144it [1:09:22,  3.47it/s, bound:881 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.20+/-0.16 dlogz:1.065>0.0001]14176it [1:09:31,  3.50it/s, bound:883 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.16+/-0.17 dlogz:1.001>0.0001]14205it [1:09:40,  3.41it/s, bound:885 nc: 11 ncall:5.7e+05 eff:2.5% logz=-22668.13+/-0.17 dlogz:0.945>0.0001]14237it [1:09:49,  3.45it/s, bound:887 nc: 28 ncall:5.8e+05 eff:2.5% logz=-22668.10+/-0.17 dlogz:0.888>0.0001]14267it [1:09:58,  3.40it/s, bound:889 nc: 11 ncall:5.8e+05 eff:2.5% logz=-22668.07+/-0.17 dlogz:0.837>0.0001]14299it [1:10:07,  3.45it/s, bound:891 nc: 11 ncall:5.8e+05 eff:2.5% logz=-22668.04+/-0.17 dlogz:0.785>0.0001]14330it [1:10:16,  3.46it/s, bound:893 nc: 11 ncall:5.8e+05 eff:2.5% logz=-22668.02+/-0.18 dlogz:0.737>0.0001]14360it [1:10:25,  3.43it/s, bound:895 nc: 11 ncall:5.8e+05 eff:2.5% logz=-22667.99+/-0.18 dlogz:0.694>0.0001]14389it [1:10:34,  3.37it/s, bound:897 nc: 11 ncall:5.8e+05 eff:2.5% logz=-22667.97+/-0.18 dlogz:0.654>0.0001]14420it [1:10:43,  3.41it/s, bound:899 nc: 11 ncall:5.8e+05 eff:2.5% logz=-22667.94+/-0.18 dlogz:0.614>0.0001]14452it [1:10:51,  3.47it/s, bound:901 nc: 11 ncall:5.8e+05 eff:2.5% logz=-22667.92+/-0.18 dlogz:0.575>0.0001]14484it [1:11:00,  3.51it/s, bound:903 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.90+/-0.18 dlogz:0.538>0.0001]14515it [1:11:09,  3.50it/s, bound:905 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.88+/-0.19 dlogz:0.505>0.0001]14545it [1:11:18,  3.47it/s, bound:907 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.86+/-0.19 dlogz:0.474>0.0001]14577it [1:11:27,  3.51it/s, bound:909 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.84+/-0.19 dlogz:0.444>0.0001]14608it [1:11:36,  3.52it/s, bound:911 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.82+/-0.19 dlogz:0.416>0.0001]14639it [1:11:44,  3.52it/s, bound:913 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.81+/-0.19 dlogz:0.390>0.0001]14671it [1:11:53,  3.56it/s, bound:915 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.79+/-0.19 dlogz:0.364>0.0001]14701it [1:12:02,  3.52it/s, bound:917 nc: 11 ncall:5.9e+05 eff:2.5% logz=-22667.77+/-0.19 dlogz:0.342>0.0001]19:48 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
14728it [1:12:09,  3.57it/s, bound:918 nc: 61 ncall:6.0e+05 eff:2.5% logz=-22667.76+/-0.20 dlogz:0.324>0.0001]14731it [1:12:18,  2.57it/s, bound:919 nc: 11 ncall:6.0e+05 eff:2.5% logz=-22667.76+/-0.20 dlogz:0.322>0.0001]14760it [1:12:27,  2.80it/s, bound:921 nc: 79 ncall:6.0e+05 eff:2.5% logz=-22667.75+/-0.20 dlogz:0.303>0.0001]14791it [1:12:36,  3.02it/s, bound:923 nc: 11 ncall:6.0e+05 eff:2.5% logz=-22667.74+/-0.20 dlogz:0.284>0.0001]14823it [1:12:44,  3.22it/s, bound:925 nc: 11 ncall:6.0e+05 eff:2.5% logz=-22667.72+/-0.20 dlogz:0.265>0.0001]14855it [1:12:53,  3.35it/s, bound:927 nc: 11 ncall:6.0e+05 eff:2.5% logz=-22667.71+/-0.20 dlogz:0.248>0.0001]14885it [1:13:02,  3.38it/s, bound:929 nc: 11 ncall:6.0e+05 eff:2.5% logz=-22667.70+/-0.20 dlogz:0.233>0.0001]14917it [1:13:10,  3.47it/s, bound:930 nc: 11 ncall:6.0e+05 eff:2.5% logz=-22667.69+/-0.20 dlogz:0.218>0.0001]14948it [1:13:19,  3.50it/s, bound:932 nc: 11 ncall:6.0e+05 eff:2.5% logz=-22667.68+/-0.21 dlogz:0.204>0.0001]14979it [1:13:28,  3.51it/s, bound:934 nc: 11 ncall:6.1e+05 eff:2.5% logz=-22667.67+/-0.21 dlogz:0.192>0.0001]15009it [1:13:37,  3.50it/s, bound:936 nc: 11 ncall:6.1e+05 eff:2.5% logz=-22667.66+/-0.21 dlogz:0.180>0.0001]15038it [1:13:45,  3.45it/s, bound:938 nc: 11 ncall:6.1e+05 eff:2.5% logz=-22667.65+/-0.21 dlogz:0.170>0.0001]15066it [1:13:54,  3.39it/s, bound:940 nc: 78 ncall:6.1e+05 eff:2.5% logz=-22667.65+/-0.21 dlogz:0.160>0.0001]15098it [1:14:03,  3.48it/s, bound:942 nc: 11 ncall:6.1e+05 eff:2.5% logz=-22667.64+/-0.21 dlogz:0.150>0.0001]15128it [1:14:11,  3.48it/s, bound:944 nc: 11 ncall:6.1e+05 eff:2.5% logz=-22667.63+/-0.21 dlogz:0.141>0.0001]15160it [1:14:20,  3.54it/s, bound:946 nc: 11 ncall:6.1e+05 eff:2.5% logz=-22667.63+/-0.21 dlogz:0.132>0.0001]15189it [1:14:28,  3.50it/s, bound:948 nc: 11 ncall:6.1e+05 eff:2.5% logz=-22667.62+/-0.21 dlogz:0.124>0.0001]15220it [1:14:37,  3.53it/s, bound:950 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.61+/-0.22 dlogz:0.116>0.0001]15252it [1:14:46,  3.59it/s, bound:952 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.61+/-0.22 dlogz:0.109>0.0001]15284it [1:14:54,  3.64it/s, bound:954 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.60+/-0.22 dlogz:0.102>0.0001]15314it [1:15:03,  3.59it/s, bound:956 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.60+/-0.22 dlogz:0.096>0.0001]15346it [1:15:11,  3.63it/s, bound:958 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.59+/-0.22 dlogz:0.090>0.0001]15378it [1:15:20,  3.67it/s, bound:960 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.59+/-0.22 dlogz:0.084>0.0001]15409it [1:15:28,  3.67it/s, bound:962 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.58+/-0.22 dlogz:0.079>0.0001]15441it [1:15:37,  3.69it/s, bound:964 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.58+/-0.22 dlogz:0.074>0.0001]15471it [1:15:45,  3.64it/s, bound:966 nc: 11 ncall:6.2e+05 eff:2.5% logz=-22667.58+/-0.22 dlogz:0.069>0.0001]15503it [1:15:54,  3.69it/s, bound:967 nc: 11 ncall:6.3e+05 eff:2.5% logz=-22667.57+/-0.22 dlogz:0.065>0.0001]15534it [1:16:02,  3.68it/s, bound:969 nc: 11 ncall:6.3e+05 eff:2.5% logz=-22667.57+/-0.22 dlogz:0.061>0.0001]15566it [1:16:11,  3.72it/s, bound:971 nc: 11 ncall:6.3e+05 eff:2.5% logz=-22667.57+/-0.22 dlogz:0.057>0.0001]15597it [1:16:19,  3.71it/s, bound:973 nc: 11 ncall:6.3e+05 eff:2.5% logz=-22667.56+/-0.22 dlogz:0.054>0.0001]15628it [1:16:27,  3.70it/s, bound:975 nc: 11 ncall:6.3e+05 eff:2.5% logz=-22667.56+/-0.22 dlogz:0.050>0.0001]15658it [1:16:36,  3.66it/s, bound:977 nc: 76 ncall:6.3e+05 eff:2.5% logz=-22667.56+/-0.22 dlogz:0.048>0.0001]15689it [1:16:44,  3.67it/s, bound:979 nc: 11 ncall:6.3e+05 eff:2.5% logz=-22667.56+/-0.22 dlogz:0.045>0.0001]15719it [1:16:53,  3.64it/s, bound:981 nc: 11 ncall:6.3e+05 eff:2.5% logz=-22667.55+/-0.23 dlogz:0.042>0.0001]15750it [1:17:01,  3.66it/s, bound:983 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.55+/-0.23 dlogz:0.040>0.0001]15779it [1:17:09,  3.60it/s, bound:984 nc: 76 ncall:6.4e+05 eff:2.5% logz=-22667.55+/-0.23 dlogz:0.037>0.0001]15810it [1:17:18,  3.63it/s, bound:986 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.55+/-0.23 dlogz:0.035>0.0001]15841it [1:17:26,  3.65it/s, bound:988 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.55+/-0.23 dlogz:0.033>0.0001]15872it [1:17:34,  3.67it/s, bound:990 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.54+/-0.23 dlogz:0.031>0.0001]15904it [1:17:43,  3.73it/s, bound:992 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.54+/-0.23 dlogz:0.029>0.0001]15935it [1:17:51,  3.72it/s, bound:994 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.54+/-0.23 dlogz:0.027>0.0001]15967it [1:18:00,  3.75it/s, bound:996 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.54+/-0.23 dlogz:0.025>0.0001]15999it [1:18:08,  3.79it/s, bound:998 nc: 11 ncall:6.4e+05 eff:2.5% logz=-22667.54+/-0.23 dlogz:0.024>0.0001]16031it [1:18:16,  3.82it/s, bound:999 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.54+/-0.23 dlogz:0.022>0.0001]16062it [1:18:24,  3.80it/s, bound:1001 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.021>0.0001]16092it [1:18:32,  3.76it/s, bound:1003 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.020>0.0001]16123it [1:18:41,  3.76it/s, bound:1005 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.019>0.0001]16155it [1:18:49,  3.81it/s, bound:1007 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.017>0.0001]16187it [1:18:57,  3.84it/s, bound:1009 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.016>0.0001]16219it [1:19:05,  3.85it/s, bound:1011 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.015>0.0001]16251it [1:19:13,  3.87it/s, bound:1012 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.014>0.0001]16282it [1:19:22,  3.85it/s, bound:1014 nc: 11 ncall:6.5e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.014>0.0001]16313it [1:19:30,  3.84it/s, bound:1016 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.013>0.0001]16344it [1:19:38,  3.83it/s, bound:1018 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.012>0.0001]16376it [1:19:46,  3.86it/s, bound:1020 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.53+/-0.23 dlogz:0.011>0.0001]16407it [1:19:54,  3.85it/s, bound:1022 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.011>0.0001]16438it [1:20:02,  3.84it/s, bound:1023 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.010>0.0001]16469it [1:20:10,  3.83it/s, bound:1025 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.009>0.0001]16499it [1:20:18,  3.80it/s, bound:1027 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.009>0.0001]16529it [1:20:27,  3.77it/s, bound:1029 nc: 11 ncall:6.6e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.008>0.0001]16559it [1:20:35,  3.75it/s, bound:1031 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.008>0.0001]16590it [1:20:43,  3.78it/s, bound:1033 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.007>0.0001]16621it [1:20:51,  3.80it/s, bound:1034 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.007>0.0001]16652it [1:20:59,  3.81it/s, bound:1036 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.006>0.0001]16683it [1:21:07,  3.82it/s, bound:1038 nc: 72 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.006>0.0001]16714it [1:21:15,  3.84it/s, bound:1040 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.006>0.0001]16745it [1:21:23,  3.84it/s, bound:1042 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.005>0.0001]16774it [1:21:31,  3.77it/s, bound:1043 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.005>0.0001]16805it [1:21:39,  3.81it/s, bound:1045 nc: 11 ncall:6.7e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.005>0.0001]16836it [1:21:47,  3.83it/s, bound:1047 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.004>0.0001]16867it [1:21:55,  3.85it/s, bound:1049 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.004>0.0001]16898it [1:22:03,  3.86it/s, bound:1051 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.004>0.0001]16930it [1:22:11,  3.91it/s, bound:1052 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.004>0.0001]16962it [1:22:19,  3.95it/s, bound:1054 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.003>0.0001]19:58 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
16991it [1:22:27,  3.84it/s, bound:1056 nc: 59 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.003>0.0001]16993it [1:22:35,  2.77it/s, bound:1056 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.003>0.0001]17025it [1:22:43,  3.14it/s, bound:1058 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.003>0.0001]17056it [1:22:51,  3.38it/s, bound:1060 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.003>0.0001]17087it [1:22:58,  3.54it/s, bound:1061 nc: 11 ncall:6.8e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.003>0.0001]17117it [1:23:06,  3.63it/s, bound:1063 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.003>0.0001]17149it [1:23:14,  3.75it/s, bound:1065 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17180it [1:23:22,  3.81it/s, bound:1067 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17212it [1:23:30,  3.89it/s, bound:1068 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17242it [1:23:38,  3.88it/s, bound:1070 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17273it [1:23:46,  3.90it/s, bound:1072 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17304it [1:23:53,  3.92it/s, bound:1074 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17335it [1:24:01,  3.94it/s, bound:1075 nc: 70 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17367it [1:24:09,  3.99it/s, bound:1077 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.002>0.0001]17398it [1:24:17,  3.99it/s, bound:1079 nc: 11 ncall:6.9e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17427it [1:24:25,  3.91it/s, bound:1081 nc: 70 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17457it [1:24:32,  3.90it/s, bound:1082 nc: 11 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17489it [1:24:40,  3.97it/s, bound:1084 nc: 11 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17520it [1:24:48,  3.98it/s, bound:1086 nc: 11 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17549it [1:24:56,  3.90it/s, bound:1088 nc: 70 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17581it [1:25:03,  3.97it/s, bound:1089 nc: 11 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17613it [1:25:11,  4.02it/s, bound:1091 nc: 11 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17644it [1:25:19,  4.02it/s, bound:1093 nc: 11 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17675it [1:25:26,  4.03it/s, bound:1095 nc: 11 ncall:7.0e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17704it [1:25:34,  3.95it/s, bound:1096 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17735it [1:25:42,  3.97it/s, bound:1098 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17767it [1:25:49,  4.03it/s, bound:1100 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17798it [1:25:57,  4.03it/s, bound:1102 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17830it [1:26:05,  4.08it/s, bound:1103 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17861it [1:26:12,  4.08it/s, bound:1105 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17891it [1:26:20,  4.04it/s, bound:1107 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17922it [1:26:28,  4.05it/s, bound:1109 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.001>0.0001]17952it [1:26:35,  4.02it/s, bound:1110 nc: 11 ncall:7.1e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.000>0.0001]17984it [1:26:43,  4.06it/s, bound:1112 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.52+/-0.23 dlogz:0.000>0.0001]18015it [1:26:51,  4.07it/s, bound:1114 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18047it [1:26:58,  4.10it/s, bound:1115 nc: 27 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18076it [1:27:06,  4.01it/s, bound:1117 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18108it [1:27:13,  4.08it/s, bound:1119 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18139it [1:27:21,  4.09it/s, bound:1120 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18171it [1:27:28,  4.15it/s, bound:1122 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18202it [1:27:36,  4.14it/s, bound:1124 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18234it [1:27:43,  4.18it/s, bound:1125 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18266it [1:27:51,  4.21it/s, bound:1127 nc: 11 ncall:7.2e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18298it [1:27:58,  4.23it/s, bound:1129 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18329it [1:28:06,  4.21it/s, bound:1130 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18360it [1:28:13,  4.18it/s, bound:1132 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18391it [1:28:21,  4.18it/s, bound:1134 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18422it [1:28:28,  4.17it/s, bound:1135 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18453it [1:28:36,  4.17it/s, bound:1137 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18485it [1:28:43,  4.22it/s, bound:1139 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18513it [1:28:50,  4.08it/s, bound:1140 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18542it [1:28:58,  4.03it/s, bound:1142 nc: 11 ncall:7.3e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18574it [1:29:05,  4.12it/s, bound:1144 nc: 11 ncall:7.4e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18605it [1:29:13,  4.14it/s, bound:1145 nc: 11 ncall:7.4e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18636it [1:29:20,  4.16it/s, bound:1147 nc: 11 ncall:7.4e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18667it [1:29:27,  4.17it/s, bound:1149 nc: 11 ncall:7.4e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18697it [1:29:35,  4.15it/s, bound:1150 nc: 11 ncall:7.4e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18728it [1:29:42,  4.17it/s, bound:1152 nc: 11 ncall:7.4e+05 eff:2.5% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]18735it [1:29:42,  4.55it/s, bound:1152 nc:  1 ncall:7.4e+05 eff:2.6% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]20:05 bilby INFO    : Written checkpoint file ../data/nested_sampling//three_params_resume.pickle
20:05 bilby INFO    : Starting to close worker pool.
20:05 bilby INFO    : Finished closing worker pool.
18735it [1:29:51,  3.47it/s, bound:1152 nc:  1 ncall:7.4e+05 eff:2.6% logz=-22667.51+/-0.23 dlogz:0.000>0.0001]20:05 bilby INFO    : Rejection sampling nested samples to obtain 1723 posterior samples
20:05 bilby INFO    : Sampling time: 1:29:51.692159
<frozen importlib._bootstrap>:228: RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility. Expected 88 from C header, got 96 from PyObject
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1401: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  data_frame['log_likelihood'] = getattr(
20:06 bilby INFO    : Summary of results:
nsamples: 1723
ln_noise_evidence:    nan
ln_evidence: -22667.515 +/-  0.231
ln_bayes_factor:    nan +/-  0.231



