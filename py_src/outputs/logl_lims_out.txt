15:11 bilby INFO    : Running for label 'logl_lims', output will be saved to '../data/nested_sampling/'
15:11 bilby INFO    : Analysis priors:
15:11 bilby INFO    : omega_gw=LogUniform(minimum=1e-09, maximum=1e-05, name='omega_gw', latex_label='omega_gw', unit=None, boundary=None)
15:11 bilby INFO    : phi0_gw=Uniform(minimum=0.0, maximum=3.141592653589793, name='phi0_gw', latex_label='phi0_gw', unit=None, boundary=None)
15:11 bilby INFO    : psi_gw=Uniform(minimum=0.0, maximum=3.141592653589793, name='psi_gw', latex_label='psi_gw', unit=None, boundary=None)
15:11 bilby INFO    : iota_gw=Uniform(minimum=0.0, maximum=1.5707963267948966, name='iota_gw', latex_label='iota_gw', unit=None, boundary=None)
15:11 bilby INFO    : delta_gw=Uniform(minimum=0.0, maximum=1.5707963267948966, name='delta_gw', latex_label='delta_gw', unit=None, boundary=None)
15:11 bilby INFO    : alpha_gw=Uniform(minimum=0.0, maximum=3.141592653589793, name='alpha_gw', latex_label='alpha_gw', unit=None, boundary=None)
15:11 bilby INFO    : h=LogUniform(minimum=0.0001, maximum=0.1, name='h', latex_label='h', unit=None, boundary=None)
15:11 bilby INFO    : f00=327.8470205611185
15:11 bilby INFO    : f01=205.53069910059
15:11 bilby INFO    : f02=303.0909794113198
15:11 bilby INFO    : f03=326.600561967271
15:11 bilby INFO    : f04=348.5592316999902
15:11 bilby INFO    : f05=112.94972319066429
15:11 bilby INFO    : f06=346.5319964932129
15:11 bilby INFO    : f07=215.6088104676294
15:11 bilby INFO    : f08=190.2678373613727
15:11 bilby INFO    : f09=193.7156834116254
15:11 bilby INFO    : f010=238.004053174088
15:11 bilby INFO    : f011=172.642909924795
15:11 bilby INFO    : f012=125.2002451675204
15:11 bilby INFO    : f013=277.9377069492822
15:11 bilby INFO    : f014=317.3789419337929
15:11 bilby INFO    : f015=316.12398422451724
15:11 bilby INFO    : f016=216.3733370950632
15:11 bilby INFO    : f017=218.811840394717
15:11 bilby INFO    : f018=170.93736991146392
15:11 bilby INFO    : f019=266.8691669720664
15:11 bilby INFO    : f020=245.4261196602377
15:11 bilby INFO    : f021=607.6775384652
15:11 bilby INFO    : f022=367.7671211299739
15:11 bilby INFO    : f023=244.391377738396
15:11 bilby INFO    : f024=186.4940783438289
15:11 bilby INFO    : f025=465.135238339217
15:11 bilby INFO    : f026=339.3156871298895
15:11 bilby INFO    : f027=200.658805294298
15:11 bilby INFO    : f028=216.171230573016
15:11 bilby INFO    : f029=130.78951613875947
15:11 bilby INFO    : f030=263.9807142255208
15:11 bilby INFO    : f031=641.928222127829
15:11 bilby INFO    : f032=192.8565208431179
15:11 bilby INFO    : f033=315.443563681749
15:11 bilby INFO    : f034=163.0479129097612
15:11 bilby INFO    : f035=191.4509120380344
15:11 bilby INFO    : f036=345.2781364654948
15:11 bilby INFO    : f037=168.0966779772235
15:11 bilby INFO    : f038=420.189443214863
15:11 bilby INFO    : f039=62.29588783082522
15:11 bilby INFO    : f040=320.5922923290326
15:11 bilby INFO    : f041=335.8162133708968
15:11 bilby INFO    : f042=279.5965821510426
15:11 bilby INFO    : f043=275.7078326240928
15:11 bilby INFO    : f044=192.5919636477142
15:11 bilby INFO    : f045=290.25460815391
15:11 bilby INFO    : f046=207.96816335831227
15:11 bilby INFO    : fdot0=-1.227834e-15
15:11 bilby INFO    : fdot1=-4.297e-16
15:11 bilby INFO    : fdot2=-6.4737e-16
15:11 bilby INFO    : fdot3=-1.022991e-15
15:11 bilby INFO    : fdot4=-4.1895e-16
15:11 bilby INFO    : fdot5=-6.2782e-17
15:11 bilby INFO    : fdot6=-1.46389e-15
15:11 bilby INFO    : fdot7=-1.6868e-16
15:11 bilby INFO    : fdot8=-6.2003e-16
15:11 bilby INFO    : fdot9=-6.96131e-16
15:11 bilby INFO    : fdot10=-3.9329e-16
15:11 bilby INFO    : fdot11=-3.474e-16
15:11 bilby INFO    : fdot12=-3.80975e-16
15:11 bilby INFO    : fdot13=-7.33846e-16
15:11 bilby INFO    : fdot14=-9.69443e-16
15:11 bilby INFO    : fdot15=-2.81542e-16
15:11 bilby INFO    : fdot16=-8.64392e-16
15:11 bilby INFO    : fdot17=-4.08387e-16
15:11 bilby INFO    : fdot18=-7.04774e-16
15:11 bilby INFO    : fdot19=-2.151992e-15
15:11 bilby INFO    : fdot20=-5.38155e-16
15:11 bilby INFO    : fdot21=-4.853e-15
15:11 bilby INFO    : fdot22=-1.11907e-15
15:11 bilby INFO    : fdot23=-5.2065e-16
15:11 bilby INFO    : fdot24=-6.20476e-16
15:11 bilby INFO    : fdot25=-4.0719e-15
15:11 bilby INFO    : fdot26=-1.614814e-15
15:11 bilby INFO    : fdot27=-3.89748e-16
15:11 bilby INFO    : fdot28=-7.90875e-16
15:11 bilby INFO    : fdot29=-4.39475e-16
15:11 bilby INFO    : fdot30=-6.65848e-16
15:11 bilby INFO    : fdot31=-4.330987e-14
15:11 bilby INFO    : fdot32=-6.44814e-16
15:11 bilby INFO    : fdot33=-3.148e-16
15:11 bilby INFO    : fdot34=-7.9062e-16
15:11 bilby INFO    : fdot35=-1.76854e-16
15:11 bilby INFO    : fdot36=-9.5291e-16
15:11 bilby INFO    : fdot37=-3.1496e-16
15:11 bilby INFO    : fdot38=-9.25931e-16
15:11 bilby INFO    : fdot39=-1.156186e-16
15:11 bilby INFO    : fdot40=-1.51379e-15
15:11 bilby INFO    : fdot41=-1.7183e-16
15:11 bilby INFO    : fdot42=-9.392e-16
15:11 bilby INFO    : fdot43=-1.52788e-15
15:11 bilby INFO    : fdot44=-5.1439e-16
15:11 bilby INFO    : fdot45=-2.0477e-16
15:11 bilby INFO    : fdot46=-4.178455630932531e-16
15:11 bilby INFO    : distance0=181816860005.41092
15:11 bilby INFO    : distance1=32362224272.807774
15:11 bilby INFO    : distance2=160300000000.0
15:11 bilby INFO    : distance3=95000000000.0
15:11 bilby INFO    : distance4=71428052144.98288
15:11 bilby INFO    : distance5=121950332930.45859
15:11 bilby INFO    : distance6=115000000000.0
15:11 bilby INFO    : distance7=372200000000.0
15:11 bilby INFO    : distance8=70000000000.0
15:11 bilby INFO    : distance9=122000000000.0
15:11 bilby INFO    : distance10=90300000000.0
15:11 bilby INFO    : distance11=126900000000.0
15:11 bilby INFO    : distance12=68400000000.0
15:11 bilby INFO    : distance13=188677873590.52078
15:11 bilby INFO    : distance14=70000000000.0
15:11 bilby INFO    : distance15=151514050004.5091
15:11 bilby INFO    : distance16=74000000000.0
15:11 bilby INFO    : distance17=131060646137.58327
15:11 bilby INFO    : distance18=147057754416.14117
15:11 bilby INFO    : distance19=166665455004.96002
15:11 bilby INFO    : distance20=39500000000.0
15:11 bilby INFO    : distance21=714900000000.0
15:11 bilby INFO    : distance22=208331818756.20007
15:11 bilby INFO    : distance23=208331818756.20007
15:11 bilby INFO    : distance24=120000000000.0
15:11 bilby INFO    : distance25=700000000000.0
15:11 bilby INFO    : distance26=114000000000.0
15:11 bilby INFO    : distance27=149600000000.0
15:11 bilby INFO    : distance28=136500000000.0
15:11 bilby INFO    : distance29=111110303336.64005
15:11 bilby INFO    : distance30=120100000000.0
15:11 bilby INFO    : distance31=350000000000.0
15:11 bilby INFO    : distance32=121800000000.0
15:11 bilby INFO    : distance33=694000000000.0
15:11 bilby INFO    : distance34=630400000000.0
15:11 bilby INFO    : distance35=243900665860.9172
15:11 bilby INFO    : distance36=139900000000.0
15:11 bilby INFO    : distance37=174000000000.0
15:11 bilby INFO    : distance38=138887879170.80002
15:11 bilby INFO    : distance39=71428052144.98288
15:11 bilby INFO    : distance40=60000000000.0
15:11 bilby INFO    : distance41=180000000000.0
15:11 bilby INFO    : distance42=97086672818.42332
15:11 bilby INFO    : distance43=158700000000.0
15:11 bilby INFO    : distance44=86300000000.0
15:11 bilby INFO    : distance45=166665455004.96002
15:11 bilby INFO    : distance46=101099999999.99998
15:11 bilby INFO    : gamma0=1e-13
15:11 bilby INFO    : gamma1=1e-13
15:11 bilby INFO    : gamma2=1e-13
15:11 bilby INFO    : gamma3=1e-13
15:11 bilby INFO    : gamma4=1e-13
15:11 bilby INFO    : gamma5=1e-13
15:11 bilby INFO    : gamma6=1e-13
15:11 bilby INFO    : gamma7=1e-13
15:11 bilby INFO    : gamma8=1e-13
15:11 bilby INFO    : gamma9=1e-13
15:11 bilby INFO    : gamma10=1e-13
15:11 bilby INFO    : gamma11=1e-13
15:11 bilby INFO    : gamma12=1e-13
15:11 bilby INFO    : gamma13=1e-13
15:11 bilby INFO    : gamma14=1e-13
15:11 bilby INFO    : gamma15=1e-13
15:11 bilby INFO    : gamma16=1e-13
15:11 bilby INFO    : gamma17=1e-13
15:11 bilby INFO    : gamma18=1e-13
15:11 bilby INFO    : gamma19=1e-13
15:11 bilby INFO    : gamma20=1e-13
15:11 bilby INFO    : gamma21=1e-13
15:11 bilby INFO    : gamma22=1e-13
15:11 bilby INFO    : gamma23=1e-13
15:11 bilby INFO    : gamma24=1e-13
15:11 bilby INFO    : gamma25=1e-13
15:11 bilby INFO    : gamma26=1e-13
15:11 bilby INFO    : gamma27=1e-13
15:11 bilby INFO    : gamma28=1e-13
15:11 bilby INFO    : gamma29=1e-13
15:11 bilby INFO    : gamma30=1e-13
15:11 bilby INFO    : gamma31=1e-13
15:11 bilby INFO    : gamma32=1e-13
15:11 bilby INFO    : gamma33=1e-13
15:11 bilby INFO    : gamma34=1e-13
15:11 bilby INFO    : gamma35=1e-13
15:11 bilby INFO    : gamma36=1e-13
15:11 bilby INFO    : gamma37=1e-13
15:11 bilby INFO    : gamma38=1e-13
15:11 bilby INFO    : gamma39=1e-13
15:11 bilby INFO    : gamma40=1e-13
15:11 bilby INFO    : gamma41=1e-13
15:11 bilby INFO    : gamma42=1e-13
15:11 bilby INFO    : gamma43=1e-13
15:11 bilby INFO    : gamma44=1e-13
15:11 bilby INFO    : gamma45=1e-13
15:11 bilby INFO    : gamma46=1e-13
15:11 bilby INFO    : sigma_p=0.001
15:11 bilby INFO    : sigma_m=1e-10
15:11 bilby INFO    : Analysis likelihood class: <class 'bilby_wrapper.BilbyLikelihood'>
15:11 bilby INFO    : Analysis likelihood noise evidence: nan
15:11 bilby INFO    : Single likelihood evaluation took 4.484e-03 s
15:11 bilby INFO    : Using sampler Dynesty with kwargs {'nlive': 500, 'bound': 'live', 'sample': 'rwalk', 'periodic': None, 'reflective': None, 'update_interval': 600, 'first_update': None, 'npdim': None, 'rstate': None, 'queue_size': 32, 'pool': None, 'use_pool': None, 'live_points': None, 'logl_args': None, 'logl_kwargs': None, 'ptform_args': None, 'ptform_kwargs': None, 'gradient': None, 'grad_args': None, 'grad_kwargs': None, 'compute_jac': False, 'enlarge': None, 'bootstrap': None, 'walks': 200, 'facc': 0.2, 'slices': None, 'fmove': 0.9, 'max_move': 100, 'update_func': None, 'ncdim': None, 'blob': False, 'save_history': False, 'history_filename': None, 'maxiter': None, 'maxcall': None, 'dlogz': 0.1, 'logl_max': -23000, 'n_effective': None, 'add_live': True, 'print_progress': True, 'print_func': <bound method Dynesty._print_func of <bilby.core.sampler.dynesty.Dynesty object at 0x14d930c94970>>, 'save_bounds': False, 'checkpoint_file': None, 'checkpoint_every': 60, 'resume': False}
15:11 bilby INFO    : Checkpoint every check_point_delta_t = 600s
15:11 bilby INFO    : Using dynesty version 2.1.0
15:11 bilby INFO    : Using the bilby-implemented rwalk sample method with ACT estimated walks. An average of 4 steps will be accepted up to chain length 5000.
15:11 bilby INFO    : Setting up multiproccesing pool with 32 processes
Ideal likelihood =  -34518.809005481475
RUN THE SAMPLER
15:11 bilby INFO    : Generating initial points from the prior
1it [00:00, ?it/s]1it [00:03, ?it/s, bound:0 nc:  1 ncall:5.0e+02 eff:0.2% logz=-inf+/-0.12 dlogz:inf>0.1]33it [00:03, 184.69it/s, bound:0 nc:  1 ncall:5.3e+02 eff:6.2% logz=-235969.06+/-0.12 dlogz:262923.338>0.1]63it [00:03, 184.03it/s, bound:0 nc:  1 ncall:5.6e+02 eff:11.2% logz=-76418.04+/-0.12 dlogz:50432.254>0.1] 95it [00:03, 182.26it/s, bound:0 nc:  1 ncall:6.0e+02 eff:15.9% logz=-38520.09+/-0.12 dlogz:12929.464>0.1]117it [00:03, 164.10it/s, bound:0 nc:  3 ncall:6.3e+02 eff:18.6% logz=-31775.26+/-0.12 dlogz:5746.582>0.1]140it [00:03, 152.76it/s, bound:0 nc:  3 ncall:6.6e+02 eff:21.1% logz=-29463.20+/-0.12 dlogz:3308.178>0.1]163it [00:04, 148.48it/s, bound:0 nc:  1 ncall:6.9e+02 eff:23.5% logz=-28384.89+/-0.12 dlogz:2179.591>0.1]182it [00:04, 135.96it/s, bound:0 nc:  2 ncall:7.2e+02 eff:25.1% logz=-27921.29+/-0.12 dlogz:1707.264>0.1]202it [00:04, 131.88it/s, bound:0 nc:  2 ncall:7.6e+02 eff:26.7% logz=-27681.78+/-0.12 dlogz:1439.310>0.1]222it [00:04, 126.89it/s, bound:0 nc:  4 ncall:7.9e+02 eff:28.1% logz=-27467.76+/-0.12 dlogz:1222.214>0.1]242it [00:04, 125.43it/s, bound:0 nc:  4 ncall:8.2e+02 eff:29.4% logz=-27342.59+/-0.12 dlogz:1117.669>0.1]257it [00:05, 113.69it/s, bound:0 nc:  1 ncall:8.5e+02 eff:30.1% logz=-27275.61+/-0.12 dlogz:1029.721>0.1]275it [00:05, 112.74it/s, bound:0 nc:  3 ncall:8.9e+02 eff:31.0% logz=-27215.01+/-0.12 dlogz:968.056>0.1] 297it [00:05, 117.62it/s, bound:0 nc:  1 ncall:9.2e+02 eff:32.4% logz=-27154.75+/-0.12 dlogz:911.192>0.1]316it [00:05, 117.57it/s, bound:0 nc:  1 ncall:9.5e+02 eff:33.3% logz=-27119.17+/-0.11 dlogz:870.520>0.1]329it [00:05, 104.96it/s, bound:0 nc:  6 ncall:9.8e+02 eff:33.4% logz=-27105.78+/-0.10 dlogz:857.064>0.1]345it [00:05, 103.16it/s, bound:0 nc:  3 ncall:1.0e+03 eff:34.0% logz=-27093.38+/-0.12 dlogz:846.358>0.1]362it [00:06, 101.99it/s, bound:0 nc:  2 ncall:1.0e+03 eff:34.6% logz=-27078.54+/-0.10 dlogz:829.746>0.1]376it [00:06, 97.40it/s, bound:0 nc: 10 ncall:1.1e+03 eff:34.8% logz=-27069.88+/-0.10 dlogz:821.420>0.1] 388it [00:06, 89.07it/s, bound:0 nc:  1 ncall:1.1e+03 eff:35.0% logz=-27060.09+/-0.10 dlogz:811.605>0.1]401it [00:06, 86.59it/s, bound:0 nc:  6 ncall:1.1e+03 eff:35.1% logz=-27052.64+/-0.10 dlogz:803.792>0.1]417it [00:06, 88.93it/s, bound:0 nc:  4 ncall:1.2e+03 eff:35.5% logz=-27046.53+/-0.10 dlogz:797.589>0.1]426it [00:06, 79.28it/s, bound:0 nc:  3 ncall:1.2e+03 eff:35.4% logz=-27043.88+/-0.10 dlogz:794.962>0.1]442it [00:06, 83.49it/s, bound:0 nc:  6 ncall:1.2e+03 eff:35.6% logz=-27039.84+/-0.10 dlogz:790.886>0.1]454it [00:07, 80.58it/s, bound:0 nc:  5 ncall:1.3e+03 eff:35.7% logz=-27036.68+/-0.10 dlogz:787.594>0.1]465it [00:07, 76.41it/s, bound:0 nc:  8 ncall:1.3e+03 eff:35.6% logz=-27034.27+/-0.10 dlogz:785.158>0.1]480it [00:07, 79.61it/s, bound:0 nc:  1 ncall:1.3e+03 eff:36.0% logz=-27031.50+/-0.09 dlogz:782.262>0.1]493it [00:07, 79.71it/s, bound:0 nc:  4 ncall:1.4e+03 eff:36.1% logz=-27030.10+/-0.09 dlogz:780.809>0.1]501it [00:07, 69.71it/s, bound:0 nc:  7 ncall:1.4e+03 eff:35.8% logz=-27029.18+/-0.09 dlogz:779.906>0.1]513it [00:07, 70.86it/s, bound:0 nc:  1 ncall:1.4e+03 eff:35.9% logz=-27027.76+/-0.09 dlogz:778.443>0.1]525it [00:08, 70.66it/s, bound:0 nc:  7 ncall:1.5e+03 eff:35.9% logz=-27026.63+/-0.09 dlogz:777.265>0.1]535it [00:08, 68.14it/s, bound:0 nc:  7 ncall:1.5e+03 eff:35.8% logz=-27025.78+/-0.09 dlogz:776.388>0.1]547it [00:08, 68.52it/s, bound:0 nc:  4 ncall:1.5e+03 eff:35.8% logz=-27024.76+/-0.09 dlogz:775.380>0.1]558it [00:08, 68.30it/s, bound:0 nc:  5 ncall:1.6e+03 eff:35.8% logz=-27023.69+/-0.09 dlogz:774.253>0.1]568it [00:08, 65.10it/s, bound:0 nc: 15 ncall:1.6e+03 eff:35.5% logz=-27023.06+/-0.09 dlogz:773.580>0.1]575it [00:08, 58.72it/s, bound:0 nc: 10 ncall:1.6e+03 eff:34.9% logz=-27022.68+/-0.09 dlogz:773.180>0.1]581it [00:09, 51.43it/s, bound:0 nc:  5 ncall:1.7e+03 eff:34.8% logz=-27022.37+/-0.08 dlogz:772.859>0.1]587it [00:09, 47.25it/s, bound:0 nc:  2 ncall:1.7e+03 eff:34.7% logz=-27022.10+/-0.08 dlogz:772.565>0.1]595it [00:09, 47.12it/s, bound:0 nc:  4 ncall:1.7e+03 eff:34.6% logz=-27021.74+/-0.08 dlogz:772.192>0.1]604it [00:09, 49.53it/s, bound:0 nc:  1 ncall:1.7e+03 eff:34.5% logz=-27021.38+/-0.08 dlogz:771.811>0.1]609it [00:09, 43.38it/s, bound:0 nc: 18 ncall:1.8e+03 eff:34.1% logz=-27021.17+/-0.08 dlogz:771.591>0.1]618it [00:09, 46.78it/s, bound:0 nc:  8 ncall:1.8e+03 eff:34.0% logz=-27020.76+/-0.08 dlogz:771.163>0.1]627it [00:10, 48.56it/s, bound:0 nc:  5 ncall:1.8e+03 eff:34.0% logz=-27020.40+/-0.08 dlogz:770.781>0.1]634it [00:10, 46.97it/s, bound:0 nc: 15 ncall:1.9e+03 eff:33.6% logz=-27020.12+/-0.08 dlogz:770.491>0.1]639it [00:10, 41.63it/s, bound:0 nc:  1 ncall:1.9e+03 eff:33.5% logz=-27019.94+/-0.08 dlogz:770.296>0.1]652it [00:10, 52.84it/s, bound:0 nc:  1 ncall:1.9e+03 eff:33.6% logz=-27019.53+/-0.08 dlogz:769.855>0.1]661it [00:10, 52.53it/s, bound:0 nc:  5 ncall:2.0e+03 eff:33.5% logz=-27019.26+/-0.08 dlogz:769.562>0.1]668it [00:10, 49.86it/s, bound:0 nc:  3 ncall:2.0e+03 eff:33.3% logz=-27019.06+/-0.08 dlogz:769.349>0.1]677it [00:11, 50.69it/s, bound:0 nc:  5 ncall:2.0e+03 eff:33.2% logz=-27018.82+/-0.08 dlogz:769.094>0.1]684it [00:11, 48.58it/s, bound:0 nc:  9 ncall:2.1e+03 eff:33.0% logz=-27018.65+/-0.08 dlogz:768.909>0.1]691it [00:11, 36.04it/s, bound:0 nc: 38 ncall:2.1e+03 eff:32.4% logz=-27018.49+/-0.08 dlogz:768.732>0.1]697it [00:11, 35.84it/s, bound:0 nc:  6 ncall:2.2e+03 eff:32.1% logz=-27018.37+/-0.08 dlogz:768.592>0.1]705it [00:11, 39.41it/s, bound:0 nc:  7 ncall:2.2e+03 eff:32.1% logz=-27018.21+/-0.08 dlogz:768.420>0.1]713it [00:12, 41.63it/s, bound:0 nc:  1 ncall:2.2e+03 eff:32.0% logz=-27018.07+/-0.08 dlogz:768.260>0.1]720it [00:12, 42.16it/s, bound:0 nc: 20 ncall:2.3e+03 eff:31.7% logz=-27017.95+/-0.08 dlogz:768.125>0.1]726it [00:12, 40.20it/s, bound:0 nc:  8 ncall:2.3e+03 eff:31.6% logz=-27017.85+/-0.08 dlogz:768.012>0.1]731it [00:12, 37.59it/s, bound:0 nc:  5 ncall:2.3e+03 eff:31.4% logz=-27017.77+/-0.07 dlogz:767.923>0.1]739it [00:12, 40.43it/s, bound:0 nc:  4 ncall:2.4e+03 eff:31.4% logz=-27017.64+/-0.07 dlogz:767.781>0.1]747it [00:12, 43.08it/s, bound:0 nc:  6 ncall:2.4e+03 eff:31.2% logz=-27017.52+/-0.07 dlogz:767.643>0.1]756it [00:13, 46.12it/s, bound:0 nc:  6 ncall:2.4e+03 eff:31.2% logz=-27017.39+/-0.07 dlogz:767.490>0.1]768it [00:13, 54.55it/s, bound:0 nc: 10 ncall:2.5e+03 eff:31.2% logz=-27017.22+/-0.07 dlogz:767.298>0.1]774it [00:13, 48.66it/s, bound:0 nc: 15 ncall:2.5e+03 eff:30.9% logz=-27017.14+/-0.07 dlogz:767.208>0.1]779it [00:13, 43.58it/s, bound:0 nc:  1 ncall:2.5e+03 eff:30.9% logz=-27017.08+/-0.07 dlogz:767.135>0.1]784it [00:13, 39.18it/s, bound:0 nc: 20 ncall:2.6e+03 eff:30.6% logz=-27017.02+/-0.07 dlogz:767.063>0.1]790it [00:13, 38.61it/s, bound:0 nc:  4 ncall:2.6e+03 eff:30.6% logz=-27016.95+/-0.07 dlogz:766.979>0.1]796it [00:14, 37.54it/s, bound:0 nc: 10 ncall:2.6e+03 eff:30.4% logz=-27016.88+/-0.07 dlogz:766.896>0.1]800it [00:14, 33.84it/s, bound:0 nc:  5 ncall:2.6e+03 eff:30.2% logz=-27016.83+/-0.07 dlogz:766.842>0.1]804it [00:14, 30.73it/s, bound:0 nc: 15 ncall:2.7e+03 eff:30.0% logz=-27016.79+/-0.07 dlogz:766.789>0.1]815it [00:14, 41.65it/s, bound:0 nc:  7 ncall:2.7e+03 eff:30.0% logz=-27016.67+/-0.07 dlogz:766.648>0.1]820it [00:14, 37.75it/s, bound:0 nc:  1 ncall:2.8e+03 eff:29.7% logz=-27016.62+/-0.07 dlogz:766.586>0.1]825it [00:14, 35.68it/s, bound:0 nc:  1 ncall:2.8e+03 eff:29.8% logz=-27016.57+/-0.07 dlogz:766.526>0.1]829it [00:15, 31.93it/s, bound:0 nc: 26 ncall:2.8e+03 eff:29.5% logz=-27016.53+/-0.07 dlogz:766.479>0.1]834it [00:15, 31.56it/s, bound:0 nc:  6 ncall:2.8e+03 eff:29.4% logz=-27016.48+/-0.07 dlogz:766.422>0.1]842it [00:15, 36.03it/s, bound:0 nc:  7 ncall:2.9e+03 eff:29.3% logz=-27016.41+/-0.07 dlogz:766.335>0.1]848it [00:15, 36.23it/s, bound:0 nc:  9 ncall:2.9e+03 eff:29.2% logz=-27016.36+/-0.07 dlogz:766.273>0.1]852it [00:15, 32.33it/s, bound:0 nc:  1 ncall:2.9e+03 eff:29.0% logz=-27016.33+/-0.07 dlogz:766.231>0.1]859it [00:15, 35.47it/s, bound:0 nc:  6 ncall:3.0e+03 eff:28.9% logz=-27016.27+/-0.07 dlogz:766.161>0.1]863it [00:16, 31.71it/s, bound:0 nc: 41 ncall:3.0e+03 eff:28.6% logz=-27016.24+/-0.07 dlogz:766.123>0.1]867it [00:16, 29.77it/s, bound:0 nc:  1 ncall:3.0e+03 eff:28.5% logz=-27016.21+/-0.07 dlogz:766.085>0.1]872it [00:16, 30.08it/s, bound:0 nc:  5 ncall:3.1e+03 eff:28.5% logz=-27016.17+/-0.07 dlogz:766.038>0.1]880it [00:16, 34.98it/s, bound:0 nc:  5 ncall:3.1e+03 eff:28.5% logz=-27016.12+/-0.07 dlogz:765.966>0.1]887it [00:16, 37.38it/s, bound:0 nc:  6 ncall:3.1e+03 eff:28.4% logz=-27016.07+/-0.07 dlogz:765.905>0.1]896it [00:16, 42.06it/s, bound:0 nc:  2 ncall:3.2e+03 eff:28.4% logz=-27016.01+/-0.07 dlogz:765.830>0.1]903it [00:17, 42.33it/s, bound:0 nc: 13 ncall:3.2e+03 eff:28.2% logz=-27015.97+/-0.07 dlogz:765.773>0.1]908it [00:17, 38.39it/s, bound:0 nc:  1 ncall:3.2e+03 eff:28.1% logz=-27015.94+/-0.07 dlogz:765.733>0.1]912it [00:17, 34.47it/s, bound:0 nc: 24 ncall:3.3e+03 eff:28.0% logz=-27015.92+/-0.07 dlogz:765.702>0.1]916it [00:17, 31.15it/s, bound:0 nc:  2 ncall:3.3e+03 eff:27.8% logz=-27015.90+/-0.07 dlogz:765.671>0.1]920it [00:17, 29.32it/s, bound:0 nc:  7 ncall:3.3e+03 eff:27.7% logz=-27015.87+/-0.07 dlogz:765.641>0.1]927it [00:17, 33.06it/s, bound:0 nc:  7 ncall:3.4e+03 eff:27.7% logz=-27015.84+/-0.07 dlogz:765.589>0.1]934it [00:18, 36.16it/s, bound:0 nc: 10 ncall:3.4e+03 eff:27.6% logz=-27015.80+/-0.07 dlogz:765.539>0.1]939it [00:18, 34.18it/s, bound:0 nc: 11 ncall:3.4e+03 eff:27.4% logz=-27015.78+/-0.07 dlogz:765.504>0.1]943it [00:18, 31.45it/s, bound:0 nc:  3 ncall:3.5e+03 eff:27.3% logz=-27015.76+/-0.07 dlogz:765.476>0.1]948it [00:18, 30.92it/s, bound:0 nc: 13 ncall:3.5e+03 eff:27.2% logz=-27015.73+/-0.07 dlogz:765.442>0.1]952it [00:18, 29.18it/s, bound:0 nc: 12 ncall:3.5e+03 eff:27.1% logz=-27015.71+/-0.07 dlogz:765.415>0.1]955it [00:18, 25.67it/s, bound:0 nc:  1 ncall:3.5e+03 eff:26.9% logz=-27015.70+/-0.07 dlogz:765.395>0.1]960it [00:19, 27.28it/s, bound:0 nc: 14 ncall:3.6e+03 eff:26.8% logz=-27015.68+/-0.07 dlogz:765.363>0.1]963it [00:19, 24.38it/s, bound:0 nc:  1 ncall:3.6e+03 eff:26.6% logz=-27015.66+/-0.07 dlogz:765.344>0.1]966it [00:19, 22.69it/s, bound:0 nc: 14 ncall:3.7e+03 eff:26.4% logz=-27015.65+/-0.07 dlogz:765.324>0.1]969it [00:19, 21.26it/s, bound:0 nc: 18 ncall:3.7e+03 eff:26.3% logz=-27015.64+/-0.07 dlogz:765.306>0.1]972it [00:19, 20.27it/s, bound:0 nc:  4 ncall:3.7e+03 eff:26.2% logz=-27015.63+/-0.07 dlogz:765.287>0.1]976it [00:19, 21.32it/s, bound:0 nc: 10 ncall:3.7e+03 eff:26.1% logz=-27015.61+/-0.07 dlogz:765.262>0.1]981it [00:20, 24.06it/s, bound:0 nc:  5 ncall:3.8e+03 eff:26.0% logz=-27015.59+/-0.07 dlogz:765.232>0.1]986it [00:20, 25.61it/s, bound:0 nc: 16 ncall:3.8e+03 eff:25.9% logz=-27015.57+/-0.07 dlogz:765.202>0.1]991it [00:20, 27.21it/s, bound:0 nc: 25 ncall:3.9e+03 eff:25.7% logz=-27015.55+/-0.07 dlogz:765.172>0.1]994it [00:20, 24.47it/s, bound:0 nc:  5 ncall:3.9e+03 eff:25.6% logz=-27015.54+/-0.06 dlogz:765.155>0.1]997it [00:20, 17.30it/s, bound:0 nc:  8 ncall:3.9e+03 eff:25.4% logz=-27015.53+/-0.06 dlogz:765.138>0.1]1002it [00:21, 20.62it/s, bound:0 nc:  4 ncall:4.0e+03 eff:25.3% logz=-27015.51+/-0.06 dlogz:765.109>0.1]1006it [00:21, 21.37it/s, bound:0 nc: 18 ncall:4.0e+03 eff:25.2% logz=-27015.49+/-0.06 dlogz:765.086>0.1]1009it [00:21, 16.10it/s, bound:0 nc:  6 ncall:4.1e+03 eff:24.9% logz=-27015.48+/-0.06 dlogz:765.070>0.1]1014it [00:21, 19.46it/s, bound:0 nc:  9 ncall:4.1e+03 eff:24.8% logz=-27015.47+/-0.06 dlogz:765.042>0.1]1019it [00:21, 22.04it/s, bound:0 nc: 16 ncall:4.1e+03 eff:24.7% logz=-27015.45+/-0.06 dlogz:765.015>0.1]1023it [00:22, 22.73it/s, bound:0 nc:  8 ncall:4.1e+03 eff:24.7% logz=-27015.44+/-0.06 dlogz:764.993>0.1]1030it [00:22, 27.96it/s, bound:0 nc: 18 ncall:4.2e+03 eff:24.5% logz=-27015.41+/-0.06 dlogz:764.956>0.1]1033it [00:22, 24.84it/s, bound:0 nc:  6 ncall:4.2e+03 eff:24.5% logz=-27015.40+/-0.06 dlogz:764.941>0.1]1040it [00:22, 29.97it/s, bound:0 nc:  6 ncall:4.2e+03 eff:24.5% logz=-27015.38+/-0.06 dlogz:764.905>0.1]1044it [00:22, 28.21it/s, bound:0 nc:  1 ncall:4.3e+03 eff:24.4% logz=-27015.37+/-0.06 dlogz:764.885>0.1]1047it [00:22, 25.29it/s, bound:0 nc: 26 ncall:4.3e+03 eff:24.2% logz=-27015.36+/-0.06 dlogz:764.869>0.1]1050it [00:23, 17.77it/s, bound:0 nc: 20 ncall:4.4e+03 eff:24.0% logz=-27015.35+/-0.06 dlogz:764.855>0.1]1053it [00:23, 17.98it/s, bound:0 nc: 20 ncall:4.4e+03 eff:23.8% logz=-27015.34+/-0.06 dlogz:764.840>0.1]1057it [00:23, 19.60it/s, bound:0 nc: 24 ncall:4.5e+03 eff:23.7% logz=-27015.33+/-0.06 dlogz:764.820>0.1]1060it [00:24, 12.40it/s, bound:0 nc: 63 ncall:4.5e+03 eff:23.4% logz=-27015.32+/-0.06 dlogz:764.805>0.1]1064it [00:24, 14.69it/s, bound:0 nc: 11 ncall:4.6e+03 eff:23.3% logz=-27015.31+/-0.06 dlogz:764.786>0.1]1068it [00:24, 16.86it/s, bound:0 nc: 15 ncall:4.6e+03 eff:23.2% logz=-27015.30+/-0.06 dlogz:764.767>0.1]1073it [00:24, 19.96it/s, bound:0 nc: 15 ncall:4.6e+03 eff:23.1% logz=-27015.29+/-0.06 dlogz:764.743>0.1]1078it [00:24, 22.68it/s, bound:0 nc: 13 ncall:4.7e+03 eff:23.1% logz=-27015.27+/-0.06 dlogz:764.720>0.1]1081it [00:24, 21.35it/s, bound:0 nc:  5 ncall:4.7e+03 eff:23.0% logz=-27015.26+/-0.06 dlogz:764.706>0.1]1085it [00:25, 22.17it/s, bound:0 nc: 17 ncall:4.7e+03 eff:22.9% logz=-27015.25+/-0.06 dlogz:764.688>0.1]1089it [00:25, 22.50it/s, bound:0 nc: 10 ncall:4.8e+03 eff:22.9% logz=-27015.24+/-0.06 dlogz:764.670>0.1]1092it [00:25, 21.35it/s, bound:0 nc: 21 ncall:4.8e+03 eff:22.8% logz=-27015.24+/-0.06 dlogz:764.656>0.1]1095it [00:25, 20.33it/s, bound:0 nc: 19 ncall:4.8e+03 eff:22.7% logz=-27015.23+/-0.06 dlogz:764.643>0.1]1098it [00:25, 19.85it/s, bound:0 nc:  6 ncall:4.9e+03 eff:22.6% logz=-27015.22+/-0.06 dlogz:764.629>0.1]1101it [00:26, 14.79it/s, bound:0 nc:  1 ncall:4.9e+03 eff:22.4% logz=-27015.21+/-0.06 dlogz:764.616>0.1]1104it [00:26, 15.62it/s, bound:0 nc: 20 ncall:5.0e+03 eff:22.2% logz=-27015.21+/-0.06 dlogz:764.603>0.1]1107it [00:26, 16.27it/s, bound:0 nc:  5 ncall:5.0e+03 eff:22.2% logz=-27015.20+/-0.06 dlogz:764.590>0.1]1111it [00:26, 18.44it/s, bound:0 nc: 18 ncall:5.0e+03 eff:22.1% logz=-27015.19+/-0.06 dlogz:764.572>0.1]1113it [00:26, 16.60it/s, bound:0 nc: 14 ncall:5.1e+03 eff:22.0% logz=-27015.19+/-0.06 dlogz:764.564>0.1]1116it [00:26, 17.15it/s, bound:0 nc: 20 ncall:5.1e+03 eff:21.9% logz=-27015.18+/-0.06 dlogz:764.551>0.1]1118it [00:27, 15.56it/s, bound:0 nc:  3 ncall:5.1e+03 eff:21.9% logz=-27015.18+/-0.06 dlogz:764.542>0.1]1123it [00:27, 19.93it/s, bound:0 nc: 14 ncall:5.1e+03 eff:21.8% logz=-27015.16+/-0.06 dlogz:764.521>0.1]1126it [00:27, 15.00it/s, bound:0 nc: 46 ncall:5.2e+03 eff:21.6% logz=-27015.16+/-0.06 dlogz:764.509>0.1]1130it [00:27, 17.14it/s, bound:0 nc:  7 ncall:5.2e+03 eff:21.6% logz=-27015.15+/-0.06 dlogz:764.492>0.1]1133it [00:27, 17.49it/s, bound:0 nc:  8 ncall:5.3e+03 eff:21.5% logz=-27015.14+/-0.06 dlogz:764.480>0.1]1137it [00:28, 19.04it/s, bound:0 nc: 23 ncall:5.3e+03 eff:21.4% logz=-27015.13+/-0.06 dlogz:764.463>0.1]1142it [00:28, 22.13it/s, bound:0 nc: 38 ncall:5.4e+03 eff:21.3% logz=-27015.12+/-0.06 dlogz:764.443>0.1]1145it [00:28, 21.13it/s, bound:0 nc: 16 ncall:5.4e+03 eff:21.3% logz=-27015.12+/-0.06 dlogz:764.431>0.1]1149it [00:28, 21.80it/s, bound:0 nc: 32 ncall:5.4e+03 eff:21.2% logz=-27015.11+/-0.06 dlogz:764.415>0.1]1152it [00:28, 20.85it/s, bound:0 nc:  2 ncall:5.5e+03 eff:21.1% logz=-27015.10+/-0.06 dlogz:764.403>0.1]1155it [00:29, 15.35it/s, bound:0 nc: 27 ncall:5.5e+03 eff:21.0% logz=-27015.10+/-0.06 dlogz:764.391>0.1]1159it [00:29, 17.56it/s, bound:0 nc: 28 ncall:5.5e+03 eff:20.9% logz=-27015.09+/-0.06 dlogz:764.375>0.1]1162it [00:29, 17.56it/s, bound:0 nc:  7 ncall:5.6e+03 eff:20.9% logz=-27015.08+/-0.06 dlogz:764.363>0.1]1166it [00:29, 19.41it/s, bound:0 nc: 12 ncall:5.6e+03 eff:20.8% logz=-27015.08+/-0.06 dlogz:764.347>0.1]1171it [00:29, 22.21it/s, bound:0 nc: 29 ncall:5.6e+03 eff:20.7% logz=-27015.07+/-0.06 dlogz:764.328>0.1]1174it [00:29, 20.92it/s, bound:0 nc: 17 ncall:5.7e+03 eff:20.7% logz=-27015.06+/-0.06 dlogz:764.317>0.1]1177it [00:30, 12.75it/s, bound:0 nc: 24 ncall:5.8e+03 eff:20.4% logz=-27015.06+/-0.06 dlogz:764.305>0.1]1180it [00:30, 13.92it/s, bound:0 nc: 23 ncall:5.8e+03 eff:20.3% logz=-27015.05+/-0.06 dlogz:764.294>0.1]1182it [00:30, 13.40it/s, bound:0 nc:  4 ncall:5.8e+03 eff:20.3% logz=-27015.05+/-0.06 dlogz:764.286>0.1]1188it [00:30, 19.10it/s, bound:0 nc: 18 ncall:5.9e+03 eff:20.3% logz=-27015.04+/-0.06 dlogz:764.263>0.1]1191it [00:31, 18.87it/s, bound:0 nc: 24 ncall:5.9e+03 eff:20.2% logz=-27015.03+/-0.06 dlogz:764.252>0.1]1194it [00:31, 14.65it/s, bound:0 nc: 30 ncall:6.0e+03 eff:20.1% logz=-27015.03+/-0.06 dlogz:764.241>0.1]1197it [00:31, 15.38it/s, bound:0 nc:  3 ncall:6.0e+03 eff:20.0% logz=-27015.02+/-0.06 dlogz:764.230>0.1]1199it [00:31, 14.66it/s, bound:0 nc: 25 ncall:6.0e+03 eff:19.9% logz=-27015.02+/-0.06 dlogz:764.222>0.1]1202it [00:31, 15.41it/s, bound:0 nc: 34 ncall:6.1e+03 eff:19.8% logz=-27015.01+/-0.06 dlogz:764.211>0.1]1204it [00:32, 14.61it/s, bound:0 nc: 29 ncall:6.1e+03 eff:19.8% logz=-27015.01+/-0.06 dlogz:764.204>0.1]1206it [00:32,  8.90it/s, bound:0 nc: 18 ncall:6.2e+03 eff:19.5% logz=-27015.01+/-0.06 dlogz:764.197>0.1]1208it [00:32,  9.61it/s, bound:0 nc: 17 ncall:6.2e+03 eff:19.4% logz=-27015.00+/-0.06 dlogz:764.189>0.1]1210it [00:32, 10.12it/s, bound:0 nc: 18 ncall:6.2e+03 eff:19.4% logz=-27015.00+/-0.06 dlogz:764.182>0.1]1212it [00:33, 10.69it/s, bound:0 nc: 19 ncall:6.3e+03 eff:19.3% logz=-27015.00+/-0.06 dlogz:764.175>0.1]1217it [00:33, 15.81it/s, bound:0 nc:  5 ncall:6.3e+03 eff:19.3% logz=-27014.99+/-0.06 dlogz:764.157>0.1]1223it [00:33, 21.19it/s, bound:0 nc:  6 ncall:6.3e+03 eff:19.3% logz=-27014.98+/-0.06 dlogz:764.135>0.1]1227it [00:33, 17.34it/s, bound:0 nc: 39 ncall:6.4e+03 eff:19.2% logz=-27014.97+/-0.06 dlogz:764.121>0.1]1233it [00:33, 21.99it/s, bound:0 nc: 21 ncall:6.4e+03 eff:19.2% logz=-27014.96+/-0.06 dlogz:764.100>0.1]1236it [00:34, 16.74it/s, bound:0 nc: 15 ncall:6.5e+03 eff:19.0% logz=-27014.96+/-0.06 dlogz:764.089>0.1]1239it [00:34, 11.78it/s, bound:0 nc: 11 ncall:6.6e+03 eff:18.8% logz=-27014.95+/-0.06 dlogz:764.079>0.1]1241it [00:34, 11.76it/s, bound:0 nc: 31 ncall:6.6e+03 eff:18.8% logz=-27014.95+/-0.06 dlogz:764.072>0.1]1245it [00:35, 14.36it/s, bound:0 nc: 28 ncall:6.7e+03 eff:18.7% logz=-27014.94+/-0.06 dlogz:764.058>0.1]1247it [00:35, 13.83it/s, bound:0 nc:  3 ncall:6.7e+03 eff:18.7% logz=-27014.94+/-0.06 dlogz:764.051>0.1]1249it [00:35, 13.25it/s, bound:0 nc: 43 ncall:6.7e+03 eff:18.6% logz=-27014.94+/-0.06 dlogz:764.044>0.1]1251it [00:35, 10.32it/s, bound:0 nc: 24 ncall:6.8e+03 eff:18.4% logz=-27014.94+/-0.06 dlogz:764.037>0.1]1254it [00:35, 12.14it/s, bound:0 nc:  5 ncall:6.8e+03 eff:18.4% logz=-27014.93+/-0.06 dlogz:764.027>0.1]1257it [00:36, 13.46it/s, bound:0 nc: 15 ncall:6.8e+03 eff:18.4% logz=-27014.93+/-0.06 dlogz:764.016>0.1]1260it [00:36, 14.71it/s, bound:0 nc:  8 ncall:6.9e+03 eff:18.3% logz=-27014.92+/-0.06 dlogz:764.006>0.1]1266it [00:36, 20.41it/s, bound:0 nc: 32 ncall:6.9e+03 eff:18.3% logz=-27014.91+/-0.06 dlogz:763.986>0.1]1269it [00:36, 19.83it/s, bound:0 nc:  4 ncall:6.9e+03 eff:18.3% logz=-27014.91+/-0.06 dlogz:763.975>0.1]1272it [00:36, 19.08it/s, bound:0 nc:  8 ncall:7.0e+03 eff:18.2% logz=-27014.91+/-0.06 dlogz:763.965>0.1]1275it [00:36, 18.91it/s, bound:0 nc:  8 ncall:7.0e+03 eff:18.2% logz=-27014.90+/-0.06 dlogz:763.955>0.1]1277it [00:37, 16.88it/s, bound:0 nc:  2 ncall:7.0e+03 eff:18.2% logz=-27014.90+/-0.06 dlogz:763.949>0.1]1282it [00:37, 20.95it/s, bound:0 nc: 12 ncall:7.1e+03 eff:18.1% logz=-27014.89+/-0.06 dlogz:763.932>0.1]1285it [00:37, 19.95it/s, bound:0 nc: 19 ncall:7.1e+03 eff:18.1% logz=-27014.89+/-0.06 dlogz:763.922>0.1]1288it [00:37, 19.55it/s, bound:0 nc:  1 ncall:7.1e+03 eff:18.1% logz=-27014.89+/-0.06 dlogz:763.912>0.1]1293it [00:38, 14.27it/s, bound:0 nc: 79 ncall:7.2e+03 eff:17.9% logz=-27014.88+/-0.06 dlogz:763.895>0.1]1295it [00:38, 13.81it/s, bound:0 nc: 17 ncall:7.3e+03 eff:17.8% logz=-27014.88+/-0.06 dlogz:763.889>0.1]1298it [00:38, 14.82it/s, bound:0 nc: 34 ncall:7.3e+03 eff:17.8% logz=-27014.87+/-0.06 dlogz:763.879>0.1]1301it [00:38, 15.65it/s, bound:0 nc:  6 ncall:7.3e+03 eff:17.8% logz=-27014.87+/-0.06 dlogz:763.869>0.1]1305it [00:38, 17.80it/s, bound:0 nc: 26 ncall:7.4e+03 eff:17.7% logz=-27014.86+/-0.06 dlogz:763.856>0.1]1309it [00:38, 19.52it/s, bound:0 nc: 30 ncall:7.4e+03 eff:17.7% logz=-27014.86+/-0.06 dlogz:763.843>0.1]1312it [00:39, 19.17it/s, bound:0 nc:  4 ncall:7.4e+03 eff:17.7% logz=-27014.85+/-0.06 dlogz:763.834>0.1]1314it [00:39,  9.21it/s, bound:0 nc: 19 ncall:7.6e+03 eff:17.4% logz=-27014.85+/-0.06 dlogz:763.827>0.1]1317it [00:39, 10.84it/s, bound:0 nc: 26 ncall:7.6e+03 eff:17.4% logz=-27014.85+/-0.06 dlogz:763.817>0.1]1322it [00:40, 14.69it/s, bound:0 nc: 21 ncall:7.6e+03 eff:17.3% logz=-27014.84+/-0.06 dlogz:763.801>0.1]1325it [00:40, 12.68it/s, bound:0 nc: 37 ncall:7.7e+03 eff:17.3% logz=-27014.84+/-0.06 dlogz:763.792>0.1]1329it [00:40, 15.18it/s, bound:0 nc: 17 ncall:7.7e+03 eff:17.3% logz=-27014.83+/-0.06 dlogz:763.779>0.1]1333it [00:40, 17.24it/s, bound:0 nc: 13 ncall:7.7e+03 eff:17.2% logz=-27014.83+/-0.06 dlogz:763.766>0.1]1337it [00:40, 18.80it/s, bound:0 nc: 13 ncall:7.8e+03 eff:17.2% logz=-27014.83+/-0.06 dlogz:763.754>0.1]1340it [00:41, 18.75it/s, bound:0 nc: 10 ncall:7.8e+03 eff:17.1% logz=-27014.82+/-0.06 dlogz:763.744>0.1]1343it [00:41, 18.41it/s, bound:0 nc:  9 ncall:7.9e+03 eff:17.1% logz=-27014.82+/-0.06 dlogz:763.735>0.1]1345it [00:41, 16.75it/s, bound:0 nc:  1 ncall:7.9e+03 eff:17.1% logz=-27014.82+/-0.06 dlogz:763.728>0.1]1350it [00:42, 11.06it/s, bound:0 nc:106 ncall:8.0e+03 eff:16.9% logz=-27014.81+/-0.06 dlogz:763.713>0.1]1353it [00:42, 12.29it/s, bound:0 nc: 22 ncall:8.0e+03 eff:16.8% logz=-27014.81+/-0.06 dlogz:763.703>0.1]1355it [00:42, 12.31it/s, bound:0 nc:  4 ncall:8.1e+03 eff:16.8% logz=-27014.80+/-0.06 dlogz:763.697>0.1]1359it [00:42, 14.99it/s, bound:0 nc: 12 ncall:8.1e+03 eff:16.8% logz=-27014.80+/-0.06 dlogz:763.685>0.1]1361it [00:42, 14.12it/s, bound:0 nc: 54 ncall:8.1e+03 eff:16.7% logz=-27014.80+/-0.06 dlogz:763.678>0.1]1363it [00:42, 13.67it/s, bound:0 nc:  5 ncall:8.2e+03 eff:16.7% logz=-27014.80+/-0.06 dlogz:763.672>0.1]1365it [00:43, 10.41it/s, bound:0 nc: 66 ncall:8.2e+03 eff:16.6% logz=-27014.79+/-0.06 dlogz:763.666>0.1]1368it [00:43, 12.13it/s, bound:0 nc:  5 ncall:8.2e+03 eff:16.6% logz=-27014.79+/-0.06 dlogz:763.657>0.1]1374it [00:43, 18.20it/s, bound:0 nc: 18 ncall:8.3e+03 eff:16.6% logz=-27014.78+/-0.06 dlogz:763.638>0.1]1377it [00:43, 14.26it/s, bound:0 nc: 30 ncall:8.3e+03 eff:16.5% logz=-27014.78+/-0.06 dlogz:763.629>0.1]1379it [00:44, 13.84it/s, bound:0 nc: 30 ncall:8.4e+03 eff:16.5% logz=-27014.78+/-0.06 dlogz:763.623>0.1]1382it [00:44, 11.98it/s, bound:0 nc: 55 ncall:8.5e+03 eff:16.3% logz=-27014.78+/-0.06 dlogz:763.614>0.1]1384it [00:44, 11.93it/s, bound:0 nc: 10 ncall:8.5e+03 eff:16.3% logz=-27014.77+/-0.06 dlogz:763.607>0.1]1386it [00:44,  9.72it/s, bound:0 nc: 30 ncall:8.5e+03 eff:16.2% logz=-27014.77+/-0.06 dlogz:763.601>0.1]1389it [00:44, 11.61it/s, bound:0 nc: 23 ncall:8.6e+03 eff:16.2% logz=-27014.77+/-0.06 dlogz:763.592>0.1]1391it [00:45, 11.66it/s, bound:0 nc: 17 ncall:8.6e+03 eff:16.1% logz=-27014.77+/-0.06 dlogz:763.586>0.1]1393it [00:45, 11.83it/s, bound:0 nc: 27 ncall:8.7e+03 eff:16.1% logz=-27014.76+/-0.06 dlogz:763.580>0.1]1395it [00:45, 11.80it/s, bound:0 nc: 26 ncall:8.7e+03 eff:16.1% logz=-27014.76+/-0.06 dlogz:763.574>0.1]1397it [00:45, 11.97it/s, bound:0 nc:  7 ncall:8.7e+03 eff:16.1% logz=-27014.76+/-0.06 dlogz:763.568>0.1]1399it [00:46,  6.52it/s, bound:0 nc: 93 ncall:8.8e+03 eff:15.8% logz=-27014.76+/-0.06 dlogz:763.562>0.1]1400it [00:46,  6.43it/s, bound:0 nc: 49 ncall:8.9e+03 eff:15.8% logz=-27014.76+/-0.06 dlogz:763.559>0.1]1401it [00:46,  6.36it/s, bound:0 nc:  6 ncall:8.9e+03 eff:15.8% logz=-27014.76+/-0.06 dlogz:763.556>0.1]1404it [00:46,  8.97it/s, bound:0 nc: 14 ncall:8.9e+03 eff:15.7% logz=-27014.75+/-0.06 dlogz:763.547>0.1]1406it [00:47,  7.82it/s, bound:0 nc: 28 ncall:9.0e+03 eff:15.7% logz=-27014.75+/-0.06 dlogz:763.541>0.1]1410it [00:47,  9.40it/s, bound:0 nc: 60 ncall:9.1e+03 eff:15.5% logz=-27014.75+/-0.06 dlogz:763.528>0.1]1412it [00:47,  9.89it/s, bound:0 nc:  3 ncall:9.1e+03 eff:15.5% logz=-27014.74+/-0.06 dlogz:763.522>0.1]1414it [00:47, 10.46it/s, bound:0 nc:  3 ncall:9.1e+03 eff:15.5% logz=-27014.74+/-0.06 dlogz:763.516>0.1]1416it [00:47, 10.84it/s, bound:0 nc: 25 ncall:9.2e+03 eff:15.4% logz=-27014.74+/-0.06 dlogz:763.510>0.1]1418it [00:48,  8.85it/s, bound:0 nc: 40 ncall:9.2e+03 eff:15.4% logz=-27014.74+/-0.06 dlogz:763.504>0.1]1420it [00:48,  9.51it/s, bound:0 nc: 11 ncall:9.2e+03 eff:15.4% logz=-27014.74+/-0.06 dlogz:763.498>0.1]1422it [00:48,  8.14it/s, bound:0 nc: 39 ncall:9.3e+03 eff:15.2% logz=-27014.73+/-0.06 dlogz:763.492>0.1]1423it [00:48,  7.72it/s, bound:0 nc: 31 ncall:9.4e+03 eff:15.2% logz=-27014.73+/-0.06 dlogz:763.489>0.1]1424it [00:49,  5.91it/s, bound:0 nc: 49 ncall:9.4e+03 eff:15.1% logz=-27014.73+/-0.06 dlogz:763.486>0.1]1425it [00:49,  4.86it/s, bound:0 nc: 62 ncall:9.5e+03 eff:15.1% logz=-27014.73+/-0.06 dlogz:763.483>0.1]1426it [00:49,  4.25it/s, bound:0 nc: 69 ncall:9.5e+03 eff:15.0% logz=-27014.73+/-0.06 dlogz:763.480>0.1]1428it [00:50,  5.72it/s, bound:0 nc: 10 ncall:9.6e+03 eff:14.9% logz=-27014.73+/-0.06 dlogz:763.474>0.1]1430it [00:50,  7.12it/s, bound:0 nc: 22 ncall:9.6e+03 eff:14.9% logz=-27014.73+/-0.06 dlogz:763.468>0.1]1432it [00:50,  8.30it/s, bound:0 nc:  7 ncall:9.6e+03 eff:14.9% logz=-27014.72+/-0.06 dlogz:763.463>0.1]1433it [00:50,  7.66it/s, bound:0 nc: 39 ncall:9.7e+03 eff:14.8% logz=-27014.72+/-0.06 dlogz:763.460>0.1]1434it [00:50,  7.28it/s, bound:0 nc: 27 ncall:9.7e+03 eff:14.8% logz=-27014.72+/-0.06 dlogz:763.457>0.1]1436it [00:51,  6.76it/s, bound:0 nc: 67 ncall:9.8e+03 eff:14.7% logz=-27014.72+/-0.06 dlogz:763.451>0.1]1439it [00:51,  9.37it/s, bound:0 nc: 13 ncall:9.8e+03 eff:14.7% logz=-27014.72+/-0.06 dlogz:763.442>0.1]1442it [00:51, 11.63it/s, bound:0 nc: 24 ncall:9.8e+03 eff:14.7% logz=-27014.71+/-0.06 dlogz:763.433>0.1]1445it [00:51, 13.27it/s, bound:0 nc: 14 ncall:9.8e+03 eff:14.7% logz=-27014.71+/-0.06 dlogz:763.424>0.1]1447it [00:51, 10.24it/s, bound:0 nc:  2 ncall:9.9e+03 eff:14.6% logz=-27014.71+/-0.06 dlogz:763.418>0.1]1449it [00:52, 10.61it/s, bound:0 nc: 37 ncall:1.0e+04 eff:14.5% logz=-27014.71+/-0.06 dlogz:763.412>0.1]1451it [00:52,  8.79it/s, bound:0 nc: 53 ncall:1.0e+04 eff:14.5% logz=-27014.71+/-0.06 dlogz:763.406>0.1]1453it [00:52,  9.59it/s, bound:0 nc: 16 ncall:1.0e+04 eff:14.5% logz=-27014.70+/-0.06 dlogz:763.400>0.1]1456it [00:52, 11.61it/s, bound:0 nc: 37 ncall:1.0e+04 eff:14.4% logz=-27014.70+/-0.06 dlogz:763.392>0.1]1458it [00:52, 11.83it/s, bound:0 nc: 16 ncall:1.0e+04 eff:14.4% logz=-27014.70+/-0.06 dlogz:763.386>0.1]1461it [00:53, 13.54it/s, bound:0 nc: 15 ncall:1.0e+04 eff:14.4% logz=-27014.70+/-0.06 dlogz:763.377>0.1]1463it [00:53, 13.00it/s, bound:0 nc: 20 ncall:1.0e+04 eff:14.4% logz=-27014.69+/-0.06 dlogz:763.371>0.1]1465it [00:53, 12.87it/s, bound:0 nc: 11 ncall:1.0e+04 eff:14.4% logz=-27014.69+/-0.06 dlogz:763.365>0.1]1467it [00:53, 12.58it/s, bound:0 nc: 42 ncall:1.0e+04 eff:14.3% logz=-27014.69+/-0.06 dlogz:763.359>0.1]1469it [00:53,  9.65it/s, bound:0 nc:  3 ncall:1.0e+04 eff:14.3% logz=-27014.69+/-0.06 dlogz:763.353>0.1]1472it [00:54, 11.80it/s, bound:0 nc: 47 ncall:1.0e+04 eff:14.2% logz=-27014.69+/-0.06 dlogz:763.345>0.1]1474it [00:54, 11.81it/s, bound:0 nc:  1 ncall:1.0e+04 eff:14.2% logz=-27014.68+/-0.06 dlogz:763.339>0.1]1476it [00:54, 11.98it/s, bound:0 nc:  6 ncall:1.0e+04 eff:14.2% logz=-27014.68+/-0.06 dlogz:763.333>0.1]1480it [00:54, 12.00it/s, bound:0 nc: 36 ncall:1.0e+04 eff:14.2% logz=-27014.68+/-0.06 dlogz:763.321>0.1]1482it [00:55,  8.09it/s, bound:0 nc:  8 ncall:1.1e+04 eff:14.0% logz=-27014.68+/-0.06 dlogz:763.316>0.1]1484it [00:55,  8.86it/s, bound:0 nc: 30 ncall:1.1e+04 eff:14.0% logz=-27014.68+/-0.06 dlogz:763.310>0.1]1486it [00:55,  7.86it/s, bound:0 nc:  2 ncall:1.1e+04 eff:14.0% logz=-27014.67+/-0.06 dlogz:763.304>0.1]1488it [00:55,  8.64it/s, bound:0 nc: 13 ncall:1.1e+04 eff:13.9% logz=-27014.67+/-0.06 dlogz:763.298>0.1]1489it [00:56,  8.10it/s, bound:0 nc: 25 ncall:1.1e+04 eff:13.9% logz=-27014.67+/-0.06 dlogz:763.295>0.1]1490it [00:56,  7.58it/s, bound:0 nc: 33 ncall:1.1e+04 eff:13.9% logz=-27014.67+/-0.06 dlogz:763.292>0.1]1491it [00:56,  5.72it/s, bound:0 nc: 75 ncall:1.1e+04 eff:13.8% logz=-27014.67+/-0.06 dlogz:763.290>0.1]1492it [00:56,  4.73it/s, bound:0 nc: 53 ncall:1.1e+04 eff:13.7% logz=-27014.67+/-0.06 dlogz:763.287>0.1]1495it [00:57,  7.49it/s, bound:0 nc: 23 ncall:1.1e+04 eff:13.7% logz=-27014.67+/-0.06 dlogz:763.278>0.1]1497it [00:57,  8.47it/s, bound:0 nc: 12 ncall:1.1e+04 eff:13.7% logz=-27014.66+/-0.06 dlogz:763.272>0.1]1498it [00:57,  7.92it/s, bound:0 nc: 29 ncall:1.1e+04 eff:13.7% logz=-27014.66+/-0.06 dlogz:763.269>0.1]1500it [00:57,  8.95it/s, bound:0 nc: 28 ncall:1.1e+04 eff:13.6% logz=-27014.66+/-0.06 dlogz:763.264>0.1]1503it [00:57,  9.05it/s, bound:0 nc: 38 ncall:1.1e+04 eff:13.6% logz=-27014.66+/-0.06 dlogz:763.255>0.1]1507it [00:58, 12.48it/s, bound:0 nc:  8 ncall:1.1e+04 eff:13.6% logz=-27014.65+/-0.06 dlogz:763.243>0.1]1509it [00:58,  8.33it/s, bound:0 nc: 88 ncall:1.1e+04 eff:13.5% logz=-27014.65+/-0.06 dlogz:763.238>0.1]1511it [00:58,  9.07it/s, bound:0 nc: 35 ncall:1.1e+04 eff:13.5% logz=-27014.65+/-0.06 dlogz:763.232>0.1]1514it [00:58, 10.97it/s, bound:0 nc: 29 ncall:1.1e+04 eff:13.4% logz=-27014.65+/-0.06 dlogz:763.223>0.1]1516it [00:59, 11.33it/s, bound:0 nc: 14 ncall:1.1e+04 eff:13.4% logz=-27014.65+/-0.06 dlogz:763.218>0.1]1518it [00:59,  9.18it/s, bound:0 nc:  6 ncall:1.1e+04 eff:13.3% logz=-27014.65+/-0.06 dlogz:763.212>0.1]1520it [00:59,  9.86it/s, bound:0 nc:  1 ncall:1.1e+04 eff:13.3% logz=-27014.64+/-0.06 dlogz:763.206>0.1]1522it [00:59,  8.24it/s, bound:0 nc: 31 ncall:1.1e+04 eff:13.3% logz=-27014.64+/-0.06 dlogz:763.201>0.1]1523it [01:00,  7.76it/s, bound:0 nc: 32 ncall:1.1e+04 eff:13.2% logz=-27014.64+/-0.06 dlogz:763.198>0.1]1525it [01:00,  8.70it/s, bound:0 nc: 22 ncall:1.2e+04 eff:13.2% logz=-27014.64+/-0.06 dlogz:763.192>0.1]1527it [01:00,  9.60it/s, bound:0 nc: 20 ncall:1.2e+04 eff:13.2% logz=-27014.64+/-0.06 dlogz:763.186>0.1]1530it [01:00, 11.78it/s, bound:0 nc: 12 ncall:1.2e+04 eff:13.2% logz=-27014.64+/-0.06 dlogz:763.178>0.1]1532it [01:00,  9.33it/s, bound:0 nc:  8 ncall:1.2e+04 eff:13.2% logz=-27014.63+/-0.06 dlogz:763.172>0.1]1535it [01:01, 11.41it/s, bound:0 nc: 16 ncall:1.2e+04 eff:13.1% logz=-27014.63+/-0.06 dlogz:763.164>0.1]1539it [01:01,  8.32it/s, bound:0 nc:108 ncall:1.2e+04 eff:13.0% logz=-27014.63+/-0.06 dlogz:763.152>0.1]1541it [01:02,  7.65it/s, bound:0 nc: 66 ncall:1.2e+04 eff:13.0% logz=-27014.63+/-0.06 dlogz:763.146>0.1]1543it [01:02,  8.41it/s, bound:0 nc: 34 ncall:1.2e+04 eff:12.9% logz=-27014.62+/-0.06 dlogz:763.141>0.1]1545it [01:02,  9.07it/s, bound:0 nc:  1 ncall:1.2e+04 eff:12.9% logz=-27014.62+/-0.06 dlogz:763.135>0.1]1547it [01:02,  9.77it/s, bound:0 nc: 49 ncall:1.2e+04 eff:12.9% logz=-27014.62+/-0.06 dlogz:763.129>0.1]1549it [01:03,  6.95it/s, bound:0 nc: 22 ncall:1.2e+04 eff:12.8% logz=-27014.62+/-0.06 dlogz:763.124>0.1]1550it [01:03,  5.75it/s, bound:0 nc: 76 ncall:1.2e+04 eff:12.8% logz=-27014.62+/-0.06 dlogz:763.121>0.1]1551it [01:03,  5.77it/s, bound:0 nc: 17 ncall:1.2e+04 eff:12.8% logz=-27014.62+/-0.06 dlogz:763.118>0.1]1553it [01:03,  7.12it/s, bound:0 nc: 31 ncall:1.2e+04 eff:12.7% logz=-27014.62+/-0.06 dlogz:763.112>0.1]1554it [01:03,  6.88it/s, bound:0 nc: 27 ncall:1.2e+04 eff:12.7% logz=-27014.61+/-0.06 dlogz:763.110>0.1]1555it [01:04,  6.62it/s, bound:0 nc: 17 ncall:1.2e+04 eff:12.7% logz=-27014.61+/-0.06 dlogz:763.107>0.1]1558it [01:04,  9.66it/s, bound:0 nc: 45 ncall:1.2e+04 eff:12.7% logz=-27014.61+/-0.06 dlogz:763.098>0.1]1560it [01:04,  5.70it/s, bound:0 nc: 10 ncall:1.2e+04 eff:12.6% logz=-27014.61+/-0.06 dlogz:763.092>0.1]1561it [01:05,  5.80it/s, bound:0 nc: 27 ncall:1.2e+04 eff:12.5% logz=-27014.61+/-0.06 dlogz:763.090>0.1]1562it [01:05,  5.85it/s, bound:0 nc: 57 ncall:1.2e+04 eff:12.5% logz=-27014.61+/-0.06 dlogz:763.087>0.1]1563it [01:05,  5.85it/s, bound:0 nc: 27 ncall:1.3e+04 eff:12.5% logz=-27014.61+/-0.06 dlogz:763.084>0.1]1564it [01:05,  4.01it/s, bound:0 nc: 70 ncall:1.3e+04 eff:12.4% logz=-27014.61+/-0.06 dlogz:763.081>0.1]1565it [01:06,  4.38it/s, bound:0 nc: 53 ncall:1.3e+04 eff:12.4% logz=-27014.61+/-0.06 dlogz:763.078>0.1]1566it [01:06,  3.90it/s, bound:0 nc: 50 ncall:1.3e+04 eff:12.3% logz=-27014.60+/-0.06 dlogz:763.076>0.1]1570it [01:06,  5.68it/s, bound:0 nc: 83 ncall:1.3e+04 eff:12.3% logz=-27014.60+/-0.06 dlogz:763.064>0.1]1571it [01:07,  4.28it/s, bound:0 nc:101 ncall:1.3e+04 eff:12.2% logz=-27014.60+/-0.06 dlogz:763.061>0.1]1573it [01:07,  4.75it/s, bound:0 nc: 44 ncall:1.3e+04 eff:12.1% logz=-27014.60+/-0.06 dlogz:763.056>0.1]1575it [01:07,  5.92it/s, bound:0 nc:  5 ncall:1.3e+04 eff:12.1% logz=-27014.60+/-0.06 dlogz:763.050>0.1]1576it [01:08,  5.00it/s, bound:0 nc: 86 ncall:1.3e+04 eff:12.1% logz=-27014.60+/-0.06 dlogz:763.047>0.1]1577it [01:08,  5.16it/s, bound:0 nc: 22 ncall:1.3e+04 eff:12.0% logz=-27014.60+/-0.06 dlogz:763.044>0.1]1578it [01:08,  5.38it/s, bound:0 nc: 25 ncall:1.3e+04 eff:12.0% logz=-27014.60+/-0.06 dlogz:763.042>0.1]1579it [01:08,  4.46it/s, bound:0 nc: 60 ncall:1.3e+04 eff:12.0% logz=-27014.59+/-0.06 dlogz:763.039>0.1]1583it [01:09,  8.59it/s, bound:0 nc: 20 ncall:1.3e+04 eff:12.0% logz=-27014.59+/-0.06 dlogz:763.028>0.1]1586it [01:09, 10.67it/s, bound:0 nc: 40 ncall:1.3e+04 eff:12.0% logz=-27014.59+/-0.06 dlogz:763.019>0.1]1588it [01:09,  7.42it/s, bound:0 nc:  9 ncall:1.3e+04 eff:11.9% logz=-27014.59+/-0.06 dlogz:763.014>0.1]1590it [01:09,  8.28it/s, bound:0 nc: 21 ncall:1.3e+04 eff:11.9% logz=-27014.59+/-0.06 dlogz:763.008>0.1]1592it [01:10,  9.14it/s, bound:0 nc:  9 ncall:1.3e+04 eff:11.9% logz=-27014.58+/-0.06 dlogz:763.002>0.1]1594it [01:10,  5.75it/s, bound:0 nc: 84 ncall:1.4e+04 eff:11.8% logz=-27014.58+/-0.06 dlogz:762.997>0.1]1595it [01:11,  4.99it/s, bound:0 nc: 52 ncall:1.4e+04 eff:11.7% logz=-27014.58+/-0.06 dlogz:762.994>0.1]1597it [01:11,  3.70it/s, bound:0 nc:151 ncall:1.4e+04 eff:11.6% logz=-27014.58+/-0.06 dlogz:762.988>0.1]1599it [01:12,  4.23it/s, bound:0 nc: 54 ncall:1.4e+04 eff:11.6% logz=-27014.58+/-0.06 dlogz:762.983>0.1]1601it [01:12,  5.34it/s, bound:0 nc: 21 ncall:1.4e+04 eff:11.5% logz=-27014.58+/-0.06 dlogz:762.977>0.1]1602it [01:12,  5.44it/s, bound:0 nc: 42 ncall:1.4e+04 eff:11.5% logz=-27014.58+/-0.06 dlogz:762.974>0.1]1603it [01:12,  5.32it/s, bound:0 nc: 31 ncall:1.4e+04 eff:11.5% logz=-27014.57+/-0.00 dlogz:762.972>0.1]1604it [01:12,  5.48it/s, bound:0 nc: 12 ncall:1.4e+04 eff:11.5% logz=-27014.57+/-0.00 dlogz:762.969>0.1]1606it [01:13,  5.73it/s, bound:0 nc: 56 ncall:1.4e+04 eff:11.5% logz=-27014.57+/-0.00 dlogz:762.963>0.1]1608it [01:13,  5.87it/s, bound:0 nc: 43 ncall:1.4e+04 eff:11.4% logz=-27014.57+/-0.00 dlogz:762.958>0.1]1610it [01:13,  7.08it/s, bound:0 nc: 42 ncall:1.4e+04 eff:11.4% logz=-27014.57+/-0.00 dlogz:762.952>0.1]1611it [01:13,  6.86it/s, bound:0 nc: 33 ncall:1.4e+04 eff:11.4% logz=-27014.57+/-0.00 dlogz:762.949>0.1]1613it [01:14,  6.53it/s, bound:0 nc: 58 ncall:1.4e+04 eff:11.3% logz=-27014.57+/-0.00 dlogz:762.944>0.1]1614it [01:14,  5.28it/s, bound:0 nc: 62 ncall:1.4e+04 eff:11.3% logz=-27014.57+/-0.00 dlogz:762.941>0.1]1615it [01:14,  5.47it/s, bound:0 nc: 36 ncall:1.4e+04 eff:11.3% logz=-27014.57+/-0.01 dlogz:762.938>0.1]1616it [01:15,  3.83it/s, bound:0 nc: 70 ncall:1.4e+04 eff:11.2% logz=-27014.56+/-0.01 dlogz:762.935>0.1]1618it [01:15,  5.35it/s, bound:0 nc: 15 ncall:1.4e+04 eff:11.2% logz=-27014.56+/-0.01 dlogz:762.930>0.1]1619it [01:15,  4.55it/s, bound:0 nc: 85 ncall:1.5e+04 eff:11.2% logz=-27014.56+/-0.01 dlogz:762.927>0.1]1621it [01:16,  3.79it/s, bound:0 nc:122 ncall:1.5e+04 eff:11.1% logz=-27014.56+/-0.01 dlogz:762.921>0.1]1623it [01:16,  5.01it/s, bound:0 nc: 27 ncall:1.5e+04 eff:11.1% logz=-27014.56+/-0.01 dlogz:762.916>0.1]1624it [01:16,  4.42it/s, bound:0 nc: 79 ncall:1.5e+04 eff:11.0% logz=-27014.56+/-0.01 dlogz:762.913>0.1]1625it [01:17,  4.70it/s, bound:0 nc: 18 ncall:1.5e+04 eff:11.0% logz=-27014.56+/-0.01 dlogz:762.910>0.1]1626it [01:17,  3.53it/s, bound:0 nc:107 ncall:1.5e+04 eff:10.9% logz=-27014.56+/-0.01 dlogz:762.907>0.1]1627it [01:17,  3.98it/s, bound:0 nc: 25 ncall:1.5e+04 eff:10.9% logz=-27014.56+/-0.01 dlogz:762.904>0.1]1628it [01:17,  4.36it/s, bound:0 nc: 20 ncall:1.5e+04 eff:10.9% logz=-27014.55+/-0.01 dlogz:762.902>0.1]1631it [01:18,  7.40it/s, bound:0 nc: 19 ncall:1.5e+04 eff:10.9% logz=-27014.55+/-0.01 dlogz:762.893>0.1]1632it [01:18,  7.03it/s, bound:0 nc: 29 ncall:1.5e+04 eff:10.9% logz=-27014.55+/-0.01 dlogz:762.890>0.1]1633it [01:18,  6.83it/s, bound:0 nc: 23 ncall:1.5e+04 eff:10.9% logz=-27014.55+/-0.01 dlogz:762.888>0.1]1636it [01:18,  7.77it/s, bound:0 nc: 64 ncall:1.5e+04 eff:10.8% logz=-27014.55+/-0.01 dlogz:762.879>0.1]1637it [01:19,  4.38it/s, bound:0 nc:132 ncall:1.5e+04 eff:10.8% logz=-27014.55+/-0.01 dlogz:762.877>0.1]1638it [01:19,  4.68it/s, bound:0 nc:  6 ncall:1.5e+04 eff:10.8% logz=-27014.55+/-0.01 dlogz:762.874>0.1]1643it [01:19,  9.52it/s, bound:0 nc: 38 ncall:1.5e+04 eff:10.7% logz=-27014.54+/-0.01 dlogz:762.860>0.1]1645it [01:19, 10.10it/s, bound:0 nc:  1 ncall:1.5e+04 eff:10.8% logz=-27014.54+/-0.01 dlogz:762.854>0.1]1647it [01:19, 10.49it/s, bound:0 nc:  7 ncall:1.5e+04 eff:10.8% logz=-27014.54+/-0.01 dlogz:762.849>0.1]1649it [01:20,  7.27it/s, bound:0 nc: 58 ncall:1.5e+04 eff:10.7% logz=-27014.54+/-0.01 dlogz:762.843>0.1]1651it [01:20,  6.88it/s, bound:0 nc: 23 ncall:1.5e+04 eff:10.7% logz=-27014.54+/-0.01 dlogz:762.838>0.1]1652it [01:20,  6.69it/s, bound:0 nc: 23 ncall:1.6e+04 eff:10.6% logz=-27014.54+/-0.01 dlogz:762.835>0.1]1653it [01:21,  5.40it/s, bound:0 nc: 58 ncall:1.6e+04 eff:10.6% logz=-27014.54+/-0.01 dlogz:762.832>0.1]1654it [01:21,  5.54it/s, bound:0 nc: 48 ncall:1.6e+04 eff:10.6% logz=-27014.53+/-0.01 dlogz:762.829>0.1]1655it [01:21,  4.63it/s, bound:0 nc: 65 ncall:1.6e+04 eff:10.5% logz=-27014.53+/-0.01 dlogz:762.827>0.1]1656it [01:21,  4.88it/s, bound:0 nc: 20 ncall:1.6e+04 eff:10.5% logz=-27014.53+/-0.01 dlogz:762.824>0.1]1659it [01:22,  5.44it/s, bound:0 nc:102 ncall:1.6e+04 eff:10.5% logz=-27014.53+/-0.01 dlogz:762.816>0.1]1661it [01:22,  6.60it/s, bound:0 nc: 20 ncall:1.6e+04 eff:10.5% logz=-27014.53+/-0.01 dlogz:762.810>0.1]1663it [01:22,  7.76it/s, bound:0 nc: 36 ncall:1.6e+04 eff:10.5% logz=-27014.53+/-0.01 dlogz:762.805>0.1]1665it [01:22,  8.69it/s, bound:0 nc: 11 ncall:1.6e+04 eff:10.5% logz=-27014.53+/-0.01 dlogz:762.799>0.1]1667it [01:23,  9.59it/s, bound:0 nc: 26 ncall:1.6e+04 eff:10.5% logz=-27014.52+/-0.01 dlogz:762.794>0.1]1669it [01:23,  6.75it/s, bound:0 nc: 20 ncall:1.6e+04 eff:10.4% logz=-27014.52+/-0.01 dlogz:762.788>0.1]1670it [01:23,  5.54it/s, bound:0 nc: 60 ncall:1.6e+04 eff:10.4% logz=-27014.52+/-0.01 dlogz:762.785>0.1]1672it [01:24,  6.74it/s, bound:0 nc: 17 ncall:1.6e+04 eff:10.4% logz=-27014.52+/-0.01 dlogz:762.780>0.1]1674it [01:24,  6.58it/s, bound:0 nc: 63 ncall:1.6e+04 eff:10.3% logz=-27014.52+/-0.01 dlogz:762.774>0.1]1676it [01:24,  7.64it/s, bound:0 nc: 21 ncall:1.6e+04 eff:10.3% logz=-27014.52+/-0.01 dlogz:762.769>0.1]1679it [01:24, 10.04it/s, bound:0 nc: 27 ncall:1.6e+04 eff:10.3% logz=-27014.52+/-0.01 dlogz:762.760>0.1]1682it [01:25,  8.08it/s, bound:0 nc: 88 ncall:1.6e+04 eff:10.3% logz=-27014.51+/-0.01 dlogz:762.752>0.1]1684it [01:25,  7.48it/s, bound:0 nc: 21 ncall:1.6e+04 eff:10.3% logz=-27014.51+/-0.01 dlogz:762.747>0.1]1685it [01:25,  7.19it/s, bound:0 nc: 45 ncall:1.6e+04 eff:10.2% logz=-27014.51+/-0.01 dlogz:762.744>0.1]1686it [01:25,  6.99it/s, bound:0 nc: 18 ncall:1.6e+04 eff:10.2% logz=-27014.51+/-0.01 dlogz:762.741>0.1]1688it [01:26,  8.11it/s, bound:0 nc: 29 ncall:1.7e+04 eff:10.2% logz=-27014.51+/-0.01 dlogz:762.735>0.1]1690it [01:26,  9.16it/s, bound:0 nc: 18 ncall:1.7e+04 eff:10.2% logz=-27014.51+/-0.01 dlogz:762.730>0.1]1691it [01:26,  8.37it/s, bound:0 nc: 46 ncall:1.7e+04 eff:10.2% logz=-27014.51+/-0.01 dlogz:762.727>0.1]1692it [01:27,  2.92it/s, bound:0 nc:205 ncall:1.7e+04 eff:10.1% logz=-27014.51+/-0.01 dlogz:762.724>0.1]1694it [01:28,  3.26it/s, bound:0 nc: 95 ncall:1.7e+04 eff:10.0% logz=-27014.50+/-0.01 dlogz:762.719>0.1]1695it [01:28,  3.62it/s, bound:0 nc: 16 ncall:1.7e+04 eff:10.0% logz=-27014.50+/-0.01 dlogz:762.716>0.1]1696it [01:28,  3.98it/s, bound:0 nc: 57 ncall:1.7e+04 eff:10.0% logz=-27014.50+/-0.01 dlogz:762.713>0.1]1697it [01:32,  1.26s/it, bound:1 nc: 31 ncall:1.7e+04 eff:10.0% logz=-27014.50+/-0.01 dlogz:762.711>0.1]1725it [01:37,  3.73it/s, bound:2 nc:  3 ncall:1.8e+04 eff:9.7% logz=-27014.48+/-0.02 dlogz:762.633>0.1] 1750it [01:41,  4.54it/s, bound:4 nc: 28 ncall:1.9e+04 eff:9.3% logz=-27014.46+/-0.02 dlogz:762.563>0.1]1776it [01:46,  5.00it/s, bound:5 nc: 12 ncall:2.0e+04 eff:9.0% logz=-27014.44+/-0.02 dlogz:762.491>0.1]1803it [01:51,  5.21it/s, bound:6 nc:  5 ncall:2.1e+04 eff:8.7% logz=-27014.42+/-0.02 dlogz:762.416>0.1]1833it [01:56,  5.41it/s, bound:8 nc:  9 ncall:2.2e+04 eff:8.5% logz=-27014.40+/-0.02 dlogz:762.333>0.1]1861it [02:01,  5.58it/s, bound:10 nc: 18 ncall:2.3e+04 eff:8.2% logz=-27014.37+/-0.02 dlogz:762.254>0.1]1887it [02:05,  5.54it/s, bound:11 nc: 17 ncall:2.4e+04 eff:8.0% logz=-27014.35+/-0.03 dlogz:762.180>0.1]1913it [02:11,  5.41it/s, bound:13 nc:  4 ncall:2.5e+04 eff:7.8% logz=-27014.33+/-0.03 dlogz:762.105>0.1]1943it [02:15,  5.68it/s, bound:14 nc: 11 ncall:2.6e+04 eff:7.6% logz=-27014.30+/-0.03 dlogz:762.018>0.1]1968it [02:21,  5.39it/s, bound:16 nc: 17 ncall:2.7e+04 eff:7.4% logz=-27014.28+/-0.03 dlogz:761.943>0.1]1992it [02:25,  5.43it/s, bound:17 nc: 28 ncall:2.8e+04 eff:7.2% logz=-27014.25+/-0.00 dlogz:761.871>0.1]2018it [02:30,  5.31it/s, bound:19 nc: 13 ncall:2.9e+04 eff:7.1% logz=-27014.22+/-0.01 dlogz:761.791>0.1]2044it [02:35,  5.19it/s, bound:20 nc: 15 ncall:3.0e+04 eff:6.9% logz=-27014.19+/-0.02 dlogz:761.709>0.1]2069it [02:40,  5.08it/s, bound:22 nc:  1 ncall:3.1e+04 eff:6.7% logz=-27014.16+/-0.02 dlogz:761.629>0.1]2097it [02:45,  5.30it/s, bound:24 nc:  7 ncall:3.2e+04 eff:6.6% logz=-27014.13+/-0.02 dlogz:761.537>0.1]2119it [02:50,  4.99it/s, bound:25 nc: 39 ncall:3.3e+04 eff:6.5% logz=-27014.10+/-0.03 dlogz:761.462>0.1]2142it [02:55,  4.93it/s, bound:27 nc: 14 ncall:3.4e+04 eff:6.3% logz=-27014.06+/-0.03 dlogz:761.381>0.1]2171it [03:01,  5.09it/s, bound:28 nc: 21 ncall:3.5e+04 eff:6.2% logz=-27014.01+/-0.03 dlogz:761.276>0.1]2199it [03:06,  5.16it/s, bound:30 nc:  7 ncall:3.6e+04 eff:6.1% logz=-27013.96+/-0.04 dlogz:761.169>0.1]2227it [03:11,  5.23it/s, bound:31 nc: 26 ncall:3.7e+04 eff:6.0% logz=-27013.91+/-0.04 dlogz:761.058>0.1]2251it [03:16,  5.01it/s, bound:33 nc: 15 ncall:3.8e+04 eff:5.9% logz=-27013.85+/-0.05 dlogz:760.957>0.1]2274it [03:21,  4.98it/s, bound:35 nc:  5 ncall:3.9e+04 eff:5.8% logz=-27013.80+/-0.05 dlogz:760.857>0.1]2302it [03:27,  5.01it/s, bound:36 nc:190 ncall:4.0e+04 eff:5.7% logz=-27013.73+/-0.05 dlogz:760.729>0.1]2325it [03:32,  4.85it/s, bound:38 nc:  7 ncall:4.1e+04 eff:5.6% logz=-27013.66+/-0.01 dlogz:760.620>0.1]2352it [03:37,  4.89it/s, bound:39 nc: 19 ncall:4.2e+04 eff:5.6% logz=-27013.59+/-0.03 dlogz:760.492>0.1]2374it [03:42,  4.65it/s, bound:41 nc: 18 ncall:4.3e+04 eff:5.5% logz=-27013.53+/-0.03 dlogz:760.385>0.1]2397it [03:48,  4.61it/s, bound:43 nc: 13 ncall:4.4e+04 eff:5.4% logz=-27013.45+/-0.04 dlogz:760.265>0.1]2418it [03:53,  4.42it/s, bound:44 nc: 31 ncall:4.6e+04 eff:5.3% logz=-27013.38+/-0.05 dlogz:760.148>0.1]2439it [03:58,  4.23it/s, bound:46 nc:  5 ncall:4.7e+04 eff:5.2% logz=-27013.30+/-0.05 dlogz:760.028>0.1]2460it [04:04,  4.03it/s, bound:47 nc:283 ncall:4.8e+04 eff:5.2% logz=-27013.22+/-0.06 dlogz:759.906>0.1]2482it [04:09,  4.07it/s, bound:49 nc: 23 ncall:4.9e+04 eff:5.1% logz=-27013.13+/-0.06 dlogz:759.773>0.1]2505it [04:15,  4.10it/s, bound:51 nc: 42 ncall:5.0e+04 eff:5.0% logz=-27013.03+/-0.06 dlogz:759.632>0.1]2529it [04:21,  4.11it/s, bound:53 nc: 23 ncall:5.1e+04 eff:4.9% logz=-27012.93+/-0.07 dlogz:759.481>0.1]2553it [04:27,  4.13it/s, bound:55 nc:  5 ncall:5.2e+04 eff:4.9% logz=-27012.82+/-0.07 dlogz:759.327>0.1]2577it [04:31,  4.35it/s, bound:56 nc:  5 ncall:5.3e+04 eff:4.8% logz=-27012.72+/-0.08 dlogz:759.170>0.1]2601it [04:37,  4.39it/s, bound:58 nc:  2 ncall:5.4e+04 eff:4.8% logz=-27012.60+/-0.02 dlogz:913.286>0.1]2627it [04:42,  4.59it/s, bound:60 nc: 32 ncall:5.6e+04 eff:4.7% logz=-27012.45+/-0.04 dlogz:913.093>0.1]2654it [04:48,  4.63it/s, bound:61 nc: 12 ncall:5.7e+04 eff:4.7% logz=-27012.30+/-0.05 dlogz:912.883>0.1]2673it [04:53,  4.33it/s, bound:63 nc:  6 ncall:5.8e+04 eff:4.6% logz=-27012.18+/-0.06 dlogz:912.731>0.1]2695it [04:58,  4.25it/s, bound:65 nc: 18 ncall:5.9e+04 eff:4.6% logz=-27012.05+/-0.07 dlogz:912.551>0.1]2716it [05:03,  4.23it/s, bound:66 nc:  3 ncall:6.0e+04 eff:4.5% logz=-27011.90+/-0.07 dlogz:912.367>0.1]2735it [05:09,  3.99it/s, bound:68 nc: 13 ncall:6.1e+04 eff:4.5% logz=-27011.77+/-0.08 dlogz:912.192>0.1]2759it [05:14,  4.09it/s, bound:69 nc: 22 ncall:6.2e+04 eff:4.4% logz=-27011.60+/-0.08 dlogz:911.975>0.1]2781it [05:20,  3.98it/s, bound:71 nc: 20 ncall:6.3e+04 eff:4.4% logz=-27011.44+/-0.09 dlogz:911.769>0.1]2803it [05:27,  3.79it/s, bound:73 nc: 44 ncall:6.4e+04 eff:4.3% logz=-27011.27+/-0.09 dlogz:911.558>0.1]2826it [05:32,  3.91it/s, bound:75 nc: 12 ncall:6.6e+04 eff:4.3% logz=-27011.09+/-0.09 dlogz:911.335>0.1]2849it [05:38,  3.88it/s, bound:76 nc: 16 ncall:6.7e+04 eff:4.3% logz=-27010.92+/-0.10 dlogz:911.119>0.1]2873it [05:43,  4.06it/s, bound:78 nc: 67 ncall:6.8e+04 eff:4.2% logz=-27010.74+/-0.03 dlogz:910.887>0.1]2887it [05:49,  3.63it/s, bound:80 nc: 23 ncall:6.9e+04 eff:4.2% logz=-27010.63+/-0.04 dlogz:910.752>0.1]2911it [05:54,  3.83it/s, bound:81 nc: 33 ncall:7.0e+04 eff:4.1% logz=-27010.43+/-0.06 dlogz:910.508>0.1]2930it [06:00,  3.70it/s, bound:83 nc:266 ncall:7.1e+04 eff:4.1% logz=-27010.27+/-0.07 dlogz:910.307>0.1]2947it [06:06,  3.43it/s, bound:85 nc:  4 ncall:7.3e+04 eff:4.1% logz=-27010.11+/-0.08 dlogz:910.109>0.1]2968it [06:12,  3.41it/s, bound:87 nc: 17 ncall:7.4e+04 eff:4.0% logz=-27009.89+/-0.09 dlogz:909.849>0.1]2992it [06:18,  3.65it/s, bound:89 nc:  5 ncall:7.5e+04 eff:4.0% logz=-27009.63+/-0.09 dlogz:909.548>0.1]3012it [06:24,  3.57it/s, bound:90 nc:  5 ncall:7.6e+04 eff:4.0% logz=-27009.41+/-0.10 dlogz:909.285>0.1]3033it [06:30,  3.61it/s, bound:92 nc: 22 ncall:7.7e+04 eff:3.9% logz=-27009.17+/-0.10 dlogz:909.003>0.1]3060it [06:35,  3.90it/s, bound:94 nc: 17 ncall:7.9e+04 eff:3.9% logz=-27008.88+/-0.11 dlogz:908.661>0.1]3083it [06:41,  4.03it/s, bound:96 nc: 65 ncall:8.0e+04 eff:3.9% logz=-27008.62+/-0.11 dlogz:908.352>0.1]3103it [06:47,  3.86it/s, bound:98 nc: 29 ncall:8.1e+04 eff:3.8% logz=-27008.38+/-0.11 dlogz:908.073>0.1]3125it [06:52,  3.88it/s, bound:99 nc: 14 ncall:8.2e+04 eff:3.8% logz=-27008.12+/-0.05 dlogz:907.770>0.1]3149it [06:58,  4.00it/s, bound:101 nc:  4 ncall:8.3e+04 eff:3.8% logz=-27007.81+/-0.08 dlogz:907.410>0.1]3175it [07:04,  4.15it/s, bound:103 nc:  4 ncall:8.4e+04 eff:3.8% logz=-27007.47+/-0.09 dlogz:907.017>0.1]3203it [07:10,  4.27it/s, bound:105 nc: 12 ncall:8.5e+04 eff:3.7% logz=-27007.09+/-0.10 dlogz:906.587>0.1]3225it [07:17,  3.79it/s, bound:107 nc: 12 ncall:8.7e+04 eff:3.7% logz=-27006.79+/-0.11 dlogz:906.243>0.1]3251it [07:24,  3.89it/s, bound:109 nc: 25 ncall:8.8e+04 eff:3.7% logz=-27006.41+/-0.11 dlogz:905.815>0.1]3273it [07:29,  3.90it/s, bound:111 nc:  5 ncall:8.9e+04 eff:3.7% logz=-27006.04+/-0.12 dlogz:905.402>0.1]3297it [07:35,  3.93it/s, bound:112 nc:  9 ncall:9.0e+04 eff:3.7% logz=-27005.61+/-0.12 dlogz:904.928>0.1]3323it [07:41,  4.15it/s, bound:114 nc:  7 ncall:9.1e+04 eff:3.6% logz=-27005.02+/-0.12 dlogz:904.292>0.1]3350it [07:47,  4.28it/s, bound:116 nc:  4 ncall:9.3e+04 eff:3.6% logz=-27004.31+/-0.13 dlogz:903.521>0.1]3374it [07:53,  4.19it/s, bound:118 nc: 12 ncall:9.4e+04 eff:3.6% logz=-27003.63+/-0.13 dlogz:902.804>0.1]3397it [07:59,  4.07it/s, bound:120 nc:  2 ncall:9.5e+04 eff:3.6% logz=-27003.03+/-0.05 dlogz:902.151>0.1]3424it [08:04,  4.28it/s, bound:122 nc: 84 ncall:9.6e+04 eff:3.6% logz=-27002.26+/-0.10 dlogz:901.333>0.1]3449it [08:10,  4.21it/s, bound:124 nc:  6 ncall:9.7e+04 eff:3.5% logz=-27001.49+/-0.12 dlogz:900.506>0.1]3474it [08:17,  4.17it/s, bound:126 nc:  3 ncall:9.9e+04 eff:3.5% logz=-27000.82+/-0.12 dlogz:899.785>0.1]3504it [08:22,  4.49it/s, bound:128 nc:  5 ncall:1.0e+05 eff:3.5% logz=-26999.77+/-0.13 dlogz:898.697>0.1]3532it [08:28,  4.49it/s, bound:129 nc: 26 ncall:1.0e+05 eff:3.5% logz=-26998.50+/-0.13 dlogz:897.370>0.1]3560it [08:35,  4.46it/s, bound:131 nc: 14 ncall:1.0e+05 eff:3.5% logz=-26997.25+/-0.14 dlogz:896.067>0.1]3589it [08:41,  4.48it/s, bound:133 nc: 10 ncall:1.0e+05 eff:3.5% logz=-26995.52+/-0.14 dlogz:894.310>0.1]3619it [08:47,  4.59it/s, bound:135 nc:  8 ncall:1.0e+05 eff:3.5% logz=-26993.15+/-0.14 dlogz:891.877>0.1]3648it [08:54,  4.61it/s, bound:137 nc: 13 ncall:1.1e+05 eff:3.4% logz=-26991.33+/-0.14 dlogz:889.989>0.1]3678it [09:00,  4.72it/s, bound:140 nc:  6 ncall:1.1e+05 eff:3.4% logz=-26989.04+/-0.14 dlogz:887.661>0.1]3705it [09:06,  4.62it/s, bound:141 nc:  4 ncall:1.1e+05 eff:3.4% logz=-26986.15+/-0.12 dlogz:884.725>0.1]3734it [09:12,  4.62it/s, bound:143 nc:337 ncall:1.1e+05 eff:3.4% logz=-26983.08+/-0.14 dlogz:881.669>0.1]3764it [09:18,  4.66it/s, bound:146 nc:  5 ncall:1.1e+05 eff:3.4% logz=-26978.40+/-0.15 dlogz:876.888>0.1]3793it [09:24,  4.74it/s, bound:148 nc:  9 ncall:1.1e+05 eff:3.4% logz=-26974.10+/-0.15 dlogz:872.527>0.1]3822it [09:30,  4.72it/s, bound:149 nc:  3 ncall:1.1e+05 eff:3.4% logz=-26969.58+/-0.15 dlogz:867.948>0.1]3851it [09:37,  4.69it/s, bound:152 nc: 10 ncall:1.1e+05 eff:3.4% logz=-26964.30+/-0.15 dlogz:862.609>0.1]3881it [09:43,  4.68it/s, bound:153 nc:299 ncall:1.2e+05 eff:3.3% logz=-26960.36+/-0.15 dlogz:987.860>0.1]3910it [09:50,  4.58it/s, bound:156 nc:  7 ncall:1.2e+05 eff:3.3% logz=-26954.87+/-0.15 dlogz:982.357>0.1]3942it [09:56,  4.70it/s, bound:158 nc:  8 ncall:1.2e+05 eff:3.3% logz=-26948.29+/-0.15 dlogz:1044.796>0.1]3971it [10:03,  4.67it/s, bound:160 nc: 11 ncall:1.2e+05 eff:3.3% logz=-26943.03+/-0.15 dlogz:1039.395>0.1]15:22 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
4002it [10:11,  4.24it/s, bound:162 nc:  7 ncall:1.2e+05 eff:3.3% logz=-26936.25+/-0.08 dlogz:1032.694>0.1]4032it [10:18,  4.34it/s, bound:164 nc:  5 ncall:1.2e+05 eff:3.3% logz=-26928.66+/-0.16 dlogz:1024.999>0.1]4063it [10:24,  4.52it/s, bound:166 nc: 18 ncall:1.2e+05 eff:3.3% logz=-26923.47+/-0.15 dlogz:1019.668>0.1]4094it [10:31,  4.55it/s, bound:168 nc:  8 ncall:1.3e+05 eff:3.3% logz=-26917.45+/-0.15 dlogz:1013.560>0.1]4125it [10:37,  4.62it/s, bound:170 nc:  7 ncall:1.3e+05 eff:3.3% logz=-26910.68+/-0.15 dlogz:1006.770>0.1]4155it [10:44,  4.59it/s, bound:172 nc:  4 ncall:1.3e+05 eff:3.2% logz=-26904.16+/-0.15 dlogz:1060.074>0.1]4185it [10:50,  4.65it/s, bound:174 nc: 13 ncall:1.3e+05 eff:3.2% logz=-26898.94+/-0.15 dlogz:1054.882>0.1]4215it [10:57,  4.63it/s, bound:176 nc:  5 ncall:1.3e+05 eff:3.2% logz=-26890.34+/-0.16 dlogz:1275.950>0.1]4246it [11:03,  4.70it/s, bound:178 nc:  4 ncall:1.3e+05 eff:3.2% logz=-26883.12+/-0.16 dlogz:1268.944>0.1]4277it [11:09,  4.75it/s, bound:180 nc: 20 ncall:1.3e+05 eff:3.2% logz=-26874.85+/-0.16 dlogz:1260.482>0.1]4308it [11:16,  4.76it/s, bound:182 nc: 20 ncall:1.3e+05 eff:3.2% logz=-26865.86+/-0.16 dlogz:1251.367>0.1]4338it [11:23,  4.67it/s, bound:184 nc: 11 ncall:1.4e+05 eff:3.2% logz=-26857.43+/-0.16 dlogz:1242.872>0.1]4369it [11:29,  4.67it/s, bound:186 nc: 28 ncall:1.4e+05 eff:3.2% logz=-26847.71+/-0.16 dlogz:1233.062>0.1]4398it [11:36,  4.68it/s, bound:188 nc: 12 ncall:1.4e+05 eff:3.2% logz=-26837.90+/-0.16 dlogz:1223.274>0.1]4426it [11:42,  4.60it/s, bound:190 nc:  9 ncall:1.4e+05 eff:3.2% logz=-26828.88+/-0.16 dlogz:1214.111>0.1]4454it [11:48,  4.55it/s, bound:192 nc:  3 ncall:1.4e+05 eff:3.2% logz=-26820.48+/-0.16 dlogz:1205.752>0.1]4480it [11:54,  4.48it/s, bound:194 nc:  4 ncall:1.4e+05 eff:3.2% logz=-26808.38+/-0.16 dlogz:1193.772>0.1]4510it [12:01,  4.55it/s, bound:195 nc: 10 ncall:1.4e+05 eff:3.1% logz=-26796.06+/-0.16 dlogz:1181.163>0.1]4539it [12:07,  4.54it/s, bound:198 nc:  5 ncall:1.4e+05 eff:3.1% logz=-26787.43+/-0.16 dlogz:1282.470>0.1]4570it [12:13,  4.68it/s, bound:200 nc: 17 ncall:1.5e+05 eff:3.1% logz=-26778.60+/-0.16 dlogz:1273.721>0.1]4600it [12:20,  4.64it/s, bound:202 nc: 11 ncall:1.5e+05 eff:3.1% logz=-26768.43+/-0.16 dlogz:1263.276>0.1]4631it [12:26,  4.80it/s, bound:204 nc:  7 ncall:1.5e+05 eff:3.1% logz=-26757.64+/-0.16 dlogz:1252.640>0.1]4660it [12:32,  4.77it/s, bound:205 nc: 33 ncall:1.5e+05 eff:3.1% logz=-26744.80+/-0.17 dlogz:1239.897>0.1]4685it [12:38,  4.51it/s, bound:207 nc: 11 ncall:1.5e+05 eff:3.1% logz=-26734.68+/-0.16 dlogz:1229.386>0.1]4715it [12:45,  4.54it/s, bound:209 nc:  8 ncall:1.5e+05 eff:3.1% logz=-26721.45+/-0.17 dlogz:1216.253>0.1]4745it [12:51,  4.64it/s, bound:212 nc: 13 ncall:1.5e+05 eff:3.1% logz=-26707.19+/-0.16 dlogz:1201.736>0.1]4774it [12:57,  4.66it/s, bound:214 nc: 10 ncall:1.5e+05 eff:3.1% logz=-26697.76+/-0.16 dlogz:1192.399>0.1]4803it [13:03,  4.65it/s, bound:216 nc: 31 ncall:1.6e+05 eff:3.1% logz=-26687.45+/-0.17 dlogz:1182.101>0.1]4827it [13:09,  4.44it/s, bound:218 nc: 13 ncall:1.6e+05 eff:3.1% logz=-26677.20+/-0.17 dlogz:1171.685>0.1]4857it [13:16,  4.51it/s, bound:219 nc:  8 ncall:1.6e+05 eff:3.1% logz=-26665.15+/-0.17 dlogz:1159.648>0.1]4886it [13:23,  4.41it/s, bound:222 nc:  3 ncall:1.6e+05 eff:3.1% logz=-26655.49+/-0.17 dlogz:1149.919>0.1]4918it [13:29,  4.57it/s, bound:224 nc: 14 ncall:1.6e+05 eff:3.0% logz=-26639.52+/-0.17 dlogz:1133.980>0.1]4948it [13:36,  4.58it/s, bound:226 nc: 17 ncall:1.6e+05 eff:3.0% logz=-26626.90+/-0.17 dlogz:1121.690>0.1]4975it [13:42,  4.41it/s, bound:228 nc: 27 ncall:1.6e+05 eff:3.0% logz=-26613.90+/-0.17 dlogz:1108.195>0.1]5004it [13:49,  4.48it/s, bound:230 nc: 12 ncall:1.7e+05 eff:3.0% logz=-26602.30+/-0.17 dlogz:1096.590>0.1]5031it [13:55,  4.42it/s, bound:232 nc:  5 ncall:1.7e+05 eff:3.0% logz=-26590.21+/-0.17 dlogz:1084.514>0.1]5059it [14:02,  4.37it/s, bound:234 nc: 15 ncall:1.7e+05 eff:3.0% logz=-26574.77+/-0.17 dlogz:1068.818>0.1]5086it [14:08,  4.40it/s, bound:236 nc:  9 ncall:1.7e+05 eff:3.0% logz=-26563.96+/-0.17 dlogz:1390.494>0.1]5115it [14:14,  4.42it/s, bound:237 nc: 14 ncall:1.7e+05 eff:3.0% logz=-26550.92+/-0.17 dlogz:1377.352>0.1]5143it [14:21,  4.34it/s, bound:240 nc: 16 ncall:1.7e+05 eff:3.0% logz=-26537.46+/-0.17 dlogz:1364.079>0.1]5171it [14:27,  4.30it/s, bound:242 nc: 16 ncall:1.7e+05 eff:3.0% logz=-26522.54+/-0.18 dlogz:1349.575>0.1]5198it [14:34,  4.20it/s, bound:244 nc:  4 ncall:1.7e+05 eff:3.0% logz=-26509.05+/-0.17 dlogz:1335.416>0.1]5227it [14:41,  4.26it/s, bound:246 nc:  3 ncall:1.8e+05 eff:3.0% logz=-26499.46+/-0.17 dlogz:1325.783>0.1]5255it [14:47,  4.27it/s, bound:247 nc:295 ncall:1.8e+05 eff:3.0% logz=-26487.27+/-0.17 dlogz:1313.603>0.1]5284it [14:54,  4.27it/s, bound:250 nc:  6 ncall:1.8e+05 eff:3.0% logz=-26471.59+/-0.17 dlogz:1297.653>0.1]5310it [15:01,  4.22it/s, bound:252 nc:  5 ncall:1.8e+05 eff:3.0% logz=-26462.17+/-0.17 dlogz:1288.106>0.1]5340it [15:07,  4.33it/s, bound:254 nc:  8 ncall:1.8e+05 eff:2.9% logz=-26447.36+/-0.17 dlogz:1273.284>0.1]5367it [15:14,  4.24it/s, bound:256 nc: 17 ncall:1.8e+05 eff:2.9% logz=-26436.25+/-0.17 dlogz:1262.468>0.1]5395it [15:21,  4.21it/s, bound:258 nc:  6 ncall:1.8e+05 eff:2.9% logz=-26426.51+/-0.17 dlogz:1252.344>0.1]5421it [15:29,  3.84it/s, bound:260 nc: 43 ncall:1.9e+05 eff:2.9% logz=-26416.58+/-0.17 dlogz:1242.538>0.1]5446it [15:36,  3.72it/s, bound:262 nc:  5 ncall:1.9e+05 eff:2.9% logz=-26406.32+/-0.17 dlogz:1232.039>0.1]5476it [15:43,  3.89it/s, bound:264 nc: 14 ncall:1.9e+05 eff:2.9% logz=-26397.51+/-0.17 dlogz:1223.190>0.1]5502it [15:50,  3.80it/s, bound:266 nc:  7 ncall:1.9e+05 eff:2.9% logz=-26384.93+/-0.18 dlogz:1210.846>0.1]5530it [15:57,  3.87it/s, bound:268 nc: 15 ncall:1.9e+05 eff:2.9% logz=-26373.44+/-0.18 dlogz:1199.202>0.1]5556it [16:04,  3.82it/s, bound:270 nc: 29 ncall:1.9e+05 eff:2.9% logz=-26360.22+/-0.18 dlogz:1186.066>0.1]5581it [16:11,  3.77it/s, bound:272 nc: 13 ncall:1.9e+05 eff:2.9% logz=-26347.16+/-0.18 dlogz:1172.820>0.1]5611it [16:18,  3.99it/s, bound:274 nc: 56 ncall:1.9e+05 eff:2.9% logz=-26334.40+/-0.17 dlogz:1159.833>0.1]5636it [16:25,  3.84it/s, bound:275 nc: 28 ncall:2.0e+05 eff:2.9% logz=-26325.07+/-0.18 dlogz:1150.560>0.1]5664it [16:32,  3.88it/s, bound:278 nc: 77 ncall:2.0e+05 eff:2.9% logz=-26314.82+/-0.18 dlogz:1140.072>0.1]5689it [16:39,  3.84it/s, bound:280 nc: 12 ncall:2.0e+05 eff:2.9% logz=-26305.19+/-0.18 dlogz:1131.282>0.1]5714it [16:45,  3.78it/s, bound:282 nc:  6 ncall:2.0e+05 eff:2.9% logz=-26294.72+/-0.18 dlogz:1120.071>0.1]5740it [16:53,  3.74it/s, bound:284 nc:  9 ncall:2.0e+05 eff:2.8% logz=-26281.91+/-0.11 dlogz:1107.296>0.1]5769it [17:00,  3.81it/s, bound:286 nc:  6 ncall:2.0e+05 eff:2.8% logz=-26267.07+/-0.18 dlogz:1092.193>0.1]5796it [17:07,  3.83it/s, bound:288 nc: 13 ncall:2.0e+05 eff:2.8% logz=-26254.07+/-0.18 dlogz:1317.280>0.1]5825it [17:13,  4.07it/s, bound:290 nc: 12 ncall:2.1e+05 eff:2.8% logz=-26242.78+/-0.18 dlogz:1306.033>0.1]5852it [17:20,  3.99it/s, bound:292 nc:  7 ncall:2.1e+05 eff:2.8% logz=-26230.90+/-0.18 dlogz:1294.341>0.1]5881it [17:27,  3.99it/s, bound:294 nc: 16 ncall:2.1e+05 eff:2.8% logz=-26216.88+/-0.18 dlogz:1280.135>0.1]5907it [17:35,  3.81it/s, bound:296 nc: 36 ncall:2.1e+05 eff:2.8% logz=-26200.29+/-0.18 dlogz:1263.615>0.1]5934it [17:42,  3.85it/s, bound:298 nc: 23 ncall:2.1e+05 eff:2.8% logz=-26188.45+/-0.18 dlogz:1251.354>0.1]5958it [17:49,  3.72it/s, bound:300 nc: 47 ncall:2.1e+05 eff:2.8% logz=-26177.22+/-0.18 dlogz:1240.713>0.1]5985it [17:56,  3.76it/s, bound:302 nc:  9 ncall:2.1e+05 eff:2.8% logz=-26160.98+/-0.18 dlogz:1224.066>0.1]6014it [18:03,  3.86it/s, bound:305 nc: 33 ncall:2.2e+05 eff:2.8% logz=-26147.13+/-0.18 dlogz:1210.331>0.1]6041it [18:10,  3.86it/s, bound:307 nc: 41 ncall:2.2e+05 eff:2.8% logz=-26137.61+/-0.18 dlogz:1200.559>0.1]6066it [18:16,  3.89it/s, bound:309 nc: 28 ncall:2.2e+05 eff:2.8% logz=-26124.37+/-0.18 dlogz:1187.132>0.1]6089it [18:23,  3.67it/s, bound:311 nc: 20 ncall:2.2e+05 eff:2.8% logz=-26112.99+/-0.18 dlogz:1175.678>0.1]6112it [18:31,  3.52it/s, bound:313 nc: 32 ncall:2.2e+05 eff:2.8% logz=-26103.47+/-0.18 dlogz:1166.219>0.1]6134it [18:39,  3.28it/s, bound:315 nc:114 ncall:2.2e+05 eff:2.7% logz=-26093.10+/-0.18 dlogz:1155.919>0.1]6160it [18:46,  3.41it/s, bound:317 nc: 11 ncall:2.2e+05 eff:2.7% logz=-26081.13+/-0.18 dlogz:1446.926>0.1]6186it [18:52,  3.55it/s, bound:319 nc: 34 ncall:2.3e+05 eff:2.7% logz=-26068.38+/-0.19 dlogz:1434.812>0.1]6212it [19:00,  3.55it/s, bound:322 nc: 32 ncall:2.3e+05 eff:2.7% logz=-26058.99+/-0.18 dlogz:1453.987>0.1]6237it [19:07,  3.53it/s, bound:324 nc: 41 ncall:2.3e+05 eff:2.7% logz=-26046.55+/-0.10 dlogz:1441.616>0.1]6262it [19:14,  3.54it/s, bound:326 nc: 35 ncall:2.3e+05 eff:2.7% logz=-26035.63+/-0.18 dlogz:1430.700>0.1]6285it [19:20,  3.57it/s, bound:328 nc:  8 ncall:2.3e+05 eff:2.7% logz=-26025.39+/-0.19 dlogz:1420.596>0.1]6315it [19:28,  3.67it/s, bound:330 nc:  7 ncall:2.3e+05 eff:2.7% logz=-26012.24+/-0.18 dlogz:1407.279>0.1]6337it [19:35,  3.46it/s, bound:333 nc: 62 ncall:2.3e+05 eff:2.7% logz=-26003.11+/-0.19 dlogz:1398.047>0.1]6361it [19:43,  3.32it/s, bound:335 nc: 11 ncall:2.4e+05 eff:2.7% logz=-25993.52+/-0.18 dlogz:1388.360>0.1]6390it [19:50,  3.58it/s, bound:337 nc:  8 ncall:2.4e+05 eff:2.7% logz=-25982.92+/-0.18 dlogz:1377.582>0.1]6418it [19:58,  3.58it/s, bound:340 nc: 46 ncall:2.4e+05 eff:2.7% logz=-25971.31+/-0.19 dlogz:1366.472>0.1]6442it [20:05,  3.52it/s, bound:342 nc: 55 ncall:2.4e+05 eff:2.7% logz=-25957.47+/-0.19 dlogz:1352.126>0.1]6464it [20:12,  3.36it/s, bound:344 nc: 10 ncall:2.4e+05 eff:2.7% logz=-25952.17+/-0.18 dlogz:1346.596>0.1]15:32 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
6470it [20:15,  3.15it/s, bound:345 nc: 40 ncall:2.4e+05 eff:2.7% logz=-25950.44+/-0.11 dlogz:1345.086>0.1]6492it [20:23,  3.09it/s, bound:347 nc:  8 ncall:2.4e+05 eff:2.7% logz=-25940.44+/-0.19 dlogz:1335.145>0.1]6510it [20:30,  2.88it/s, bound:349 nc: 32 ncall:2.5e+05 eff:2.7% logz=-25934.13+/-0.18 dlogz:1334.743>0.1]6530it [20:38,  2.79it/s, bound:351 nc: 12 ncall:2.5e+05 eff:2.6% logz=-25924.16+/-0.19 dlogz:1324.824>0.1]6555it [20:45,  2.98it/s, bound:354 nc: 65 ncall:2.5e+05 eff:2.6% logz=-25911.62+/-0.19 dlogz:1312.760>0.1]6573it [20:53,  2.76it/s, bound:356 nc: 34 ncall:2.5e+05 eff:2.6% logz=-25902.91+/-0.19 dlogz:1303.673>0.1]6597it [21:01,  2.79it/s, bound:358 nc: 66 ncall:2.5e+05 eff:2.6% logz=-25889.26+/-0.19 dlogz:1290.565>0.1]6621it [21:10,  2.82it/s, bound:361 nc: 74 ncall:2.5e+05 eff:2.6% logz=-25881.43+/-0.19 dlogz:1281.863>0.1]6646it [21:18,  2.86it/s, bound:363 nc: 22 ncall:2.5e+05 eff:2.6% logz=-25871.52+/-0.19 dlogz:1272.036>0.1]6673it [21:26,  3.04it/s, bound:366 nc: 42 ncall:2.6e+05 eff:2.6% logz=-25861.51+/-0.15 dlogz:1261.844>0.1]6694it [21:35,  2.83it/s, bound:368 nc: 69 ncall:2.6e+05 eff:2.6% logz=-25852.12+/-0.19 dlogz:1252.425>0.1]6715it [21:43,  2.76it/s, bound:371 nc: 11 ncall:2.6e+05 eff:2.6% logz=-25841.55+/-0.19 dlogz:1241.933>0.1]6736it [21:51,  2.70it/s, bound:373 nc: 95 ncall:2.6e+05 eff:2.6% logz=-25830.78+/-0.19 dlogz:1231.111>0.1]6760it [21:58,  2.84it/s, bound:376 nc: 58 ncall:2.6e+05 eff:2.6% logz=-25821.63+/-0.19 dlogz:1441.415>0.1]6784it [22:07,  2.82it/s, bound:378 nc:  4 ncall:2.6e+05 eff:2.6% logz=-25809.07+/-0.19 dlogz:1428.597>0.1]6809it [22:15,  2.90it/s, bound:381 nc: 22 ncall:2.7e+05 eff:2.6% logz=-25795.09+/-0.19 dlogz:1414.718>0.1]6831it [22:23,  2.90it/s, bound:383 nc: 13 ncall:2.7e+05 eff:2.6% logz=-25785.19+/-0.19 dlogz:1404.707>0.1]6855it [22:31,  2.89it/s, bound:385 nc: 48 ncall:2.7e+05 eff:2.5% logz=-25771.10+/-0.12 dlogz:1390.669>0.1]6883it [22:40,  2.94it/s, bound:388 nc: 52 ncall:2.7e+05 eff:2.5% logz=-25758.86+/-0.19 dlogz:1378.324>0.1]6904it [22:49,  2.81it/s, bound:391 nc: 11 ncall:2.7e+05 eff:2.5% logz=-25750.64+/-0.19 dlogz:1369.899>0.1]6926it [22:57,  2.73it/s, bound:393 nc: 54 ncall:2.7e+05 eff:2.5% logz=-25739.63+/-0.19 dlogz:1358.803>0.1]6948it [23:06,  2.70it/s, bound:396 nc: 85 ncall:2.8e+05 eff:2.5% logz=-25729.33+/-0.19 dlogz:1348.450>0.1]6968it [23:14,  2.59it/s, bound:398 nc:  9 ncall:2.8e+05 eff:2.5% logz=-25723.52+/-0.19 dlogz:1342.639>0.1]6991it [23:22,  2.68it/s, bound:401 nc: 27 ncall:2.8e+05 eff:2.5% logz=-25712.02+/-0.19 dlogz:1331.137>0.1]7012it [23:31,  2.61it/s, bound:403 nc: 11 ncall:2.8e+05 eff:2.5% logz=-25705.36+/-0.19 dlogz:1324.604>0.1]7036it [23:39,  2.68it/s, bound:406 nc: 19 ncall:2.8e+05 eff:2.5% logz=-25695.21+/-0.13 dlogz:1314.207>0.1]7062it [23:48,  2.81it/s, bound:408 nc: 11 ncall:2.8e+05 eff:2.5% logz=-25685.94+/-0.19 dlogz:1382.218>0.1]7084it [23:56,  2.72it/s, bound:411 nc:  9 ncall:2.9e+05 eff:2.5% logz=-25678.14+/-0.19 dlogz:1374.071>0.1]7108it [24:05,  2.74it/s, bound:413 nc: 62 ncall:2.9e+05 eff:2.5% logz=-25667.63+/-0.19 dlogz:1363.585>0.1]7133it [24:15,  2.69it/s, bound:416 nc:  9 ncall:2.9e+05 eff:2.5% logz=-25657.68+/-0.19 dlogz:1353.717>0.1]7157it [24:23,  2.70it/s, bound:419 nc: 43 ncall:2.9e+05 eff:2.5% logz=-25650.51+/-0.19 dlogz:1346.327>0.1]7179it [24:33,  2.61it/s, bound:422 nc: 40 ncall:2.9e+05 eff:2.4% logz=-25641.34+/-0.19 dlogz:1337.235>0.1]7201it [24:42,  2.55it/s, bound:424 nc: 13 ncall:3.0e+05 eff:2.4% logz=-25632.77+/-0.19 dlogz:1328.668>0.1]7226it [24:50,  2.64it/s, bound:427 nc: 41 ncall:3.0e+05 eff:2.4% logz=-25615.80+/-0.20 dlogz:1311.778>0.1]7248it [24:59,  2.59it/s, bound:430 nc: 63 ncall:3.0e+05 eff:2.4% logz=-25605.32+/-0.19 dlogz:1301.003>0.1]7268it [25:08,  2.48it/s, bound:433 nc: 23 ncall:3.0e+05 eff:2.4% logz=-25598.51+/-0.19 dlogz:1294.098>0.1]7291it [25:17,  2.50it/s, bound:435 nc:341 ncall:3.0e+05 eff:2.4% logz=-25590.54+/-0.19 dlogz:1286.213>0.1]7310it [25:27,  2.35it/s, bound:438 nc: 65 ncall:3.0e+05 eff:2.4% logz=-25579.99+/-0.20 dlogz:1275.779>0.1]7330it [25:36,  2.29it/s, bound:441 nc: 43 ncall:3.1e+05 eff:2.4% logz=-25572.78+/-0.19 dlogz:1268.422>0.1]7348it [25:46,  2.17it/s, bound:444 nc: 22 ncall:3.1e+05 eff:2.4% logz=-25564.13+/-0.20 dlogz:1259.850>0.1]7372it [25:55,  2.27it/s, bound:447 nc: 31 ncall:3.1e+05 eff:2.4% logz=-25554.01+/-0.19 dlogz:1249.730>0.1]7393it [26:04,  2.30it/s, bound:450 nc: 34 ncall:3.1e+05 eff:2.4% logz=-25542.45+/-0.19 dlogz:1237.846>0.1]7418it [26:14,  2.38it/s, bound:452 nc: 41 ncall:3.1e+05 eff:2.4% logz=-25532.55+/-0.20 dlogz:1228.117>0.1]7442it [26:24,  2.40it/s, bound:455 nc: 12 ncall:3.2e+05 eff:2.4% logz=-25522.83+/-0.19 dlogz:1218.075>0.1]7463it [26:34,  2.30it/s, bound:458 nc: 13 ncall:3.2e+05 eff:2.3% logz=-25514.94+/-0.19 dlogz:1210.098>0.1]7488it [26:43,  2.40it/s, bound:461 nc: 12 ncall:3.2e+05 eff:2.3% logz=-25505.84+/-0.20 dlogz:1201.079>0.1]7511it [26:54,  2.33it/s, bound:464 nc:337 ncall:3.2e+05 eff:2.3% logz=-25491.79+/-0.20 dlogz:1186.970>0.1]7531it [27:04,  2.18it/s, bound:468 nc: 14 ncall:3.2e+05 eff:2.3% logz=-25486.68+/-0.18 dlogz:1181.735>0.1]7558it [27:15,  2.30it/s, bound:471 nc: 77 ncall:3.3e+05 eff:2.3% logz=-25476.98+/-0.20 dlogz:1172.493>0.1]7577it [27:26,  2.13it/s, bound:474 nc: 24 ncall:3.3e+05 eff:2.3% logz=-25468.48+/-0.20 dlogz:1163.618>0.1]7595it [27:36,  2.03it/s, bound:477 nc: 81 ncall:3.3e+05 eff:2.3% logz=-25459.84+/-0.20 dlogz:1155.143>0.1]7613it [27:46,  1.96it/s, bound:480 nc: 39 ncall:3.3e+05 eff:2.3% logz=-25451.39+/-0.20 dlogz:1146.612>0.1]7637it [27:56,  2.08it/s, bound:483 nc: 99 ncall:3.3e+05 eff:2.3% logz=-25438.43+/-0.20 dlogz:1133.529>0.1]7658it [28:06,  2.07it/s, bound:486 nc: 44 ncall:3.4e+05 eff:2.3% logz=-25426.23+/-0.19 dlogz:1121.342>0.1]7680it [28:16,  2.10it/s, bound:489 nc: 29 ncall:3.4e+05 eff:2.3% logz=-25418.47+/-0.20 dlogz:1113.383>0.1]7702it [28:27,  2.08it/s, bound:492 nc: 17 ncall:3.4e+05 eff:2.3% logz=-25411.37+/-0.20 dlogz:1106.195>0.1]7725it [28:38,  2.11it/s, bound:495 nc: 21 ncall:3.4e+05 eff:2.3% logz=-25402.13+/-0.20 dlogz:1096.955>0.1]7745it [28:49,  2.01it/s, bound:498 nc:194 ncall:3.5e+05 eff:2.2% logz=-25393.83+/-0.20 dlogz:1088.576>0.1]7764it [29:00,  1.92it/s, bound:501 nc:208 ncall:3.5e+05 eff:2.2% logz=-25386.69+/-0.20 dlogz:1081.339>0.1]7785it [29:11,  1.92it/s, bound:504 nc:124 ncall:3.5e+05 eff:2.2% logz=-25377.21+/-0.10 dlogz:1071.893>0.1]7803it [29:22,  1.83it/s, bound:508 nc: 70 ncall:3.5e+05 eff:2.2% logz=-25373.27+/-0.19 dlogz:1067.733>0.1]7822it [29:33,  1.82it/s, bound:511 nc: 84 ncall:3.5e+05 eff:2.2% logz=-25367.94+/-0.20 dlogz:1062.548>0.1]7841it [29:43,  1.80it/s, bound:514 nc:102 ncall:3.6e+05 eff:2.2% logz=-25360.48+/-0.20 dlogz:1055.213>0.1]7861it [29:54,  1.82it/s, bound:518 nc: 11 ncall:3.6e+05 eff:2.2% logz=-25352.91+/-0.20 dlogz:1047.723>0.1]7881it [30:05,  1.82it/s, bound:520 nc:267 ncall:3.6e+05 eff:2.2% logz=-25344.66+/-0.20 dlogz:1039.115>0.1]7898it [30:16,  1.72it/s, bound:524 nc: 15 ncall:3.6e+05 eff:2.2% logz=-25335.33+/-0.20 dlogz:1029.877>0.1]15:42 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
7900it [30:20,  1.58it/s, bound:524 nc: 53 ncall:3.6e+05 eff:2.2% logz=-25334.54+/-0.11 dlogz:1029.047>0.1]7917it [30:31,  1.56it/s, bound:527 nc: 49 ncall:3.7e+05 eff:2.2% logz=-25326.76+/-0.20 dlogz:1021.122>0.1]7936it [30:43,  1.58it/s, bound:531 nc: 17 ncall:3.7e+05 eff:2.2% logz=-25320.50+/-0.20 dlogz:1014.857>0.1]7954it [30:53,  1.62it/s, bound:534 nc: 64 ncall:3.7e+05 eff:2.1% logz=-25310.98+/-0.20 dlogz:1005.775>0.1]7974it [31:05,  1.67it/s, bound:538 nc: 65 ncall:3.7e+05 eff:2.1% logz=-25300.87+/-0.20 dlogz:995.129>0.1] 7991it [31:16,  1.61it/s, bound:541 nc: 44 ncall:3.7e+05 eff:2.1% logz=-25293.37+/-0.20 dlogz:987.672>0.1]8012it [31:28,  1.66it/s, bound:544 nc: 13 ncall:3.8e+05 eff:2.1% logz=-25285.59+/-0.12 dlogz:979.957>0.1]8034it [31:40,  1.73it/s, bound:548 nc: 82 ncall:3.8e+05 eff:2.1% logz=-25272.81+/-0.20 dlogz:966.941>0.1]8051it [31:52,  1.64it/s, bound:551 nc:452 ncall:3.8e+05 eff:2.1% logz=-25267.72+/-0.20 dlogz:961.798>0.1]8071it [32:03,  1.66it/s, bound:555 nc: 14 ncall:3.8e+05 eff:2.1% logz=-25263.16+/-0.20 dlogz:957.230>0.1]8090it [32:15,  1.64it/s, bound:558 nc:156 ncall:3.9e+05 eff:2.1% logz=-25252.57+/-0.20 dlogz:946.915>0.1]8107it [32:28,  1.56it/s, bound:562 nc:165 ncall:3.9e+05 eff:2.1% logz=-25242.74+/-0.20 dlogz:936.820>0.1]8125it [32:39,  1.55it/s, bound:566 nc: 95 ncall:3.9e+05 eff:2.1% logz=-25234.45+/-0.20 dlogz:928.803>0.1]8146it [32:51,  1.62it/s, bound:569 nc: 52 ncall:3.9e+05 eff:2.1% logz=-25223.03+/-0.20 dlogz:917.061>0.1]8161it [33:04,  1.49it/s, bound:572 nc:312 ncall:4.0e+05 eff:2.1% logz=-25217.93+/-0.20 dlogz:911.841>0.1]8180it [33:17,  1.48it/s, bound:576 nc:311 ncall:4.0e+05 eff:2.0% logz=-25209.78+/-0.21 dlogz:904.862>0.1]8196it [33:29,  1.42it/s, bound:579 nc: 34 ncall:4.0e+05 eff:2.0% logz=-25200.75+/-0.20 dlogz:894.721>0.1]8217it [33:42,  1.48it/s, bound:583 nc:105 ncall:4.0e+05 eff:2.0% logz=-25189.64+/-0.11 dlogz:883.483>0.1]8236it [33:54,  1.50it/s, bound:587 nc: 74 ncall:4.1e+05 eff:2.0% logz=-25183.30+/-0.20 dlogz:876.944>0.1]8256it [34:07,  1.52it/s, bound:590 nc:171 ncall:4.1e+05 eff:2.0% logz=-25176.65+/-0.20 dlogz:870.478>0.1]8269it [34:20,  1.37it/s, bound:593 nc:393 ncall:4.1e+05 eff:2.0% logz=-25172.47+/-0.20 dlogz:866.203>0.1]8286it [34:34,  1.33it/s, bound:597 nc: 18 ncall:4.1e+05 eff:2.0% logz=-25166.36+/-0.20 dlogz:860.216>0.1]8304it [34:47,  1.33it/s, bound:601 nc:297 ncall:4.2e+05 eff:2.0% logz=-25159.92+/-0.21 dlogz:853.751>0.1]8318it [35:01,  1.24it/s, bound:605 nc: 48 ncall:4.2e+05 eff:2.0% logz=-25154.31+/-0.20 dlogz:847.907>0.1]8340it [35:14,  1.37it/s, bound:609 nc: 70 ncall:4.2e+05 eff:2.0% logz=-25146.75+/-0.20 dlogz:840.308>0.1]8358it [35:28,  1.35it/s, bound:612 nc: 13 ncall:4.3e+05 eff:2.0% logz=-25140.55+/-0.20 dlogz:834.104>0.1]8376it [35:41,  1.35it/s, bound:616 nc: 55 ncall:4.3e+05 eff:2.0% logz=-25129.62+/-0.21 dlogz:823.826>0.1]8395it [35:54,  1.37it/s, bound:620 nc: 68 ncall:4.3e+05 eff:1.9% logz=-25120.22+/-0.13 dlogz:813.855>0.1]8415it [36:08,  1.39it/s, bound:623 nc:516 ncall:4.3e+05 eff:1.9% logz=-25114.01+/-0.20 dlogz:807.250>0.1]8436it [36:22,  1.44it/s, bound:627 nc: 78 ncall:4.4e+05 eff:1.9% logz=-25106.27+/-0.21 dlogz:799.941>0.1]8454it [36:35,  1.40it/s, bound:631 nc: 33 ncall:4.4e+05 eff:1.9% logz=-25098.62+/-0.21 dlogz:858.661>0.1]8473it [36:49,  1.39it/s, bound:634 nc: 96 ncall:4.4e+05 eff:1.9% logz=-25090.05+/-0.21 dlogz:849.802>0.1]8488it [37:04,  1.27it/s, bound:638 nc: 57 ncall:4.5e+05 eff:1.9% logz=-25085.35+/-0.14 dlogz:844.881>0.1]8509it [37:18,  1.35it/s, bound:643 nc:118 ncall:4.5e+05 eff:1.9% logz=-25078.08+/-0.21 dlogz:837.644>0.1]8526it [37:32,  1.30it/s, bound:648 nc: 83 ncall:4.5e+05 eff:1.9% logz=-25072.10+/-0.21 dlogz:831.867>0.1]8543it [37:46,  1.28it/s, bound:652 nc:385 ncall:4.5e+05 eff:1.9% logz=-25064.39+/-0.21 dlogz:982.045>0.1]8558it [38:00,  1.22it/s, bound:656 nc: 22 ncall:4.6e+05 eff:1.9% logz=-25060.00+/-0.21 dlogz:977.459>0.1]8582it [38:15,  1.34it/s, bound:660 nc: 16 ncall:4.6e+05 eff:1.9% logz=-25049.91+/-0.21 dlogz:967.382>0.1]8603it [38:29,  1.39it/s, bound:664 nc: 83 ncall:4.6e+05 eff:1.9% logz=-25040.25+/-0.21 dlogz:957.525>0.1]8624it [38:43,  1.41it/s, bound:668 nc: 41 ncall:4.7e+05 eff:1.9% logz=-25033.21+/-0.21 dlogz:950.407>0.1]8641it [38:57,  1.34it/s, bound:672 nc:237 ncall:4.7e+05 eff:1.8% logz=-25029.95+/-0.20 dlogz:947.083>0.1]8657it [39:12,  1.26it/s, bound:676 nc: 41 ncall:4.7e+05 eff:1.8% logz=-25022.00+/-0.18 dlogz:940.238>0.1]8678it [39:27,  1.31it/s, bound:680 nc:105 ncall:4.7e+05 eff:1.8% logz=-25014.36+/-0.21 dlogz:931.495>0.1]8696it [39:42,  1.27it/s, bound:684 nc: 40 ncall:4.8e+05 eff:1.8% logz=-25006.44+/-0.21 dlogz:923.744>0.1]8713it [39:57,  1.23it/s, bound:688 nc:262 ncall:4.8e+05 eff:1.8% logz=-25000.51+/-0.21 dlogz:917.497>0.1]8728it [40:12,  1.17it/s, bound:692 nc:627 ncall:4.8e+05 eff:1.8% logz=-24996.34+/-0.21 dlogz:913.392>0.1]8747it [40:26,  1.21it/s, bound:697 nc:115 ncall:4.9e+05 eff:1.8% logz=-24989.42+/-0.20 dlogz:906.344>0.1]8768it [40:41,  1.26it/s, bound:701 nc:212 ncall:4.9e+05 eff:1.8% logz=-24983.33+/-0.21 dlogz:900.186>0.1]8785it [40:56,  1.23it/s, bound:705 nc: 89 ncall:4.9e+05 eff:1.8% logz=-24978.65+/-0.21 dlogz:895.575>0.1]8801it [41:11,  1.18it/s, bound:709 nc: 77 ncall:5.0e+05 eff:1.8% logz=-24972.98+/-0.21 dlogz:889.952>0.1]15:53 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
8814it [41:15,  1.40it/s, bound:712 nc:205 ncall:5.0e+05 eff:1.8% logz=-24970.00+/-0.10 dlogz:886.868>0.1]8816it [41:30,  1.05s/it, bound:713 nc: 93 ncall:5.0e+05 eff:1.8% logz=-24969.51+/-0.15 dlogz:886.335>0.1]8834it [41:45,  1.04it/s, bound:717 nc:167 ncall:5.0e+05 eff:1.8% logz=-24964.08+/-0.21 dlogz:880.956>0.1]8848it [42:00,  1.00s/it, bound:721 nc:169 ncall:5.0e+05 eff:1.8% logz=-24961.02+/-0.21 dlogz:877.921>0.1]8865it [42:15,  1.04it/s, bound:726 nc: 34 ncall:5.1e+05 eff:1.7% logz=-24954.50+/-0.21 dlogz:871.767>0.1]8882it [42:30,  1.07it/s, bound:730 nc:605 ncall:5.1e+05 eff:1.7% logz=-24949.91+/-0.21 dlogz:866.587>0.1]8897it [42:45,  1.05it/s, bound:735 nc:239 ncall:5.1e+05 eff:1.7% logz=-24944.88+/-0.21 dlogz:861.589>0.1]8908it [43:00,  1.06s/it, bound:739 nc: 44 ncall:5.2e+05 eff:1.7% logz=-24940.57+/-0.21 dlogz:857.493>0.1]8927it [43:16,  1.03it/s, bound:743 nc: 12 ncall:5.2e+05 eff:1.7% logz=-24934.04+/-0.21 dlogz:850.660>0.1]8948it [43:32,  1.13it/s, bound:748 nc: 87 ncall:5.2e+05 eff:1.7% logz=-24925.62+/-0.21 dlogz:842.154>0.1]8963it [43:48,  1.06it/s, bound:752 nc:267 ncall:5.3e+05 eff:1.7% logz=-24920.02+/-0.21 dlogz:837.094>0.1]8975it [44:03,  1.02s/it, bound:756 nc:514 ncall:5.3e+05 eff:1.7% logz=-24915.58+/-0.21 dlogz:832.103>0.1]8997it [44:19,  1.11it/s, bound:760 nc:434 ncall:5.3e+05 eff:1.7% logz=-24906.83+/-0.21 dlogz:823.222>0.1]9014it [44:35,  1.09it/s, bound:765 nc: 92 ncall:5.4e+05 eff:1.7% logz=-24902.54+/-0.21 dlogz:819.148>0.1]9030it [44:51,  1.06it/s, bound:769 nc:301 ncall:5.4e+05 eff:1.7% logz=-24898.04+/-0.16 dlogz:814.519>0.1]9046it [45:07,  1.04it/s, bound:774 nc:138 ncall:5.4e+05 eff:1.7% logz=-24893.69+/-0.21 dlogz:809.945>0.1]9062it [45:23,  1.04it/s, bound:778 nc: 15 ncall:5.5e+05 eff:1.7% logz=-24889.94+/-0.21 dlogz:806.304>0.1]9080it [45:38,  1.07it/s, bound:782 nc: 73 ncall:5.5e+05 eff:1.7% logz=-24883.54+/-0.21 dlogz:799.757>0.1]9096it [45:54,  1.05it/s, bound:786 nc:884 ncall:5.5e+05 eff:1.6% logz=-24880.07+/-0.08 dlogz:796.235>0.1]9107it [46:12,  1.09s/it, bound:790 nc:284 ncall:5.6e+05 eff:1.6% logz=-24877.72+/-0.20 dlogz:793.968>0.1]9121it [46:27,  1.10s/it, bound:794 nc: 32 ncall:5.6e+05 eff:1.6% logz=-24873.40+/-0.21 dlogz:789.686>0.1]9140it [46:43,  1.00s/it, bound:798 nc:151 ncall:5.6e+05 eff:1.6% logz=-24868.25+/-0.21 dlogz:784.482>0.1]9155it [47:00,  1.03s/it, bound:802 nc:514 ncall:5.7e+05 eff:1.6% logz=-24865.32+/-0.21 dlogz:781.467>0.1]9169it [47:15,  1.06s/it, bound:807 nc: 34 ncall:5.7e+05 eff:1.6% logz=-24858.55+/-0.21 dlogz:774.605>0.1]9188it [47:32,  1.00s/it, bound:811 nc: 53 ncall:5.7e+05 eff:1.6% logz=-24853.53+/-0.21 dlogz:769.642>0.1]9207it [47:49,  1.05it/s, bound:816 nc: 61 ncall:5.8e+05 eff:1.6% logz=-24849.45+/-0.21 dlogz:765.380>0.1]9227it [48:05,  1.10it/s, bound:820 nc:362 ncall:5.8e+05 eff:1.6% logz=-24843.92+/-0.08 dlogz:759.819>0.1]9240it [48:22,  1.00it/s, bound:824 nc: 43 ncall:5.8e+05 eff:1.6% logz=-24840.69+/-0.21 dlogz:756.747>0.1]9260it [48:37,  1.09it/s, bound:829 nc: 19 ncall:5.9e+05 eff:1.6% logz=-24829.49+/-0.21 dlogz:745.599>0.1]9276it [48:53,  1.06it/s, bound:833 nc: 59 ncall:5.9e+05 eff:1.6% logz=-24825.32+/-0.21 dlogz:741.169>0.1]9294it [49:09,  1.07it/s, bound:837 nc:580 ncall:5.9e+05 eff:1.6% logz=-24820.67+/-0.21 dlogz:736.710>0.1]9309it [49:26,  1.02it/s, bound:842 nc:173 ncall:6.0e+05 eff:1.6% logz=-24814.43+/-0.21 dlogz:730.229>0.1]9323it [49:44,  1.06s/it, bound:846 nc:217 ncall:6.0e+05 eff:1.6% logz=-24811.65+/-0.21 dlogz:727.356>0.1]9339it [50:01,  1.06s/it, bound:852 nc: 44 ncall:6.0e+05 eff:1.5% logz=-24808.04+/-0.21 dlogz:723.804>0.1]9359it [50:18,  1.02it/s, bound:856 nc: 18 ncall:6.1e+05 eff:1.5% logz=-24799.27+/-0.13 dlogz:715.226>0.1]9378it [50:34,  1.06it/s, bound:862 nc:298 ncall:6.1e+05 eff:1.5% logz=-24793.39+/-0.21 dlogz:709.209>0.1]9395it [50:52,  1.03it/s, bound:866 nc:112 ncall:6.1e+05 eff:1.5% logz=-24788.98+/-0.21 dlogz:704.561>0.1]9412it [51:09,  1.02it/s, bound:871 nc: 95 ncall:6.2e+05 eff:1.5% logz=-24785.83+/-0.21 dlogz:701.484>0.1]9425it [51:26,  1.06s/it, bound:875 nc:440 ncall:6.2e+05 eff:1.5% logz=-24782.28+/-0.15 dlogz:698.049>0.1]9441it [51:44,  1.09s/it, bound:880 nc: 38 ncall:6.2e+05 eff:1.5% logz=-24775.87+/-0.22 dlogz:691.985>0.1]9459it [52:02,  1.05s/it, bound:885 nc: 24 ncall:6.3e+05 eff:1.5% logz=-24770.05+/-0.21 dlogz:685.557>0.1]9482it [52:19,  1.07it/s, bound:890 nc: 97 ncall:6.3e+05 eff:1.5% logz=-24765.18+/-0.21 dlogz:680.569>0.1]16:04 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
9494it [52:23,  1.23it/s, bound:892 nc:280 ncall:6.3e+05 eff:1.5% logz=-24763.07+/-0.09 dlogz:678.517>0.1]9499it [52:42,  1.14s/it, bound:894 nc:175 ncall:6.4e+05 eff:1.5% logz=-24760.74+/-0.21 dlogz:676.491>0.1]9517it [52:59,  1.07s/it, bound:899 nc: 20 ncall:6.4e+05 eff:1.5% logz=-24754.56+/-0.21 dlogz:669.981>0.1]9536it [53:17,  1.02s/it, bound:903 nc: 97 ncall:6.4e+05 eff:1.5% logz=-24749.66+/-0.21 dlogz:664.969>0.1]9554it [53:35,  1.02s/it, bound:908 nc: 93 ncall:6.5e+05 eff:1.5% logz=-24743.54+/-0.22 dlogz:659.019>0.1]9575it [53:53,  1.03it/s, bound:913 nc:445 ncall:6.5e+05 eff:1.5% logz=-24737.04+/-0.21 dlogz:652.433>0.1]9588it [54:12,  1.09s/it, bound:918 nc:211 ncall:6.5e+05 eff:1.5% logz=-24730.11+/-0.22 dlogz:645.513>0.1]9605it [54:30,  1.07s/it, bound:923 nc:532 ncall:6.6e+05 eff:1.5% logz=-24724.27+/-0.22 dlogz:639.597>0.1]9620it [54:48,  1.10s/it, bound:929 nc: 15 ncall:6.6e+05 eff:1.5% logz=-24720.23+/-0.11 dlogz:635.355>0.1]9639it [55:07,  1.06s/it, bound:933 nc:110 ncall:6.6e+05 eff:1.5% logz=-24716.25+/-0.21 dlogz:631.429>0.1]9659it [55:25,  1.02s/it, bound:939 nc:406 ncall:6.7e+05 eff:1.4% logz=-24711.09+/-0.21 dlogz:626.150>0.1]9675it [55:43,  1.05s/it, bound:944 nc: 80 ncall:6.7e+05 eff:1.4% logz=-24708.40+/-0.22 dlogz:623.708>0.1]9688it [56:01,  1.12s/it, bound:948 nc:243 ncall:6.8e+05 eff:1.4% logz=-24702.68+/-0.21 dlogz:617.796>0.1]9703it [56:18,  1.13s/it, bound:953 nc:193 ncall:6.8e+05 eff:1.4% logz=-24697.92+/-0.22 dlogz:613.377>0.1]9723it [56:37,  1.06s/it, bound:958 nc:151 ncall:6.8e+05 eff:1.4% logz=-24692.22+/-0.22 dlogz:607.197>0.1]9741it [56:55,  1.06s/it, bound:964 nc:237 ncall:6.9e+05 eff:1.4% logz=-24687.95+/-0.22 dlogz:602.975>0.1]9758it [57:13,  1.06s/it, bound:968 nc: 46 ncall:6.9e+05 eff:1.4% logz=-24684.82+/-0.21 dlogz:599.797>0.1]9780it [57:32,  1.02it/s, bound:974 nc: 53 ncall:6.9e+05 eff:1.4% logz=-24678.07+/-0.22 dlogz:593.469>0.1]9801it [57:50,  1.06it/s, bound:979 nc: 67 ncall:7.0e+05 eff:1.4% logz=-24670.93+/-0.22 dlogz:585.861>0.1]9817it [58:10,  1.02s/it, bound:984 nc:213 ncall:7.0e+05 eff:1.4% logz=-24662.61+/-0.18 dlogz:577.647>0.1]9839it [58:27,  1.06it/s, bound:989 nc: 68 ncall:7.1e+05 eff:1.4% logz=-24655.77+/-0.22 dlogz:570.532>0.1]9863it [58:46,  1.13it/s, bound:995 nc: 44 ncall:7.1e+05 eff:1.4% logz=-24649.00+/-0.22 dlogz:563.710>0.1]9888it [59:04,  1.20it/s, bound:1000 nc: 54 ncall:7.1e+05 eff:1.4% logz=-24646.25+/-0.21 dlogz:560.777>0.1]9914it [59:24,  1.23it/s, bound:1006 nc: 17 ncall:7.2e+05 eff:1.4% logz=-24639.97+/-0.21 dlogz:554.511>0.1]9939it [59:44,  1.24it/s, bound:1011 nc: 40 ncall:7.2e+05 eff:1.4% logz=-24634.36+/-0.22 dlogz:548.869>0.1]9962it [1:00:03,  1.24it/s, bound:1017 nc: 18 ncall:7.3e+05 eff:1.4% logz=-24629.20+/-0.22 dlogz:608.960>0.1]9986it [1:00:22,  1.24it/s, bound:1023 nc: 26 ncall:7.3e+05 eff:1.4% logz=-24622.50+/-0.19 dlogz:602.413>0.1]10009it [1:00:42,  1.22it/s, bound:1028 nc: 58 ncall:7.3e+05 eff:1.4% logz=-24617.51+/-0.22 dlogz:597.117>0.1]10030it [1:01:01,  1.17it/s, bound:1034 nc: 69 ncall:7.4e+05 eff:1.4% logz=-24613.39+/-0.22 dlogz:593.143>0.1]10056it [1:01:21,  1.22it/s, bound:1040 nc:159 ncall:7.4e+05 eff:1.4% logz=-24605.78+/-0.22 dlogz:585.288>0.1]10078it [1:01:42,  1.16it/s, bound:1046 nc:119 ncall:7.5e+05 eff:1.4% logz=-24598.15+/-0.22 dlogz:577.780>0.1]10102it [1:02:03,  1.17it/s, bound:1051 nc: 23 ncall:7.5e+05 eff:1.3% logz=-24591.11+/-0.22 dlogz:570.569>0.1]10125it [1:02:23,  1.15it/s, bound:1057 nc:231 ncall:7.5e+05 eff:1.3% logz=-24584.18+/-0.22 dlogz:563.532>0.1]10145it [1:02:42,  1.12it/s, bound:1062 nc: 20 ncall:7.6e+05 eff:1.3% logz=-24578.58+/-0.22 dlogz:558.010>0.1]10170it [1:03:03,  1.15it/s, bound:1068 nc: 48 ncall:7.6e+05 eff:1.3% logz=-24571.63+/-0.22 dlogz:550.936>0.1]10196it [1:03:22,  1.20it/s, bound:1074 nc:231 ncall:7.7e+05 eff:1.3% logz=-24567.00+/-0.22 dlogz:546.202>0.1]16:15 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
10211it [1:03:27,  1.39it/s, bound:1076 nc:130 ncall:7.7e+05 eff:1.3% logz=-24562.88+/-0.08 dlogz:542.058>0.1]10220it [1:03:47,  1.05it/s, bound:1079 nc: 95 ncall:7.7e+05 eff:1.3% logz=-24559.75+/-0.22 dlogz:539.161>0.1]10245it [1:04:08,  1.11it/s, bound:1085 nc: 67 ncall:7.7e+05 eff:1.3% logz=-24549.42+/-0.22 dlogz:528.809>0.1]10273it [1:04:28,  1.20it/s, bound:1090 nc:  7 ncall:7.8e+05 eff:1.3% logz=-24544.26+/-0.22 dlogz:523.360>0.1]10300it [1:04:48,  1.24it/s, bound:1096 nc: 51 ncall:7.8e+05 eff:1.3% logz=-24530.91+/-0.21 dlogz:509.972>0.1]10325it [1:05:08,  1.24it/s, bound:1102 nc: 65 ncall:7.9e+05 eff:1.3% logz=-24526.12+/-0.22 dlogz:505.230>0.1]10354it [1:05:30,  1.28it/s, bound:1109 nc:125 ncall:7.9e+05 eff:1.3% logz=-24515.87+/-0.22 dlogz:494.744>0.1]10381it [1:05:50,  1.29it/s, bound:1115 nc:276 ncall:8.0e+05 eff:1.3% logz=-24507.91+/-0.07 dlogz:486.712>0.1]10405it [1:06:12,  1.23it/s, bound:1120 nc:102 ncall:8.0e+05 eff:1.3% logz=-24500.08+/-0.22 dlogz:546.929>0.1]10432it [1:06:36,  1.19it/s, bound:1127 nc:120 ncall:8.0e+05 eff:1.3% logz=-24495.69+/-0.22 dlogz:542.423>0.1]10458it [1:06:57,  1.21it/s, bound:1134 nc: 67 ncall:8.1e+05 eff:1.3% logz=-24491.71+/-0.17 dlogz:539.035>0.1]10487it [1:07:20,  1.23it/s, bound:1140 nc: 21 ncall:8.1e+05 eff:1.3% logz=-24486.06+/-0.22 dlogz:532.671>0.1]10516it [1:07:43,  1.23it/s, bound:1147 nc: 29 ncall:8.2e+05 eff:1.3% logz=-24477.54+/-0.22 dlogz:524.246>0.1]10542it [1:08:08,  1.18it/s, bound:1153 nc: 20 ncall:8.2e+05 eff:1.3% logz=-24469.18+/-0.14 dlogz:516.058>0.1]10570it [1:08:35,  1.12it/s, bound:1160 nc: 35 ncall:8.3e+05 eff:1.3% logz=-24464.11+/-0.23 dlogz:511.208>0.1]10598it [1:09:03,  1.08it/s, bound:1167 nc: 47 ncall:8.3e+05 eff:1.3% logz=-24451.57+/-0.23 dlogz:498.211>0.1]10626it [1:09:33,  1.04it/s, bound:1173 nc: 27 ncall:8.4e+05 eff:1.3% logz=-24444.10+/-0.09 dlogz:490.493>0.1]10658it [1:10:02,  1.06it/s, bound:1181 nc: 27 ncall:8.4e+05 eff:1.3% logz=-24439.30+/-0.22 dlogz:485.579>0.1]10688it [1:10:31,  1.05it/s, bound:1187 nc: 71 ncall:8.5e+05 eff:1.3% logz=-24432.38+/-0.22 dlogz:478.578>0.1]10716it [1:11:01,  1.01it/s, bound:1194 nc:103 ncall:8.5e+05 eff:1.3% logz=-24421.29+/-0.22 dlogz:468.840>0.1]10743it [1:11:29,  1.01s/it, bound:1201 nc: 68 ncall:8.6e+05 eff:1.3% logz=-24401.52+/-0.23 dlogz:447.997>0.1]10772it [1:11:58,  1.01s/it, bound:1207 nc: 12 ncall:8.6e+05 eff:1.3% logz=-24393.48+/-0.23 dlogz:439.654>0.1]10804it [1:12:28,  1.03it/s, bound:1214 nc: 55 ncall:8.7e+05 eff:1.2% logz=-24385.92+/-0.18 dlogz:431.903>0.1]10832it [1:12:59,  1.01s/it, bound:1220 nc: 34 ncall:8.7e+05 eff:1.2% logz=-24381.02+/-0.22 dlogz:426.903>0.1]10862it [1:13:28,  1.00s/it, bound:1227 nc: 25 ncall:8.7e+05 eff:1.2% logz=-24376.99+/-0.22 dlogz:422.909>0.1]16:25 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
10883it [1:13:33,  1.21it/s, bound:1230 nc:190 ncall:8.8e+05 eff:1.2% logz=-24374.08+/-0.11 dlogz:420.050>0.1]10894it [1:13:57,  1.03s/it, bound:1234 nc: 74 ncall:8.8e+05 eff:1.2% logz=-24371.47+/-0.22 dlogz:417.301>0.1]10924it [1:14:22,  1.05it/s, bound:1241 nc: 23 ncall:8.8e+05 eff:1.2% logz=-24362.42+/-0.23 dlogz:408.144>0.1]10955it [1:14:46,  1.12it/s, bound:1248 nc:107 ncall:8.9e+05 eff:1.2% logz=-24345.91+/-0.23 dlogz:391.623>0.1]10983it [1:15:14,  1.09it/s, bound:1255 nc: 34 ncall:8.9e+05 eff:1.2% logz=-24339.60+/-0.22 dlogz:385.228>0.1]11014it [1:15:43,  1.08it/s, bound:1263 nc: 52 ncall:9.0e+05 eff:1.2% logz=-24337.13+/-0.22 dlogz:382.634>0.1]11044it [1:16:10,  1.08it/s, bound:1271 nc: 33 ncall:9.1e+05 eff:1.2% logz=-24322.93+/-0.21 dlogz:368.547>0.1]11073it [1:16:38,  1.07it/s, bound:1278 nc:641 ncall:9.1e+05 eff:1.2% logz=-24316.46+/-0.23 dlogz:361.939>0.1]11104it [1:17:09,  1.05it/s, bound:1284 nc: 57 ncall:9.2e+05 eff:1.2% logz=-24314.58+/-0.22 dlogz:359.888>0.1]11135it [1:17:38,  1.05it/s, bound:1292 nc: 34 ncall:9.2e+05 eff:1.2% logz=-24306.65+/-0.22 dlogz:351.979>0.1]11166it [1:18:08,  1.04it/s, bound:1298 nc: 24 ncall:9.2e+05 eff:1.2% logz=-24300.14+/-0.23 dlogz:345.411>0.1]11197it [1:18:37,  1.05it/s, bound:1305 nc: 14 ncall:9.3e+05 eff:1.2% logz=-24288.33+/-0.23 dlogz:333.503>0.1]11228it [1:19:08,  1.04it/s, bound:1312 nc: 28 ncall:9.3e+05 eff:1.2% logz=-24285.92+/-0.19 dlogz:330.990>0.1]11259it [1:19:35,  1.07it/s, bound:1318 nc: 36 ncall:9.4e+05 eff:1.2% logz=-24280.20+/-0.23 dlogz:325.277>0.1]11290it [1:20:03,  1.08it/s, bound:1325 nc: 49 ncall:9.4e+05 eff:1.2% logz=-24271.36+/-0.23 dlogz:316.454>0.1]11322it [1:20:32,  1.08it/s, bound:1331 nc: 27 ncall:9.5e+05 eff:1.2% logz=-24264.19+/-0.23 dlogz:309.152>0.1]11353it [1:21:01,  1.08it/s, bound:1338 nc: 32 ncall:9.5e+05 eff:1.2% logz=-24261.52+/-0.23 dlogz:306.338>0.1]11385it [1:21:29,  1.10it/s, bound:1344 nc: 28 ncall:9.6e+05 eff:1.2% logz=-24253.82+/-0.23 dlogz:298.588>0.1]11417it [1:21:57,  1.11it/s, bound:1351 nc: 32 ncall:9.6e+05 eff:1.2% logz=-24249.76+/-0.23 dlogz:294.465>0.1]11449it [1:22:27,  1.10it/s, bound:1358 nc: 21 ncall:9.7e+05 eff:1.2% logz=-24244.85+/-0.23 dlogz:289.529>0.1]11479it [1:22:56,  1.07it/s, bound:1365 nc: 31 ncall:9.7e+05 eff:1.2% logz=-24241.38+/-0.16 dlogz:286.172>0.1]11509it [1:23:26,  1.05it/s, bound:1372 nc: 22 ncall:9.8e+05 eff:1.2% logz=-24235.25+/-0.23 dlogz:279.996>0.1]11538it [1:23:57,  1.02it/s, bound:1378 nc: 32 ncall:9.8e+05 eff:1.2% logz=-24230.35+/-0.23 dlogz:274.849>0.1]16:36 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
11563it [1:24:03,  1.27it/s, bound:1383 nc:233 ncall:9.8e+05 eff:1.2% logz=-24222.11+/-0.08 dlogz:266.587>0.1]11569it [1:24:33,  1.14s/it, bound:1386 nc: 31 ncall:9.9e+05 eff:1.2% logz=-24221.59+/-0.16 dlogz:265.998>0.1]11598it [1:25:01,  1.07s/it, bound:1392 nc: 67 ncall:9.9e+05 eff:1.2% logz=-24215.89+/-0.23 dlogz:260.223>0.1]11627it [1:25:31,  1.06s/it, bound:1399 nc: 26 ncall:1.0e+06 eff:1.2% logz=-24209.25+/-0.23 dlogz:253.568>0.1]11659it [1:26:01,  1.01s/it, bound:1406 nc: 78 ncall:1.0e+06 eff:1.2% logz=-24207.11+/-0.16 dlogz:251.310>0.1]11689it [1:26:31,  1.01s/it, bound:1413 nc: 23 ncall:1.0e+06 eff:1.2% logz=-24203.63+/-0.23 dlogz:247.783>0.1]11721it [1:27:02,  1.00it/s, bound:1420 nc: 34 ncall:1.0e+06 eff:1.2% logz=-24190.24+/-0.24 dlogz:234.786>0.1]11752it [1:27:34,  1.01s/it, bound:1427 nc: 27 ncall:1.0e+06 eff:1.2% logz=-24181.25+/-0.22 dlogz:225.306>0.1]11782it [1:28:05,  1.01s/it, bound:1434 nc: 32 ncall:1.0e+06 eff:1.2% logz=-24155.39+/-0.23 dlogz:199.346>0.1]11814it [1:28:37,  1.01s/it, bound:1441 nc: 36 ncall:1.0e+06 eff:1.2% logz=-24154.04+/-0.06 dlogz:197.928>0.1]11845it [1:29:08,  1.01s/it, bound:1448 nc: 60 ncall:1.0e+06 eff:1.1% logz=-24147.30+/-0.23 dlogz:228.726>0.1]11876it [1:29:38,  1.00it/s, bound:1455 nc: 32 ncall:1.0e+06 eff:1.1% logz=-24146.29+/-0.23 dlogz:227.647>0.1]11907it [1:30:09,  1.01it/s, bound:1461 nc: 31 ncall:1.0e+06 eff:1.1% logz=-24145.47+/-0.12 dlogz:226.769>0.1]11939it [1:30:40,  1.01it/s, bound:1468 nc: 29 ncall:1.0e+06 eff:1.1% logz=-24140.62+/-0.23 dlogz:221.870>0.1]11971it [1:31:11,  1.02it/s, bound:1475 nc: 34 ncall:1.1e+06 eff:1.1% logz=-24138.36+/-0.23 dlogz:219.550>0.1]12002it [1:31:42,  1.01it/s, bound:1482 nc: 30 ncall:1.1e+06 eff:1.1% logz=-24135.78+/-0.22 dlogz:216.962>0.1]12034it [1:32:13,  1.02it/s, bound:1490 nc: 30 ncall:1.1e+06 eff:1.1% logz=-24134.38+/-0.23 dlogz:215.415>0.1]12065it [1:32:46,  1.00s/it, bound:1497 nc: 36 ncall:1.1e+06 eff:1.1% logz=-24131.77+/-0.06 dlogz:212.783>0.1]12094it [1:33:18,  1.03s/it, bound:1504 nc: 27 ncall:1.1e+06 eff:1.1% logz=-24130.79+/-0.18 dlogz:211.738>0.1]12125it [1:33:49,  1.03s/it, bound:1512 nc: 31 ncall:1.1e+06 eff:1.1% logz=-24103.22+/-0.24 dlogz:184.214>0.1]12157it [1:34:20,  1.00s/it, bound:1519 nc: 29 ncall:1.1e+06 eff:1.1% logz=-24100.91+/-0.20 dlogz:182.234>0.1]12186it [1:34:51,  1.02s/it, bound:1526 nc: 26 ncall:1.1e+06 eff:1.1% logz=-24097.08+/-0.23 dlogz:177.883>0.1]12218it [1:35:22,  1.01s/it, bound:1533 nc: 31 ncall:1.1e+06 eff:1.1% logz=-24096.30+/-0.23 dlogz:177.021>0.1]16:47 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
12227it [1:35:28,  1.03it/s, bound:1534 nc:119 ncall:1.1e+06 eff:1.1% logz=-24096.17+/-0.03 dlogz:509.279>0.1]12249it [1:36:00,  1.11s/it, bound:1540 nc: 32 ncall:1.1e+06 eff:1.1% logz=-24094.75+/-0.21 dlogz:507.982>0.1]12281it [1:36:32,  1.06s/it, bound:1547 nc: 26 ncall:1.1e+06 eff:1.1% logz=-24092.90+/-0.23 dlogz:506.329>0.1]12313it [1:37:03,  1.03s/it, bound:1554 nc: 30 ncall:1.1e+06 eff:1.1% logz=-24092.32+/-0.06 dlogz:505.666>0.1]12344it [1:37:34,  1.02s/it, bound:1561 nc: 33 ncall:1.1e+06 eff:1.1% logz=-24090.07+/-0.22 dlogz:503.440>0.1]12376it [1:38:05,  1.01s/it, bound:1568 nc: 34 ncall:1.1e+06 eff:1.1% logz=-24087.87+/-0.23 dlogz:501.624>0.1]12408it [1:38:37,  1.01s/it, bound:1575 nc: 41 ncall:1.1e+06 eff:1.1% logz=-24087.13+/-0.11 dlogz:500.810>0.1]12439it [1:39:10,  1.02s/it, bound:1582 nc: 34 ncall:1.1e+06 eff:1.1% logz=-24079.80+/-0.25 dlogz:494.443>0.1]12468it [1:39:42,  1.05s/it, bound:1589 nc: 29 ncall:1.1e+06 eff:1.1% logz=-24060.25+/-0.07 dlogz:473.885>0.1]12500it [1:40:15,  1.04s/it, bound:1596 nc: 24 ncall:1.1e+06 eff:1.1% logz=-24058.92+/-0.20 dlogz:472.416>0.1]12530it [1:40:47,  1.05s/it, bound:1603 nc: 33 ncall:1.1e+06 eff:1.1% logz=-24052.22+/-0.24 dlogz:465.930>0.1]12559it [1:41:18,  1.06s/it, bound:1610 nc: 32 ncall:1.1e+06 eff:1.1% logz=-24043.29+/-0.23 dlogz:456.955>0.1]12591it [1:41:50,  1.03s/it, bound:1617 nc: 33 ncall:1.2e+06 eff:1.1% logz=-24037.59+/-0.24 dlogz:450.933>0.1]12623it [1:42:21,  1.02s/it, bound:1624 nc: 34 ncall:1.2e+06 eff:1.1% logz=-24036.09+/-0.24 dlogz:449.461>0.1]12653it [1:42:53,  1.03s/it, bound:1630 nc: 28 ncall:1.2e+06 eff:1.1% logz=-24029.74+/-0.24 dlogz:442.998>0.1]12685it [1:43:24,  1.02s/it, bound:1638 nc: 31 ncall:1.2e+06 eff:1.1% logz=-24028.35+/-0.23 dlogz:441.479>0.1]12717it [1:43:56,  1.01s/it, bound:1645 nc: 36 ncall:1.2e+06 eff:1.1% logz=-24027.81+/-0.05 dlogz:440.929>0.1]12748it [1:44:28,  1.02s/it, bound:1651 nc:563 ncall:1.2e+06 eff:1.1% logz=-24027.19+/-0.16 dlogz:440.279>0.1]12780it [1:45:00,  1.01s/it, bound:1659 nc: 36 ncall:1.2e+06 eff:1.1% logz=-24025.33+/-0.23 dlogz:438.349>0.1]12812it [1:45:32,  1.00s/it, bound:1666 nc: 34 ncall:1.2e+06 eff:1.1% logz=-24023.99+/-0.17 dlogz:436.969>0.1]12843it [1:46:04,  1.01s/it, bound:1672 nc: 35 ncall:1.2e+06 eff:1.1% logz=-24019.56+/-0.24 dlogz:432.985>0.1]12874it [1:46:36,  1.02s/it, bound:1680 nc: 34 ncall:1.2e+06 eff:1.1% logz=-24008.66+/-0.24 dlogz:421.975>0.1]16:58 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
12878it [1:46:42,  1.05s/it, bound:1680 nc:108 ncall:1.2e+06 eff:1.1% logz=-24007.98+/-0.10 dlogz:421.311>0.1]12906it [1:47:15,  1.09s/it, bound:1687 nc: 32 ncall:1.2e+06 eff:1.1% logz=-24002.77+/-0.24 dlogz:448.125>0.1]12938it [1:47:49,  1.08s/it, bound:1695 nc: 31 ncall:1.2e+06 eff:1.1% logz=-24000.92+/-0.24 dlogz:458.183>0.1]12969it [1:48:25,  1.11s/it, bound:1704 nc:638 ncall:1.2e+06 eff:1.1% logz=-23999.42+/-0.17 dlogz:456.702>0.1]13000it [1:49:01,  1.12s/it, bound:1712 nc: 40 ncall:1.2e+06 eff:1.1% logz=-23995.95+/-0.24 dlogz:487.597>0.1]13027it [1:49:37,  1.19s/it, bound:1719 nc: 37 ncall:1.2e+06 eff:1.1% logz=-23989.21+/-0.13 dlogz:481.014>0.1]13059it [1:50:14,  1.17s/it, bound:1727 nc: 41 ncall:1.2e+06 eff:1.1% logz=-23980.12+/-0.24 dlogz:471.752>0.1]13091it [1:50:50,  1.16s/it, bound:1735 nc: 38 ncall:1.2e+06 eff:1.1% logz=-23970.27+/-0.25 dlogz:478.853>0.1]13123it [1:51:24,  1.13s/it, bound:1743 nc: 35 ncall:1.2e+06 eff:1.1% logz=-23964.40+/-0.24 dlogz:472.833>0.1]13155it [1:52:00,  1.12s/it, bound:1751 nc: 36 ncall:1.3e+06 eff:1.1% logz=-23961.57+/-0.24 dlogz:469.818>0.1]13186it [1:52:35,  1.13s/it, bound:1759 nc: 40 ncall:1.3e+06 eff:1.0% logz=-23959.05+/-0.21 dlogz:467.523>0.1]13217it [1:53:10,  1.13s/it, bound:1767 nc: 40 ncall:1.3e+06 eff:1.0% logz=-23947.81+/-0.25 dlogz:456.092>0.1]13248it [1:53:44,  1.12s/it, bound:1775 nc: 35 ncall:1.3e+06 eff:1.0% logz=-23940.54+/-0.13 dlogz:448.880>0.1]13280it [1:54:18,  1.10s/it, bound:1782 nc: 36 ncall:1.3e+06 eff:1.0% logz=-23932.36+/-0.25 dlogz:440.626>0.1]13311it [1:54:52,  1.10s/it, bound:1790 nc: 40 ncall:1.3e+06 eff:1.0% logz=-23926.17+/-0.24 dlogz:434.218>0.1]13343it [1:55:25,  1.08s/it, bound:1798 nc: 38 ncall:1.3e+06 eff:1.0% logz=-23924.03+/-0.16 dlogz:431.923>0.1]13374it [1:55:58,  1.07s/it, bound:1805 nc: 33 ncall:1.3e+06 eff:1.0% logz=-23920.97+/-0.24 dlogz:429.044>0.1]13406it [1:56:31,  1.06s/it, bound:1812 nc: 32 ncall:1.3e+06 eff:1.0% logz=-23914.49+/-0.11 dlogz:422.440>0.1]13437it [1:57:03,  1.06s/it, bound:1819 nc: 36 ncall:1.3e+06 eff:1.0% logz=-23908.65+/-0.25 dlogz:416.562>0.1]13469it [1:57:38,  1.06s/it, bound:1826 nc: 37 ncall:1.3e+06 eff:1.0% logz=-23900.63+/-0.25 dlogz:408.386>0.1]17:09 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
13491it [1:57:44,  1.13it/s, bound:1831 nc:198 ncall:1.3e+06 eff:1.0% logz=-23896.14+/-0.16 dlogz:404.182>0.1]13501it [1:58:19,  1.22s/it, bound:1835 nc: 38 ncall:1.3e+06 eff:1.0% logz=-23893.04+/-0.25 dlogz:400.811>0.1]13531it [1:58:54,  1.20s/it, bound:1842 nc: 40 ncall:1.3e+06 eff:1.0% logz=-23885.94+/-0.25 dlogz:393.592>0.1]13562it [1:59:29,  1.18s/it, bound:1849 nc: 39 ncall:1.3e+06 eff:1.0% logz=-23880.99+/-0.12 dlogz:388.668>0.1]13593it [2:00:05,  1.17s/it, bound:1856 nc: 23 ncall:1.3e+06 eff:1.0% logz=-23874.47+/-0.25 dlogz:381.972>0.1]13624it [2:00:39,  1.15s/it, bound:1864 nc: 40 ncall:1.3e+06 eff:1.0% logz=-23865.79+/-0.25 dlogz:373.475>0.1]13654it [2:01:15,  1.16s/it, bound:1873 nc: 36 ncall:1.3e+06 eff:1.0% logz=-23854.33+/-0.25 dlogz:361.918>0.1]13684it [2:01:51,  1.17s/it, bound:1881 nc: 38 ncall:1.3e+06 eff:1.0% logz=-23845.59+/-0.25 dlogz:353.000>0.1]13715it [2:02:27,  1.17s/it, bound:1889 nc: 38 ncall:1.4e+06 eff:1.0% logz=-23836.39+/-0.22 dlogz:343.696>0.1]13746it [2:03:04,  1.18s/it, bound:1897 nc: 41 ncall:1.4e+06 eff:1.0% logz=-23829.83+/-0.25 dlogz:337.093>0.1]13777it [2:03:40,  1.18s/it, bound:1905 nc: 26 ncall:1.4e+06 eff:1.0% logz=-23822.80+/-0.13 dlogz:330.078>0.1]13808it [2:04:17,  1.18s/it, bound:1913 nc: 29 ncall:1.4e+06 eff:1.0% logz=-23812.52+/-0.25 dlogz:319.638>0.1]13840it [2:04:53,  1.17s/it, bound:1921 nc: 42 ncall:1.4e+06 eff:1.0% logz=-23805.85+/-0.25 dlogz:313.109>0.1]13872it [2:05:30,  1.16s/it, bound:1929 nc: 33 ncall:1.4e+06 eff:1.0% logz=-23799.18+/-0.24 dlogz:309.706>0.1]13904it [2:06:07,  1.16s/it, bound:1938 nc: 37 ncall:1.4e+06 eff:1.0% logz=-23793.68+/-0.25 dlogz:304.212>0.1]13936it [2:06:43,  1.15s/it, bound:1946 nc: 42 ncall:1.4e+06 eff:1.0% logz=-23788.42+/-0.22 dlogz:298.858>0.1]13967it [2:07:20,  1.16s/it, bound:1954 nc: 41 ncall:1.4e+06 eff:1.0% logz=-23780.72+/-0.25 dlogz:296.671>0.1]13999it [2:07:57,  1.16s/it, bound:1964 nc: 36 ncall:1.4e+06 eff:1.0% logz=-23773.25+/-0.20 dlogz:289.176>0.1]14030it [2:08:34,  1.17s/it, bound:1972 nc: 38 ncall:1.4e+06 eff:1.0% logz=-23764.76+/-0.25 dlogz:280.540>0.1]14061it [2:09:10,  1.17s/it, bound:1980 nc: 37 ncall:1.4e+06 eff:1.0% logz=-23758.38+/-0.25 dlogz:274.189>0.1]17:21 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
14063it [2:09:17,  1.23s/it, bound:1980 nc: 86 ncall:1.4e+06 eff:1.0% logz=-23757.96+/-0.11 dlogz:273.776>0.1]14092it [2:09:54,  1.25s/it, bound:1988 nc: 39 ncall:1.4e+06 eff:1.0% logz=-23750.78+/-0.25 dlogz:266.541>0.1]14123it [2:10:31,  1.23s/it, bound:1997 nc: 34 ncall:1.4e+06 eff:1.0% logz=-23746.15+/-0.25 dlogz:261.856>0.1]14153it [2:11:08,  1.23s/it, bound:2005 nc: 40 ncall:1.4e+06 eff:1.0% logz=-23740.24+/-0.25 dlogz:255.878>0.1]14185it [2:11:45,  1.21s/it, bound:2014 nc: 32 ncall:1.4e+06 eff:1.0% logz=-23734.45+/-0.25 dlogz:249.988>0.1]14216it [2:12:23,  1.21s/it, bound:2022 nc:639 ncall:1.4e+06 eff:1.0% logz=-23729.30+/-0.23 dlogz:244.743>0.1]14247it [2:13:00,  1.21s/it, bound:2031 nc:678 ncall:1.5e+06 eff:1.0% logz=-23723.34+/-0.25 dlogz:238.720>0.1]14278it [2:13:38,  1.21s/it, bound:2040 nc: 33 ncall:1.5e+06 eff:1.0% logz=-23717.87+/-0.19 dlogz:233.199>0.1]14310it [2:14:15,  1.20s/it, bound:2049 nc: 42 ncall:1.5e+06 eff:1.0% logz=-23713.61+/-0.25 dlogz:228.827>0.1]14342it [2:14:53,  1.19s/it, bound:2058 nc: 39 ncall:1.5e+06 eff:1.0% logz=-23708.64+/-0.11 dlogz:223.896>0.1]14374it [2:15:31,  1.19s/it, bound:2067 nc: 38 ncall:1.5e+06 eff:1.0% logz=-23702.38+/-0.25 dlogz:217.556>0.1]14403it [2:16:09,  1.22s/it, bound:2076 nc: 41 ncall:1.5e+06 eff:1.0% logz=-23697.92+/-0.25 dlogz:222.772>0.1]14434it [2:16:46,  1.22s/it, bound:2085 nc: 36 ncall:1.5e+06 eff:1.0% logz=-23691.40+/-0.25 dlogz:216.168>0.1]14466it [2:17:23,  1.19s/it, bound:2093 nc: 40 ncall:1.5e+06 eff:1.0% logz=-23686.97+/-0.25 dlogz:211.623>0.1]14497it [2:17:59,  1.19s/it, bound:2101 nc: 41 ncall:1.5e+06 eff:1.0% logz=-23682.11+/-0.24 dlogz:206.901>0.1]14528it [2:18:35,  1.18s/it, bound:2109 nc: 41 ncall:1.5e+06 eff:1.0% logz=-23677.87+/-0.25 dlogz:202.488>0.1]14559it [2:19:10,  1.17s/it, bound:2117 nc: 37 ncall:1.5e+06 eff:1.0% logz=-23674.11+/-0.17 dlogz:198.602>0.1]14591it [2:19:45,  1.14s/it, bound:2125 nc: 35 ncall:1.5e+06 eff:1.0% logz=-23669.96+/-0.25 dlogz:194.483>0.1]14622it [2:20:19,  1.13s/it, bound:2132 nc: 37 ncall:1.5e+06 eff:1.0% logz=-23665.32+/-0.26 dlogz:189.730>0.1]17:32 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
14625it [2:20:27,  1.18s/it, bound:2133 nc: 86 ncall:1.5e+06 eff:1.0% logz=-23664.93+/-0.09 dlogz:189.299>0.1]14653it [2:21:01,  1.20s/it, bound:2140 nc: 36 ncall:1.5e+06 eff:1.0% logz=-23661.58+/-0.25 dlogz:185.883>0.1]14685it [2:21:33,  1.13s/it, bound:2148 nc: 36 ncall:1.5e+06 eff:1.0% logz=-23658.07+/-0.25 dlogz:182.309>0.1]14717it [2:22:05,  1.09s/it, bound:2156 nc: 38 ncall:1.5e+06 eff:1.0% logz=-23654.96+/-0.21 dlogz:179.120>0.1]14749it [2:22:37,  1.06s/it, bound:2163 nc: 37 ncall:1.5e+06 eff:1.0% logz=-23651.11+/-0.25 dlogz:175.220>0.1]14781it [2:23:09,  1.04s/it, bound:2170 nc: 36 ncall:1.6e+06 eff:1.0% logz=-23647.71+/-0.25 dlogz:171.736>0.1]14813it [2:23:41,  1.02s/it, bound:2177 nc: 33 ncall:1.6e+06 eff:1.0% logz=-23644.25+/-0.25 dlogz:168.199>0.1]14845it [2:24:11,  1.00s/it, bound:2184 nc: 34 ncall:1.6e+06 eff:0.9% logz=-23641.32+/-0.25 dlogz:165.245>0.1]14872it [2:24:42,  1.04s/it, bound:2190 nc: 31 ncall:1.6e+06 eff:0.9% logz=-23637.63+/-0.20 dlogz:161.511>0.1]14903it [2:25:12,  1.01s/it, bound:2198 nc: 25 ncall:1.6e+06 eff:0.9% logz=-23634.16+/-0.25 dlogz:157.936>0.1]14933it [2:25:41,  1.00s/it, bound:2204 nc: 30 ncall:1.6e+06 eff:0.9% logz=-23630.80+/-0.26 dlogz:154.534>0.1]14965it [2:26:10,  1.02it/s, bound:2211 nc: 29 ncall:1.6e+06 eff:0.9% logz=-23628.01+/-0.22 dlogz:151.677>0.1]14997it [2:26:40,  1.04it/s, bound:2218 nc: 31 ncall:1.6e+06 eff:0.9% logz=-23624.59+/-0.26 dlogz:148.181>0.1]15029it [2:27:09,  1.06it/s, bound:2226 nc: 31 ncall:1.6e+06 eff:0.9% logz=-23621.52+/-0.26 dlogz:145.021>0.1]15061it [2:27:38,  1.07it/s, bound:2232 nc: 34 ncall:1.6e+06 eff:0.9% logz=-23618.70+/-0.24 dlogz:142.227>0.1]15092it [2:28:07,  1.07it/s, bound:2239 nc: 29 ncall:1.6e+06 eff:0.9% logz=-23615.70+/-0.26 dlogz:139.090>0.1]15123it [2:28:36,  1.08it/s, bound:2245 nc: 34 ncall:1.6e+06 eff:0.9% logz=-23613.11+/-0.26 dlogz:136.435>0.1]15155it [2:29:05,  1.08it/s, bound:2252 nc: 34 ncall:1.6e+06 eff:0.9% logz=-23609.87+/-0.25 dlogz:133.140>0.1]15187it [2:29:34,  1.09it/s, bound:2259 nc: 27 ncall:1.6e+06 eff:0.9% logz=-23607.17+/-0.26 dlogz:130.366>0.1]15219it [2:30:02,  1.10it/s, bound:2265 nc: 30 ncall:1.6e+06 eff:0.9% logz=-23604.75+/-0.09 dlogz:127.877>0.1]15250it [2:30:31,  1.09it/s, bound:2272 nc: 31 ncall:1.6e+06 eff:0.9% logz=-23601.80+/-0.25 dlogz:124.895>0.1]15281it [2:30:59,  1.10it/s, bound:2278 nc: 31 ncall:1.6e+06 eff:0.9% logz=-23599.17+/-0.26 dlogz:122.180>0.1]17:43 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
15309it [2:31:07,  1.36it/s, bound:2284 nc:217 ncall:1.6e+06 eff:0.9% logz=-23597.36+/-0.07 dlogz:120.304>0.1]15312it [2:31:35,  1.09s/it, bound:2285 nc: 31 ncall:1.6e+06 eff:0.9% logz=-23597.17+/-0.12 dlogz:120.103>0.1]15344it [2:32:03,  1.01s/it, bound:2292 nc: 26 ncall:1.6e+06 eff:0.9% logz=-23595.44+/-0.24 dlogz:118.300>0.1]15374it [2:32:30,  1.03it/s, bound:2298 nc: 30 ncall:1.6e+06 eff:0.9% logz=-23592.87+/-0.26 dlogz:115.720>0.1]15404it [2:32:59,  1.04it/s, bound:2305 nc: 30 ncall:1.6e+06 eff:0.9% logz=-23590.52+/-0.11 dlogz:113.276>0.1]15435it [2:33:26,  1.06it/s, bound:2311 nc: 29 ncall:1.7e+06 eff:0.9% logz=-23587.68+/-0.25 dlogz:110.389>0.1]15465it [2:33:54,  1.07it/s, bound:2317 nc:505 ncall:1.7e+06 eff:0.9% logz=-23585.58+/-0.26 dlogz:108.218>0.1]15496it [2:34:21,  1.09it/s, bound:2324 nc: 34 ncall:1.7e+06 eff:0.9% logz=-23583.10+/-0.10 dlogz:105.682>0.1]15525it [2:34:48,  1.09it/s, bound:2330 nc: 32 ncall:1.7e+06 eff:0.9% logz=-23580.99+/-0.25 dlogz:103.504>0.1]15554it [2:35:15,  1.08it/s, bound:2336 nc: 73 ncall:1.7e+06 eff:0.9% logz=-23578.29+/-0.26 dlogz:100.760>0.1]15585it [2:35:43,  1.09it/s, bound:2342 nc: 32 ncall:1.7e+06 eff:0.9% logz=-23576.16+/-0.09 dlogz:98.557>0.1] 15616it [2:36:10,  1.11it/s, bound:2349 nc: 22 ncall:1.7e+06 eff:0.9% logz=-23574.08+/-0.25 dlogz:96.430>0.1]15648it [2:36:37,  1.13it/s, bound:2355 nc: 37 ncall:1.7e+06 eff:0.9% logz=-23572.16+/-0.26 dlogz:94.414>0.1]15679it [2:37:04,  1.14it/s, bound:2361 nc: 31 ncall:1.7e+06 eff:0.9% logz=-23570.19+/-0.07 dlogz:92.402>0.1]15709it [2:37:31,  1.13it/s, bound:2368 nc: 25 ncall:1.7e+06 eff:0.9% logz=-23568.31+/-0.24 dlogz:90.444>0.1]15738it [2:37:58,  1.11it/s, bound:2374 nc: 27 ncall:1.7e+06 eff:0.9% logz=-23566.29+/-0.26 dlogz:88.384>0.1]15770it [2:38:25,  1.13it/s, bound:2380 nc: 32 ncall:1.7e+06 eff:0.9% logz=-23564.38+/-0.26 dlogz:86.672>0.1]15802it [2:38:52,  1.14it/s, bound:2386 nc: 30 ncall:1.7e+06 eff:0.9% logz=-23562.46+/-0.23 dlogz:84.679>0.1]15834it [2:39:19,  1.16it/s, bound:2393 nc: 33 ncall:1.7e+06 eff:0.9% logz=-23561.00+/-0.25 dlogz:83.141>0.1]15866it [2:39:45,  1.17it/s, bound:2399 nc: 29 ncall:1.7e+06 eff:0.9% logz=-23559.64+/-0.26 dlogz:81.720>0.1]15898it [2:40:12,  1.18it/s, bound:2405 nc: 32 ncall:1.7e+06 eff:0.9% logz=-23557.91+/-0.23 dlogz:79.940>0.1]15927it [2:40:38,  1.16it/s, bound:2410 nc: 43 ncall:1.7e+06 eff:0.9% logz=-23556.31+/-0.25 dlogz:78.268>0.1]15959it [2:41:05,  1.17it/s, bound:2417 nc: 33 ncall:1.7e+06 eff:0.9% logz=-23554.76+/-0.26 dlogz:76.655>0.1]15989it [2:41:31,  1.16it/s, bound:2423 nc:486 ncall:1.7e+06 eff:0.9% logz=-23553.44+/-0.19 dlogz:75.271>0.1]16020it [2:41:58,  1.16it/s, bound:2430 nc: 29 ncall:1.7e+06 eff:0.9% logz=-23551.94+/-0.25 dlogz:73.709>0.1]16050it [2:42:24,  1.16it/s, bound:2436 nc: 27 ncall:1.7e+06 eff:0.9% logz=-23550.43+/-0.26 dlogz:72.156>0.1]17:54 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
16067it [2:42:32,  1.27it/s, bound:2438 nc:105 ncall:1.7e+06 eff:0.9% logz=-23549.35+/-0.07 dlogz:71.063>0.1]16080it [2:42:59,  1.01s/it, bound:2441 nc:448 ncall:1.7e+06 eff:0.9% logz=-23548.46+/-0.21 dlogz:70.128>0.1]16111it [2:43:25,  1.05it/s, bound:2448 nc: 20 ncall:1.7e+06 eff:0.9% logz=-23546.79+/-0.25 dlogz:68.387>0.1]16142it [2:43:52,  1.09it/s, bound:2454 nc: 28 ncall:1.8e+06 eff:0.9% logz=-23545.18+/-0.26 dlogz:66.718>0.1]16173it [2:44:18,  1.12it/s, bound:2460 nc: 29 ncall:1.8e+06 eff:0.9% logz=-23543.81+/-0.16 dlogz:65.278>0.1]16204it [2:44:44,  1.14it/s, bound:2466 nc: 25 ncall:1.8e+06 eff:0.9% logz=-23542.34+/-0.24 dlogz:63.747>0.1]16234it [2:45:10,  1.15it/s, bound:2472 nc: 30 ncall:1.8e+06 eff:0.9% logz=-23540.80+/-0.26 dlogz:62.148>0.1]16266it [2:45:37,  1.16it/s, bound:2478 nc: 35 ncall:1.8e+06 eff:0.9% logz=-23539.06+/-0.15 dlogz:60.342>0.1]16296it [2:46:03,  1.15it/s, bound:2484 nc: 33 ncall:1.8e+06 eff:0.9% logz=-23537.70+/-0.24 dlogz:58.917>0.1]16325it [2:46:29,  1.15it/s, bound:2490 nc: 26 ncall:1.8e+06 eff:0.9% logz=-23536.43+/-0.26 dlogz:57.597>0.1]16357it [2:46:55,  1.17it/s, bound:2496 nc: 36 ncall:1.8e+06 eff:0.9% logz=-23534.93+/-0.09 dlogz:56.024>0.1]16389it [2:47:21,  1.19it/s, bound:2502 nc: 47 ncall:1.8e+06 eff:0.9% logz=-23533.70+/-0.23 dlogz:54.731>0.1]16421it [2:47:47,  1.21it/s, bound:2508 nc: 28 ncall:1.8e+06 eff:0.9% logz=-23532.30+/-0.26 dlogz:56.289>0.1]16451it [2:48:13,  1.19it/s, bound:2514 nc: 28 ncall:1.8e+06 eff:0.9% logz=-23530.93+/-0.26 dlogz:57.049>0.1]16482it [2:48:38,  1.19it/s, bound:2520 nc: 23 ncall:1.8e+06 eff:0.9% logz=-23529.61+/-0.22 dlogz:55.671>0.1]16514it [2:49:04,  1.21it/s, bound:2526 nc: 27 ncall:1.8e+06 eff:0.9% logz=-23528.41+/-0.25 dlogz:54.397>0.1]16544it [2:49:29,  1.20it/s, bound:2532 nc: 31 ncall:1.8e+06 eff:0.9% logz=-23527.29+/-0.26 dlogz:53.232>0.1]16574it [2:49:55,  1.19it/s, bound:2538 nc: 30 ncall:1.8e+06 eff:0.9% logz=-23525.92+/-0.20 dlogz:51.801>0.1]16605it [2:50:20,  1.20it/s, bound:2544 nc: 28 ncall:1.8e+06 eff:0.9% logz=-23524.80+/-0.25 dlogz:50.600>0.1]16637it [2:50:46,  1.21it/s, bound:2550 nc: 31 ncall:1.8e+06 eff:0.9% logz=-23523.76+/-0.26 dlogz:49.504>0.1]16668it [2:51:11,  1.22it/s, bound:2556 nc: 29 ncall:1.8e+06 eff:0.9% logz=-23522.47+/-0.16 dlogz:48.157>0.1]16700it [2:51:37,  1.23it/s, bound:2562 nc: 26 ncall:1.8e+06 eff:0.9% logz=-23521.26+/-0.24 dlogz:46.868>0.1]16730it [2:52:03,  1.21it/s, bound:2567 nc:474 ncall:1.8e+06 eff:0.9% logz=-23520.10+/-0.26 dlogz:45.664>0.1]16761it [2:52:28,  1.21it/s, bound:2574 nc: 26 ncall:1.8e+06 eff:0.9% logz=-23518.80+/-0.13 dlogz:44.305>0.1]16791it [2:52:54,  1.19it/s, bound:2580 nc: 33 ncall:1.8e+06 eff:0.9% logz=-23517.58+/-0.23 dlogz:47.281>0.1]16823it [2:53:19,  1.22it/s, bound:2586 nc: 32 ncall:1.8e+06 eff:0.9% logz=-23516.76+/-0.25 dlogz:46.386>0.1]18:05 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
16854it [2:53:53,  1.11it/s, bound:2592 nc: 29 ncall:1.9e+06 eff:0.9% logz=-23516.02+/-0.04 dlogz:45.581>0.1]16885it [2:54:18,  1.14it/s, bound:2598 nc: 34 ncall:1.9e+06 eff:0.9% logz=-23515.27+/-0.19 dlogz:44.771>0.1]16917it [2:54:44,  1.17it/s, bound:2603 nc: 31 ncall:1.9e+06 eff:0.9% logz=-23514.29+/-0.24 dlogz:43.730>0.1]16947it [2:55:09,  1.18it/s, bound:2609 nc:445 ncall:1.9e+06 eff:0.9% logz=-23513.48+/-0.26 dlogz:42.866>0.1]16979it [2:55:34,  1.20it/s, bound:2616 nc: 36 ncall:1.9e+06 eff:0.9% logz=-23512.50+/-0.18 dlogz:41.820>0.1]17010it [2:56:00,  1.21it/s, bound:2621 nc:470 ncall:1.9e+06 eff:0.9% logz=-23511.50+/-0.24 dlogz:40.760>0.1]17040it [2:56:25,  1.21it/s, bound:2627 nc:449 ncall:1.9e+06 eff:0.9% logz=-23510.53+/-0.26 dlogz:39.736>0.1]17070it [2:56:50,  1.20it/s, bound:2633 nc:440 ncall:1.9e+06 eff:0.9% logz=-23509.50+/-0.13 dlogz:38.644>0.1]17102it [2:57:15,  1.23it/s, bound:2640 nc: 19 ncall:1.9e+06 eff:0.9% logz=-23508.54+/-0.22 dlogz:37.612>0.1]17134it [2:57:39,  1.25it/s, bound:2646 nc: 32 ncall:1.9e+06 eff:0.9% logz=-23507.73+/-0.25 dlogz:36.737>0.1]17164it [2:58:04,  1.24it/s, bound:2652 nc: 24 ncall:1.9e+06 eff:0.9% logz=-23506.94+/-0.06 dlogz:35.885>0.1]17195it [2:58:29,  1.24it/s, bound:2657 nc: 32 ncall:1.9e+06 eff:0.9% logz=-23506.13+/-0.20 dlogz:35.013>0.1]17226it [2:58:54,  1.25it/s, bound:2663 nc: 30 ncall:1.9e+06 eff:0.9% logz=-23505.35+/-0.24 dlogz:34.170>0.1]17258it [2:59:18,  1.26it/s, bound:2669 nc: 36 ncall:1.9e+06 eff:0.9% logz=-23504.56+/-0.26 dlogz:33.315>0.1]17290it [2:59:42,  1.28it/s, bound:2675 nc: 27 ncall:1.9e+06 eff:0.9% logz=-23503.83+/-0.16 dlogz:32.520>0.1]17320it [3:00:07,  1.27it/s, bound:2680 nc: 29 ncall:1.9e+06 eff:0.9% logz=-23503.08+/-0.23 dlogz:31.713>0.1]17350it [3:00:31,  1.25it/s, bound:2686 nc: 32 ncall:1.9e+06 eff:0.9% logz=-23502.39+/-0.25 dlogz:30.963>0.1]17382it [3:00:55,  1.27it/s, bound:2692 nc: 34 ncall:1.9e+06 eff:0.9% logz=-23501.71+/-0.10 dlogz:34.322>0.1]17413it [3:01:20,  1.28it/s, bound:2698 nc: 32 ncall:1.9e+06 eff:0.9% logz=-23501.04+/-0.20 dlogz:33.593>0.1]17445it [3:01:44,  1.29it/s, bound:2703 nc: 31 ncall:1.9e+06 eff:0.9% logz=-23500.37+/-0.24 dlogz:32.849>0.1]17476it [3:02:07,  1.30it/s, bound:2709 nc: 28 ncall:1.9e+06 eff:0.9% logz=-23499.80+/-0.25 dlogz:32.219>0.1]17507it [3:02:32,  1.29it/s, bound:2715 nc: 25 ncall:1.9e+06 eff:0.9% logz=-23499.25+/-0.17 dlogz:31.603>0.1]17539it [3:02:56,  1.30it/s, bound:2720 nc: 32 ncall:1.9e+06 eff:0.9% logz=-23498.67+/-0.22 dlogz:30.961>0.1]17569it [3:03:20,  1.29it/s, bound:2726 nc: 26 ncall:1.9e+06 eff:0.9% logz=-23498.09+/-0.24 dlogz:30.328>0.1]17601it [3:03:43,  1.31it/s, bound:2732 nc: 25 ncall:1.9e+06 eff:0.9% logz=-23497.50+/-0.11 dlogz:29.667>0.1]17632it [3:04:06,  1.32it/s, bound:2737 nc: 30 ncall:2.0e+06 eff:0.9% logz=-23496.98+/-0.19 dlogz:29.091>0.1]17663it [3:04:30,  1.31it/s, bound:2743 nc: 26 ncall:2.0e+06 eff:0.9% logz=-23496.47+/-0.23 dlogz:28.516>0.1]18:16 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
17693it [3:05:03,  1.17it/s, bound:2748 nc: 22 ncall:2.0e+06 eff:0.9% logz=-23495.93+/-0.04 dlogz:27.919>0.1]17725it [3:05:26,  1.23it/s, bound:2754 nc: 25 ncall:2.0e+06 eff:0.9% logz=-23495.32+/-0.18 dlogz:27.245>0.1]17757it [3:05:49,  1.26it/s, bound:2760 nc: 28 ncall:2.0e+06 eff:0.9% logz=-23494.70+/-0.23 dlogz:26.557>0.1]17789it [3:06:13,  1.28it/s, bound:2765 nc: 32 ncall:2.0e+06 eff:0.9% logz=-23494.12+/-0.25 dlogz:25.909>0.1]17821it [3:06:37,  1.30it/s, bound:2771 nc: 30 ncall:2.0e+06 eff:0.9% logz=-23493.56+/-0.12 dlogz:25.289>0.1]17853it [3:07:01,  1.32it/s, bound:2776 nc: 27 ncall:2.0e+06 eff:0.9% logz=-23493.05+/-0.19 dlogz:24.712>0.1]17882it [3:07:25,  1.29it/s, bound:2782 nc: 28 ncall:2.0e+06 eff:0.9% logz=-23492.61+/-0.22 dlogz:24.217>0.1]17912it [3:07:49,  1.28it/s, bound:2787 nc: 24 ncall:2.0e+06 eff:0.9% logz=-23492.15+/-0.03 dlogz:23.697>0.1]17943it [3:08:12,  1.29it/s, bound:2793 nc: 32 ncall:2.0e+06 eff:0.9% logz=-23491.70+/-0.16 dlogz:23.187>0.1]17975it [3:08:36,  1.31it/s, bound:2799 nc: 27 ncall:2.0e+06 eff:0.9% logz=-23491.26+/-0.21 dlogz:22.681>0.1]18004it [3:08:59,  1.30it/s, bound:2805 nc: 31 ncall:2.0e+06 eff:0.9% logz=-23490.88+/-0.23 dlogz:22.237>0.1]18036it [3:09:22,  1.32it/s, bound:2810 nc: 28 ncall:2.0e+06 eff:0.9% logz=-23490.43+/-0.10 dlogz:21.728>0.1]18065it [3:09:46,  1.29it/s, bound:2816 nc: 29 ncall:2.0e+06 eff:0.9% logz=-23490.03+/-0.18 dlogz:21.271>0.1]18096it [3:10:10,  1.29it/s, bound:2821 nc: 33 ncall:2.0e+06 eff:0.9% logz=-23489.62+/-0.21 dlogz:22.187>0.1]18127it [3:10:33,  1.31it/s, bound:2827 nc: 27 ncall:2.0e+06 eff:0.9% logz=-23489.20+/-0.24 dlogz:21.709>0.1]18157it [3:10:55,  1.31it/s, bound:2833 nc: 27 ncall:2.0e+06 eff:0.9% logz=-23488.80+/-0.15 dlogz:21.245>0.1]18186it [3:11:20,  1.28it/s, bound:2838 nc: 29 ncall:2.0e+06 eff:0.9% logz=-23488.43+/-0.20 dlogz:20.817>0.1]18218it [3:11:43,  1.31it/s, bound:2844 nc: 29 ncall:2.0e+06 eff:0.9% logz=-23488.07+/-0.22 dlogz:20.394>0.1]18248it [3:12:06,  1.30it/s, bound:2850 nc: 31 ncall:2.0e+06 eff:0.9% logz=-23487.74+/-0.07 dlogz:20.000>0.1]18280it [3:12:29,  1.33it/s, bound:2856 nc: 33 ncall:2.0e+06 eff:0.9% logz=-23487.39+/-0.16 dlogz:19.588>0.1]18312it [3:12:52,  1.35it/s, bound:2861 nc: 28 ncall:2.0e+06 eff:0.9% logz=-23487.06+/-0.20 dlogz:19.191>0.1]18344it [3:13:15,  1.36it/s, bound:2867 nc: 16 ncall:2.0e+06 eff:0.9% logz=-23486.74+/-0.22 dlogz:18.811>0.1]18375it [3:13:38,  1.36it/s, bound:2872 nc: 23 ncall:2.0e+06 eff:0.9% logz=-23486.45+/-0.11 dlogz:18.459>0.1]18407it [3:14:01,  1.37it/s, bound:2877 nc: 31 ncall:2.0e+06 eff:0.9% logz=-23486.13+/-0.17 dlogz:18.081>0.1]18439it [3:14:24,  1.37it/s, bound:2882 nc: 26 ncall:2.0e+06 eff:0.9% logz=-23485.81+/-0.20 dlogz:17.691>0.1]18471it [3:14:47,  1.38it/s, bound:2888 nc: 32 ncall:2.1e+06 eff:0.9% logz=-23485.50+/-0.05 dlogz:17.314>0.1]18502it [3:15:11,  1.36it/s, bound:2893 nc: 25 ncall:2.1e+06 eff:0.9% logz=-23485.20+/-0.15 dlogz:16.952>0.1]18532it [3:15:33,  1.34it/s, bound:2898 nc: 27 ncall:2.1e+06 eff:0.9% logz=-23484.93+/-0.18 dlogz:16.623>0.1]18561it [3:15:57,  1.32it/s, bound:2903 nc: 22 ncall:2.1e+06 eff:0.9% logz=-23484.66+/-0.21 dlogz:16.301>0.1]18:28 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
18580it [3:16:06,  1.43it/s, bound:2905 nc:134 ncall:2.1e+06 eff:0.9% logz=-23484.49+/-0.03 dlogz:16.089>0.1]18592it [3:16:29,  1.11it/s, bound:2908 nc: 30 ncall:2.1e+06 eff:0.9% logz=-23484.38+/-0.09 dlogz:15.956>0.1]18623it [3:16:52,  1.18it/s, bound:2914 nc: 34 ncall:2.1e+06 eff:0.9% logz=-23484.11+/-0.16 dlogz:15.622>0.1]18654it [3:17:16,  1.23it/s, bound:2919 nc: 21 ncall:2.1e+06 eff:0.9% logz=-23483.86+/-0.19 dlogz:15.312>0.1]18685it [3:17:40,  1.26it/s, bound:2924 nc: 32 ncall:2.1e+06 eff:0.9% logz=-23483.62+/-0.02 dlogz:15.006>0.1]18717it [3:18:02,  1.30it/s, bound:2929 nc: 45 ncall:2.1e+06 eff:0.9% logz=-23483.38+/-0.13 dlogz:14.705>0.1]18748it [3:18:25,  1.32it/s, bound:2935 nc: 31 ncall:2.1e+06 eff:0.9% logz=-23483.15+/-0.17 dlogz:14.411>0.1]18778it [3:18:48,  1.32it/s, bound:2940 nc: 28 ncall:2.1e+06 eff:0.9% logz=-23482.92+/-0.20 dlogz:14.125>0.1]18810it [3:19:11,  1.35it/s, bound:2946 nc: 31 ncall:2.1e+06 eff:0.9% logz=-23482.69+/-0.07 dlogz:13.824>0.1]18842it [3:19:32,  1.38it/s, bound:2951 nc: 20 ncall:2.1e+06 eff:0.9% logz=-23482.44+/-0.14 dlogz:13.517>0.1]18873it [3:19:55,  1.37it/s, bound:2956 nc: 29 ncall:2.1e+06 eff:0.9% logz=-23482.22+/-0.18 dlogz:13.231>0.1]18903it [3:20:18,  1.36it/s, bound:2962 nc: 30 ncall:2.1e+06 eff:0.9% logz=-23482.01+/-0.20 dlogz:12.960>0.1]18933it [3:20:41,  1.34it/s, bound:2966 nc:421 ncall:2.1e+06 eff:0.9% logz=-23481.81+/-0.09 dlogz:12.701>0.1]18965it [3:21:03,  1.37it/s, bound:2972 nc: 33 ncall:2.1e+06 eff:0.9% logz=-23481.61+/-0.14 dlogz:12.433>0.1]18996it [3:21:26,  1.37it/s, bound:2977 nc: 28 ncall:2.1e+06 eff:0.9% logz=-23481.41+/-0.18 dlogz:12.176>0.1]19025it [3:21:48,  1.35it/s, bound:2982 nc: 61 ncall:2.1e+06 eff:0.9% logz=-23481.22+/-0.03 dlogz:11.930>0.1]19056it [3:22:11,  1.36it/s, bound:2988 nc: 28 ncall:2.1e+06 eff:0.9% logz=-23481.03+/-0.12 dlogz:11.676>0.1]19087it [3:22:33,  1.36it/s, bound:2993 nc: 25 ncall:2.1e+06 eff:0.9% logz=-23480.85+/-0.16 dlogz:11.430>0.1]19117it [3:22:56,  1.35it/s, bound:2999 nc: 21 ncall:2.1e+06 eff:0.9% logz=-23480.66+/-0.18 dlogz:11.183>0.1]19149it [3:23:19,  1.36it/s, bound:3004 nc: 25 ncall:2.1e+06 eff:0.9% logz=-23480.46+/-0.06 dlogz:10.917>0.1]19181it [3:23:41,  1.39it/s, bound:3009 nc: 31 ncall:2.1e+06 eff:0.9% logz=-23480.26+/-0.13 dlogz:10.659>0.1]19212it [3:24:04,  1.38it/s, bound:3015 nc: 33 ncall:2.1e+06 eff:0.9% logz=-23480.07+/-0.17 dlogz:10.408>0.1]19244it [3:24:26,  1.39it/s, bound:3020 nc: 19 ncall:2.1e+06 eff:0.9% logz=-23479.88+/-0.19 dlogz:10.147>0.1]19276it [3:24:49,  1.40it/s, bound:3025 nc: 26 ncall:2.1e+06 eff:0.9% logz=-23479.68+/-0.10 dlogz:9.881>0.1] 19306it [3:25:11,  1.38it/s, bound:3031 nc: 30 ncall:2.2e+06 eff:0.9% logz=-23479.50+/-0.14 dlogz:9.647>0.1]19337it [3:25:33,  1.39it/s, bound:3036 nc: 24 ncall:2.2e+06 eff:0.9% logz=-23479.33+/-0.17 dlogz:9.417>0.1]19369it [3:25:56,  1.40it/s, bound:3041 nc: 28 ncall:2.2e+06 eff:0.9% logz=-23479.17+/-0.03 dlogz:9.193>0.1]19401it [3:26:17,  1.42it/s, bound:3047 nc: 31 ncall:2.2e+06 eff:0.9% logz=-23479.02+/-0.11 dlogz:8.974>0.1]19430it [3:26:39,  1.39it/s, bound:3052 nc: 25 ncall:2.2e+06 eff:0.9% logz=-23478.88+/-0.14 dlogz:8.773>0.1]19462it [3:27:01,  1.42it/s, bound:3057 nc: 32 ncall:2.2e+06 eff:0.9% logz=-23478.72+/-0.17 dlogz:8.554>0.1]18:39 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
19490it [3:27:11,  1.65it/s, bound:3061 nc:178 ncall:2.2e+06 eff:0.9% logz=-23478.59+/-0.03 dlogz:8.365>0.1]19493it [3:27:33,  1.14it/s, bound:3062 nc: 27 ncall:2.2e+06 eff:0.9% logz=-23478.57+/-0.04 dlogz:8.346>0.1]19525it [3:27:54,  1.26it/s, bound:3067 nc: 25 ncall:2.2e+06 eff:0.9% logz=-23478.43+/-0.11 dlogz:8.141>0.1]19555it [3:28:15,  1.30it/s, bound:3072 nc: 34 ncall:2.2e+06 eff:0.9% logz=-23478.30+/-0.14 dlogz:7.949>0.1]19586it [3:28:38,  1.32it/s, bound:3077 nc: 32 ncall:2.2e+06 eff:0.9% logz=-23478.17+/-0.16 dlogz:7.756>0.1]19616it [3:29:00,  1.33it/s, bound:3081 nc:407 ncall:2.2e+06 eff:0.9% logz=-23478.05+/-0.05 dlogz:7.578>0.1]19646it [3:29:22,  1.34it/s, bound:3086 nc:342 ncall:2.2e+06 eff:0.9% logz=-23477.93+/-0.11 dlogz:7.397>0.1]19676it [3:29:44,  1.35it/s, bound:3092 nc: 41 ncall:2.2e+06 eff:0.9% logz=-23477.81+/-0.14 dlogz:7.218>0.1]19708it [3:30:06,  1.39it/s, bound:3097 nc: 29 ncall:2.2e+06 eff:0.9% logz=-23477.69+/-0.16 dlogz:7.030>0.1]19739it [3:30:27,  1.41it/s, bound:3102 nc: 47 ncall:2.2e+06 eff:0.9% logz=-23477.57+/-0.08 dlogz:6.849>0.1]19771it [3:30:48,  1.44it/s, bound:3107 nc: 25 ncall:2.2e+06 eff:0.9% logz=-23477.45+/-0.12 dlogz:6.663>0.1]19802it [3:31:10,  1.44it/s, bound:3112 nc: 24 ncall:2.2e+06 eff:0.9% logz=-23477.33+/-0.14 dlogz:6.488>0.1]19834it [3:31:31,  1.45it/s, bound:3117 nc: 29 ncall:2.2e+06 eff:0.9% logz=-23477.22+/-0.16 dlogz:6.314>0.1]19863it [3:31:53,  1.42it/s, bound:3121 nc:578 ncall:2.2e+06 eff:0.9% logz=-23477.13+/-0.08 dlogz:6.183>0.1]19894it [3:32:14,  1.43it/s, bound:3127 nc: 25 ncall:2.2e+06 eff:0.9% logz=-23477.03+/-0.12 dlogz:6.020>0.1]19924it [3:32:35,  1.43it/s, bound:3131 nc:365 ncall:2.2e+06 eff:0.9% logz=-23476.93+/-0.14 dlogz:6.228>0.1]19955it [3:32:57,  1.44it/s, bound:3137 nc: 29 ncall:2.2e+06 eff:0.9% logz=-23476.83+/-0.16 dlogz:6.069>0.1]19987it [3:33:18,  1.46it/s, bound:3142 nc: 21 ncall:2.2e+06 eff:0.9% logz=-23476.74+/-0.10 dlogz:5.908>0.1]20017it [3:33:39,  1.45it/s, bound:3147 nc: 26 ncall:2.2e+06 eff:0.9% logz=-23476.65+/-0.12 dlogz:5.762>0.1]20048it [3:34:00,  1.45it/s, bound:3152 nc: 28 ncall:2.2e+06 eff:0.9% logz=-23476.56+/-0.14 dlogz:5.631>0.1]20077it [3:34:21,  1.43it/s, bound:3156 nc: 31 ncall:2.2e+06 eff:0.9% logz=-23476.49+/-0.07 dlogz:5.495>0.1]20107it [3:34:42,  1.43it/s, bound:3161 nc: 54 ncall:2.2e+06 eff:0.9% logz=-23476.41+/-0.10 dlogz:5.355>0.1]20137it [3:35:03,  1.43it/s, bound:3167 nc: 27 ncall:2.2e+06 eff:0.9% logz=-23476.33+/-0.13 dlogz:5.219>0.1]20169it [3:35:25,  1.45it/s, bound:3172 nc: 31 ncall:2.3e+06 eff:0.9% logz=-23476.25+/-0.14 dlogz:5.076>0.1]20198it [3:35:46,  1.42it/s, bound:3177 nc: 58 ncall:2.3e+06 eff:0.9% logz=-23476.18+/-0.08 dlogz:4.947>0.1]20229it [3:36:07,  1.44it/s, bound:3182 nc: 38 ncall:2.3e+06 eff:0.9% logz=-23476.10+/-0.11 dlogz:4.809>0.1]20258it [3:36:28,  1.43it/s, bound:3186 nc:507 ncall:2.3e+06 eff:0.9% logz=-23476.03+/-0.13 dlogz:4.681>0.1]20287it [3:36:49,  1.42it/s, bound:3192 nc: 33 ncall:2.3e+06 eff:0.9% logz=-23475.96+/-0.15 dlogz:4.554>0.1]20317it [3:37:10,  1.42it/s, bound:3197 nc: 31 ncall:2.3e+06 eff:0.9% logz=-23475.89+/-0.10 dlogz:4.425>0.1]20349it [3:37:30,  1.46it/s, bound:3202 nc: 17 ncall:2.3e+06 eff:0.9% logz=-23475.81+/-0.12 dlogz:4.289>0.1]20379it [3:37:52,  1.44it/s, bound:3207 nc: 34 ncall:2.3e+06 eff:0.9% logz=-23475.75+/-0.14 dlogz:4.164>0.1]20407it [3:38:13,  1.41it/s, bound:3211 nc:570 ncall:2.3e+06 eff:0.9% logz=-23475.69+/-0.15 dlogz:4.048>0.1]18:50 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
20436it [3:38:44,  1.22it/s, bound:3216 nc: 30 ncall:2.3e+06 eff:0.9% logz=-23475.62+/-0.11 dlogz:3.930>0.1]20468it [3:39:05,  1.30it/s, bound:3222 nc: 22 ncall:2.3e+06 eff:0.9% logz=-23475.56+/-0.13 dlogz:3.802>0.1]20500it [3:39:26,  1.37it/s, bound:3227 nc: 22 ncall:2.3e+06 eff:0.9% logz=-23475.49+/-0.15 dlogz:3.674>0.1]20530it [3:39:47,  1.39it/s, bound:3231 nc: 30 ncall:2.3e+06 eff:0.9% logz=-23475.43+/-0.16 dlogz:3.557>0.1]20560it [3:40:07,  1.41it/s, bound:3236 nc: 25 ncall:2.3e+06 eff:0.9% logz=-23475.37+/-0.13 dlogz:3.442>0.1]20592it [3:40:28,  1.45it/s, bound:3242 nc: 36 ncall:2.3e+06 eff:0.9% logz=-23475.31+/-0.14 dlogz:3.322>0.1]20622it [3:40:48,  1.45it/s, bound:3246 nc: 31 ncall:2.3e+06 eff:0.9% logz=-23475.25+/-0.15 dlogz:3.212>0.1]20653it [3:41:09,  1.48it/s, bound:3251 nc: 26 ncall:2.3e+06 eff:0.9% logz=-23475.20+/-0.16 dlogz:3.100>0.1]20683it [3:41:29,  1.47it/s, bound:3257 nc: 29 ncall:2.3e+06 eff:0.9% logz=-23475.15+/-0.17 dlogz:2.994>0.1]20715it [3:41:49,  1.52it/s, bound:3262 nc: 29 ncall:2.3e+06 eff:0.9% logz=-23475.10+/-0.15 dlogz:2.883>0.1]20746it [3:42:10,  1.51it/s, bound:3266 nc: 28 ncall:2.3e+06 eff:0.9% logz=-23475.05+/-0.16 dlogz:2.779>0.1]20776it [3:42:31,  1.48it/s, bound:3271 nc: 29 ncall:2.3e+06 eff:0.9% logz=-23475.00+/-0.17 dlogz:2.680>0.1]20808it [3:42:51,  1.51it/s, bound:3276 nc: 21 ncall:2.3e+06 eff:0.9% logz=-23474.95+/-0.18 dlogz:2.576>0.1]20838it [3:43:12,  1.49it/s, bound:3280 nc: 30 ncall:2.3e+06 eff:0.9% logz=-23474.91+/-0.17 dlogz:2.480>0.1]20868it [3:43:32,  1.49it/s, bound:3285 nc: 27 ncall:2.3e+06 eff:0.9% logz=-23474.87+/-0.17 dlogz:2.386>0.1]20898it [3:43:52,  1.49it/s, bound:3290 nc: 33 ncall:2.3e+06 eff:0.9% logz=-23474.82+/-0.18 dlogz:2.294>0.1]20928it [3:44:12,  1.50it/s, bound:3295 nc: 54 ncall:2.3e+06 eff:0.9% logz=-23474.78+/-0.18 dlogz:2.205>0.1]20957it [3:44:32,  1.48it/s, bound:3300 nc:365 ncall:2.3e+06 eff:0.9% logz=-23474.75+/-0.18 dlogz:2.236>0.1]20987it [3:44:52,  1.48it/s, bound:3305 nc: 30 ncall:2.3e+06 eff:0.9% logz=-23474.71+/-0.18 dlogz:2.149>0.1]21018it [3:45:13,  1.49it/s, bound:3310 nc: 33 ncall:2.3e+06 eff:0.9% logz=-23474.67+/-0.19 dlogz:2.062>0.1]21050it [3:45:33,  1.52it/s, bound:3315 nc: 32 ncall:2.3e+06 eff:0.9% logz=-23474.64+/-0.19 dlogz:1.974>0.1]21082it [3:45:52,  1.56it/s, bound:3321 nc: 22 ncall:2.4e+06 eff:0.9% logz=-23474.60+/-0.19 dlogz:1.890>0.1]21114it [3:46:10,  1.63it/s, bound:3326 nc: 30 ncall:2.4e+06 eff:0.9% logz=-23474.57+/-0.19 dlogz:1.807>0.1]21145it [3:46:27,  1.67it/s, bound:3330 nc: 64 ncall:2.4e+06 eff:0.9% logz=-23474.54+/-0.20 dlogz:1.732>0.1]21175it [3:46:45,  1.67it/s, bound:3335 nc: 31 ncall:2.4e+06 eff:0.9% logz=-23474.51+/-0.20 dlogz:1.659>0.1]21205it [3:47:04,  1.66it/s, bound:3340 nc:344 ncall:2.4e+06 eff:0.9% logz=-23474.48+/-0.20 dlogz:1.589>0.1]21236it [3:47:22,  1.67it/s, bound:3345 nc: 33 ncall:2.4e+06 eff:0.9% logz=-23474.45+/-0.20 dlogz:1.518>0.1]21265it [3:47:41,  1.64it/s, bound:3350 nc: 73 ncall:2.4e+06 eff:0.9% logz=-23474.43+/-0.21 dlogz:1.454>0.1]21294it [3:47:59,  1.63it/s, bound:3354 nc: 31 ncall:2.4e+06 eff:0.9% logz=-23474.40+/-0.21 dlogz:1.564>0.1]21325it [3:48:16,  1.67it/s, bound:3359 nc: 18 ncall:2.4e+06 eff:0.9% logz=-23474.38+/-0.21 dlogz:1.496>0.1]21356it [3:48:34,  1.69it/s, bound:3364 nc: 30 ncall:2.4e+06 eff:0.9% logz=-23474.35+/-0.21 dlogz:1.430>0.1]21386it [3:48:51,  1.72it/s, bound:3369 nc: 26 ncall:2.4e+06 eff:0.9% logz=-23474.33+/-0.22 dlogz:1.369>0.1]21417it [3:49:08,  1.74it/s, bound:3374 nc: 33 ncall:2.4e+06 eff:0.9% logz=-23474.31+/-0.22 dlogz:1.307>0.1]19:01 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
21437it [3:49:18,  1.81it/s, bound:3376 nc:102 ncall:2.4e+06 eff:0.9% logz=-23474.30+/-0.22 dlogz:1.269>0.1]21448it [3:49:34,  1.46it/s, bound:3379 nc: 27 ncall:2.4e+06 eff:0.9% logz=-23474.29+/-0.22 dlogz:1.248>0.1]21480it [3:49:49,  1.65it/s, bound:3383 nc: 31 ncall:2.4e+06 eff:0.9% logz=-23474.27+/-0.22 dlogz:1.188>0.1]21511it [3:50:05,  1.73it/s, bound:3388 nc: 36 ncall:2.4e+06 eff:0.9% logz=-23474.25+/-0.22 dlogz:1.132>0.1]21543it [3:50:21,  1.82it/s, bound:3393 nc: 33 ncall:2.4e+06 eff:0.9% logz=-23474.23+/-0.23 dlogz:1.077>0.1]21575it [3:50:37,  1.88it/s, bound:3398 nc: 28 ncall:2.4e+06 eff:0.9% logz=-23474.21+/-0.23 dlogz:1.024>0.1]21605it [3:50:53,  1.88it/s, bound:3404 nc: 28 ncall:2.4e+06 eff:0.9% logz=-23474.20+/-0.23 dlogz:0.976>0.1]21636it [3:51:09,  1.88it/s, bound:3408 nc: 39 ncall:2.4e+06 eff:0.9% logz=-23474.18+/-0.23 dlogz:0.928>0.1]21667it [3:51:25,  1.91it/s, bound:3413 nc: 27 ncall:2.4e+06 eff:0.9% logz=-23474.17+/-0.23 dlogz:0.882>0.1]21697it [3:51:41,  1.91it/s, bound:3418 nc: 30 ncall:2.4e+06 eff:0.9% logz=-23474.15+/-0.24 dlogz:0.839>0.1]21729it [3:51:57,  1.94it/s, bound:3423 nc: 41 ncall:2.4e+06 eff:0.9% logz=-23474.14+/-0.24 dlogz:0.795>0.1]21761it [3:52:12,  1.98it/s, bound:3428 nc: 50 ncall:2.4e+06 eff:0.9% logz=-23474.12+/-0.24 dlogz:0.753>0.1]21792it [3:52:28,  1.96it/s, bound:3432 nc: 44 ncall:2.4e+06 eff:0.9% logz=-23474.11+/-0.24 dlogz:0.714>0.1]21823it [3:52:44,  1.95it/s, bound:3437 nc: 36 ncall:2.4e+06 eff:0.9% logz=-23474.10+/-0.24 dlogz:0.676>0.1]21854it [3:53:00,  1.95it/s, bound:3442 nc: 17 ncall:2.4e+06 eff:0.9% logz=-23474.09+/-0.25 dlogz:0.641>0.1]21884it [3:53:16,  1.93it/s, bound:3447 nc: 29 ncall:2.4e+06 eff:0.9% logz=-23474.07+/-0.25 dlogz:0.608>0.1]21916it [3:53:32,  1.96it/s, bound:3452 nc: 36 ncall:2.4e+06 eff:0.9% logz=-23474.06+/-0.25 dlogz:0.574>0.1]21948it [3:53:47,  2.00it/s, bound:3457 nc: 23 ncall:2.4e+06 eff:0.9% logz=-23474.05+/-0.25 dlogz:0.542>0.1]21979it [3:54:03,  1.98it/s, bound:3461 nc: 35 ncall:2.4e+06 eff:0.9% logz=-23474.04+/-0.25 dlogz:0.512>0.1]22010it [3:54:18,  2.00it/s, bound:3466 nc: 36 ncall:2.4e+06 eff:0.9% logz=-23474.03+/-0.25 dlogz:0.484>0.1]22042it [3:54:34,  2.00it/s, bound:3471 nc: 34 ncall:2.5e+06 eff:0.9% logz=-23474.02+/-0.25 dlogz:0.456>0.1]22073it [3:54:49,  2.02it/s, bound:3476 nc: 30 ncall:2.5e+06 eff:0.9% logz=-23474.01+/-0.25 dlogz:0.431>0.1]22103it [3:55:04,  2.00it/s, bound:3480 nc: 29 ncall:2.5e+06 eff:0.9% logz=-23474.00+/-0.26 dlogz:0.407>0.1]22134it [3:55:20,  2.01it/s, bound:3485 nc: 35 ncall:2.5e+06 eff:0.9% logz=-23473.99+/-0.26 dlogz:0.384>0.1]22164it [3:55:35,  1.99it/s, bound:3490 nc: 25 ncall:2.5e+06 eff:0.9% logz=-23473.99+/-0.26 dlogz:0.363>0.1]22196it [3:55:51,  2.01it/s, bound:3495 nc: 69 ncall:2.5e+06 eff:0.9% logz=-23473.98+/-0.26 dlogz:0.341>0.1]22226it [3:56:06,  2.00it/s, bound:3500 nc: 28 ncall:2.5e+06 eff:0.9% logz=-23473.97+/-0.26 dlogz:0.322>0.1]22256it [3:56:21,  1.99it/s, bound:3504 nc: 21 ncall:2.5e+06 eff:0.9% logz=-23473.96+/-0.26 dlogz:0.304>0.1]22286it [3:56:36,  1.99it/s, bound:3509 nc: 27 ncall:2.5e+06 eff:0.9% logz=-23473.96+/-0.26 dlogz:0.287>0.1]22317it [3:56:51,  2.03it/s, bound:3514 nc: 27 ncall:2.5e+06 eff:0.9% logz=-23473.95+/-0.26 dlogz:0.271>0.1]22349it [3:57:06,  2.04it/s, bound:3518 nc: 31 ncall:2.5e+06 eff:0.9% logz=-23473.94+/-0.26 dlogz:0.254>0.1]22378it [3:57:22,  2.00it/s, bound:3523 nc: 27 ncall:2.5e+06 eff:0.9% logz=-23473.94+/-0.27 dlogz:0.240>0.1]22409it [3:57:37,  2.02it/s, bound:3527 nc: 32 ncall:2.5e+06 eff:0.9% logz=-23473.93+/-0.27 dlogz:0.226>0.1]22439it [3:57:52,  2.00it/s, bound:3532 nc: 33 ncall:2.5e+06 eff:0.9% logz=-23473.93+/-0.27 dlogz:0.213>0.1]22469it [3:58:07,  2.01it/s, bound:3537 nc: 25 ncall:2.5e+06 eff:0.9% logz=-23473.92+/-0.27 dlogz:0.201>0.1]22499it [3:58:22,  2.00it/s, bound:3541 nc: 60 ncall:2.5e+06 eff:0.9% logz=-23473.92+/-0.27 dlogz:0.190>0.1]22528it [3:58:37,  1.99it/s, bound:3546 nc: 33 ncall:2.5e+06 eff:0.9% logz=-23473.91+/-0.27 dlogz:0.179>0.1]22559it [3:58:51,  2.02it/s, bound:3550 nc: 26 ncall:2.5e+06 eff:0.9% logz=-23473.91+/-0.27 dlogz:0.169>0.1]22589it [3:59:07,  1.99it/s, bound:3555 nc: 30 ncall:2.5e+06 eff:0.9% logz=-23473.90+/-0.27 dlogz:0.159>0.1]22621it [3:59:22,  2.02it/s, bound:3559 nc: 25 ncall:2.5e+06 eff:0.9% logz=-23473.90+/-0.27 dlogz:0.149>0.1]22651it [3:59:38,  1.99it/s, bound:3564 nc:131 ncall:2.5e+06 eff:0.9% logz=-23473.89+/-0.27 dlogz:0.141>0.1]22680it [3:59:53,  1.98it/s, bound:3569 nc: 33 ncall:2.5e+06 eff:0.9% logz=-23473.89+/-0.27 dlogz:0.133>0.1]22710it [4:00:07,  2.00it/s, bound:3573 nc: 35 ncall:2.5e+06 eff:0.9% logz=-23473.89+/-0.27 dlogz:0.125>0.1]19:12 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
22742it [4:00:33,  1.70it/s, bound:3578 nc: 35 ncall:2.5e+06 eff:0.9% logz=-23473.88+/-0.27 dlogz:0.117>0.1]22774it [4:00:48,  1.80it/s, bound:3583 nc: 32 ncall:2.5e+06 eff:0.9% logz=-23473.88+/-0.27 dlogz:0.111>0.1]22804it [4:01:03,  1.85it/s, bound:3587 nc: 43 ncall:2.5e+06 eff:0.9% logz=-23473.88+/-0.27 dlogz:0.105>0.1]22828it [4:01:03,  2.47it/s, bound:3590 nc:  1 ncall:2.5e+06 eff:0.9% logz=-23473.87+/-0.28 dlogz:0.100>0.1]19:13 bilby INFO    : Written checkpoint file ../data/nested_sampling//logl_lims_resume.pickle
19:13 bilby INFO    : Starting to close worker pool.
19:13 bilby INFO    : Finished closing worker pool.
22828it [4:01:13,  1.58it/s, bound:3590 nc:  1 ncall:2.5e+06 eff:0.9% logz=-23473.81+/-0.28 dlogz:0.000>0.1]19:13 bilby INFO    : Rejection sampling nested samples to obtain 1959 posterior samples
19:13 bilby INFO    : Sampling time: 4:01:13.376025
<frozen importlib._bootstrap>:228: RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility. Expected 88 from C header, got 96 from PyObject
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1374: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  posterior[key] = priors[key].peak
/fred/oz022/tkimpson/conda_envs/OzStar/lib/python3.9/site-packages/bilby/core/result.py:1401: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  data_frame['log_likelihood'] = getattr(
19:13 bilby INFO    : Summary of results:
nsamples: 1959
ln_noise_evidence:    nan
ln_evidence: -23473.815 +/-  0.344
ln_bayes_factor:    nan +/-  0.344



